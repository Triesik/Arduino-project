
ESW_Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000062  00800200  0000325a  000032ee  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000325a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000107b  00800262  00800262  00003350  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00003350  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003380  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000006c8  00000000  00000000  000033c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00008cea  00000000  00000000  00003a88  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000026e7  00000000  00000000  0000c772  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000045c9  00000000  00000000  0000ee59  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000016c8  00000000  00000000  00013424  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00002de4  00000000  00000000  00014aec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00007d44  00000000  00000000  000178d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000750  00000000  00000000  0001f614  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	46 c2       	rjmp	.+1164   	; 0x48e <__ctors_end>
       2:	00 00       	nop
       4:	65 c2       	rjmp	.+1226   	; 0x4d0 <__bad_interrupt>
       6:	00 00       	nop
       8:	63 c2       	rjmp	.+1222   	; 0x4d0 <__bad_interrupt>
       a:	00 00       	nop
       c:	61 c2       	rjmp	.+1218   	; 0x4d0 <__bad_interrupt>
       e:	00 00       	nop
      10:	5f c2       	rjmp	.+1214   	; 0x4d0 <__bad_interrupt>
      12:	00 00       	nop
      14:	5d c2       	rjmp	.+1210   	; 0x4d0 <__bad_interrupt>
      16:	00 00       	nop
      18:	5b c2       	rjmp	.+1206   	; 0x4d0 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	59 c2       	rjmp	.+1202   	; 0x4d0 <__bad_interrupt>
      1e:	00 00       	nop
      20:	57 c2       	rjmp	.+1198   	; 0x4d0 <__bad_interrupt>
      22:	00 00       	nop
      24:	55 c2       	rjmp	.+1194   	; 0x4d0 <__bad_interrupt>
      26:	00 00       	nop
      28:	53 c2       	rjmp	.+1190   	; 0x4d0 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	51 c2       	rjmp	.+1186   	; 0x4d0 <__bad_interrupt>
      2e:	00 00       	nop
      30:	a2 c5       	rjmp	.+2884   	; 0xb76 <__vector_12>
      32:	00 00       	nop
      34:	4d c2       	rjmp	.+1178   	; 0x4d0 <__bad_interrupt>
      36:	00 00       	nop
      38:	4b c2       	rjmp	.+1174   	; 0x4d0 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	49 c2       	rjmp	.+1170   	; 0x4d0 <__bad_interrupt>
      3e:	00 00       	nop
      40:	47 c2       	rjmp	.+1166   	; 0x4d0 <__bad_interrupt>
      42:	00 00       	nop
      44:	45 c2       	rjmp	.+1162   	; 0x4d0 <__bad_interrupt>
      46:	00 00       	nop
      48:	43 c2       	rjmp	.+1158   	; 0x4d0 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	41 c2       	rjmp	.+1154   	; 0x4d0 <__bad_interrupt>
      4e:	00 00       	nop
      50:	3f c2       	rjmp	.+1150   	; 0x4d0 <__bad_interrupt>
      52:	00 00       	nop
      54:	3d c2       	rjmp	.+1146   	; 0x4d0 <__bad_interrupt>
      56:	00 00       	nop
      58:	3b c2       	rjmp	.+1142   	; 0x4d0 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	39 c2       	rjmp	.+1138   	; 0x4d0 <__bad_interrupt>
      5e:	00 00       	nop
      60:	37 c2       	rjmp	.+1134   	; 0x4d0 <__bad_interrupt>
      62:	00 00       	nop
      64:	0c 94 3f 11 	jmp	0x227e	; 0x227e <__vector_25>
      68:	0c 94 91 11 	jmp	0x2322	; 0x2322 <__vector_26>
      6c:	31 c2       	rjmp	.+1122   	; 0x4d0 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2f c2       	rjmp	.+1118   	; 0x4d0 <__bad_interrupt>
      72:	00 00       	nop
      74:	2d c2       	rjmp	.+1114   	; 0x4d0 <__bad_interrupt>
      76:	00 00       	nop
      78:	2b c2       	rjmp	.+1110   	; 0x4d0 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	29 c2       	rjmp	.+1106   	; 0x4d0 <__bad_interrupt>
      7e:	00 00       	nop
      80:	27 c2       	rjmp	.+1102   	; 0x4d0 <__bad_interrupt>
      82:	00 00       	nop
      84:	25 c2       	rjmp	.+1098   	; 0x4d0 <__bad_interrupt>
      86:	00 00       	nop
      88:	23 c2       	rjmp	.+1094   	; 0x4d0 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	21 c2       	rjmp	.+1090   	; 0x4d0 <__bad_interrupt>
      8e:	00 00       	nop
      90:	0c 94 d5 11 	jmp	0x23aa	; 0x23aa <__vector_36>
      94:	0c 94 27 12 	jmp	0x244e	; 0x244e <__vector_37>
      98:	1b c2       	rjmp	.+1078   	; 0x4d0 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	0c 94 bf 14 	jmp	0x297e	; 0x297e <__vector_39>
      a0:	17 c2       	rjmp	.+1070   	; 0x4d0 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	15 c2       	rjmp	.+1066   	; 0x4d0 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	13 c2       	rjmp	.+1062   	; 0x4d0 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	11 c2       	rjmp	.+1058   	; 0x4d0 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	0f c2       	rjmp	.+1054   	; 0x4d0 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	0d c2       	rjmp	.+1050   	; 0x4d0 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	0b c2       	rjmp	.+1046   	; 0x4d0 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	09 c2       	rjmp	.+1042   	; 0x4d0 <__bad_interrupt>
      be:	00 00       	nop
      c0:	07 c2       	rjmp	.+1038   	; 0x4d0 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	05 c2       	rjmp	.+1034   	; 0x4d0 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	03 c2       	rjmp	.+1030   	; 0x4d0 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	0c 94 6b 12 	jmp	0x24d6	; 0x24d6 <__vector_51>
      d0:	0c 94 bd 12 	jmp	0x257a	; 0x257a <__vector_52>
      d4:	fd c1       	rjmp	.+1018   	; 0x4d0 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	0c 94 01 13 	jmp	0x2602	; 0x2602 <__vector_54>
      dc:	0c 94 53 13 	jmp	0x26a6	; 0x26a6 <__vector_55>
      e0:	f7 c1       	rjmp	.+1006   	; 0x4d0 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	be 01       	movw	r22, r28
      e6:	be 01       	movw	r22, r28
      e8:	be 01       	movw	r22, r28
      ea:	f8 01       	movw	r30, r16
      ec:	00 02       	muls	r16, r16
      ee:	16 02       	muls	r17, r22
      f0:	be 01       	movw	r22, r28
      f2:	be 01       	movw	r22, r28
      f4:	f8 01       	movw	r30, r16
      f6:	00 02       	muls	r16, r16
      f8:	e1 14       	cp	r14, r1
      fa:	51 15       	cp	r21, r1
      fc:	51 15       	cp	r21, r1
      fe:	51 15       	cp	r21, r1
     100:	51 15       	cp	r21, r1
     102:	51 15       	cp	r21, r1
     104:	51 15       	cp	r21, r1
     106:	51 15       	cp	r21, r1
     108:	e1 14       	cp	r14, r1
     10a:	51 15       	cp	r21, r1
     10c:	51 15       	cp	r21, r1
     10e:	51 15       	cp	r21, r1
     110:	51 15       	cp	r21, r1
     112:	51 15       	cp	r21, r1
     114:	51 15       	cp	r21, r1
     116:	51 15       	cp	r21, r1
     118:	e3 14       	cp	r14, r3
     11a:	51 15       	cp	r21, r1
     11c:	51 15       	cp	r21, r1
     11e:	51 15       	cp	r21, r1
     120:	51 15       	cp	r21, r1
     122:	51 15       	cp	r21, r1
     124:	51 15       	cp	r21, r1
     126:	51 15       	cp	r21, r1
     128:	51 15       	cp	r21, r1
     12a:	51 15       	cp	r21, r1
     12c:	51 15       	cp	r21, r1
     12e:	51 15       	cp	r21, r1
     130:	51 15       	cp	r21, r1
     132:	51 15       	cp	r21, r1
     134:	51 15       	cp	r21, r1
     136:	51 15       	cp	r21, r1
     138:	e3 14       	cp	r14, r3
     13a:	51 15       	cp	r21, r1
     13c:	51 15       	cp	r21, r1
     13e:	51 15       	cp	r21, r1
     140:	51 15       	cp	r21, r1
     142:	51 15       	cp	r21, r1
     144:	51 15       	cp	r21, r1
     146:	51 15       	cp	r21, r1
     148:	51 15       	cp	r21, r1
     14a:	51 15       	cp	r21, r1
     14c:	51 15       	cp	r21, r1
     14e:	51 15       	cp	r21, r1
     150:	51 15       	cp	r21, r1
     152:	51 15       	cp	r21, r1
     154:	51 15       	cp	r21, r1
     156:	51 15       	cp	r21, r1
     158:	4d 15       	cp	r20, r13
     15a:	51 15       	cp	r21, r1
     15c:	51 15       	cp	r21, r1
     15e:	51 15       	cp	r21, r1
     160:	51 15       	cp	r21, r1
     162:	51 15       	cp	r21, r1
     164:	51 15       	cp	r21, r1
     166:	51 15       	cp	r21, r1
     168:	18 15       	cp	r17, r8
     16a:	51 15       	cp	r21, r1
     16c:	51 15       	cp	r21, r1
     16e:	51 15       	cp	r21, r1
     170:	51 15       	cp	r21, r1
     172:	51 15       	cp	r21, r1
     174:	51 15       	cp	r21, r1
     176:	51 15       	cp	r21, r1
     178:	51 15       	cp	r21, r1
     17a:	51 15       	cp	r21, r1
     17c:	51 15       	cp	r21, r1
     17e:	51 15       	cp	r21, r1
     180:	51 15       	cp	r21, r1
     182:	51 15       	cp	r21, r1
     184:	51 15       	cp	r21, r1
     186:	51 15       	cp	r21, r1
     188:	0c 15       	cp	r16, r12
     18a:	51 15       	cp	r21, r1
     18c:	51 15       	cp	r21, r1
     18e:	51 15       	cp	r21, r1
     190:	51 15       	cp	r21, r1
     192:	51 15       	cp	r21, r1
     194:	51 15       	cp	r21, r1
     196:	51 15       	cp	r21, r1
     198:	30 15       	cp	r19, r0

0000019a <prvIdleTask>:
     19a:	0c e2       	ldi	r16, 0x2C	; 44
     19c:	12 e1       	ldi	r17, 0x12	; 18
     19e:	0f 2e       	mov	r0, r31
     1a0:	fc e5       	ldi	r31, 0x5C	; 92
     1a2:	ef 2e       	mov	r14, r31
     1a4:	f2 e1       	ldi	r31, 0x12	; 18
     1a6:	ff 2e       	mov	r15, r31
     1a8:	f0 2d       	mov	r31, r0
     1aa:	80 91 2b 12 	lds	r24, 0x122B	; 0x80122b <uxDeletedTasksWaitingCleanUp>
     1ae:	88 23       	and	r24, r24
     1b0:	11 f1       	breq	.+68     	; 0x1f6 <prvIdleTask+0x5c>
     1b2:	0f b6       	in	r0, 0x3f	; 63
     1b4:	f8 94       	cli
     1b6:	0f 92       	push	r0
     1b8:	d8 01       	movw	r26, r16
     1ba:	17 96       	adiw	r26, 0x07	; 7
     1bc:	ed 91       	ld	r30, X+
     1be:	fc 91       	ld	r31, X
     1c0:	18 97       	sbiw	r26, 0x08	; 8
     1c2:	c0 85       	ldd	r28, Z+8	; 0x08
     1c4:	d1 85       	ldd	r29, Z+9	; 0x09
     1c6:	ce 01       	movw	r24, r28
     1c8:	02 96       	adiw	r24, 0x02	; 2
     1ca:	3d d3       	rcall	.+1658   	; 0x846 <uxListRemove>
     1cc:	80 91 1f 12 	lds	r24, 0x121F	; 0x80121f <uxCurrentNumberOfTasks>
     1d0:	81 50       	subi	r24, 0x01	; 1
     1d2:	80 93 1f 12 	sts	0x121F, r24	; 0x80121f <uxCurrentNumberOfTasks>
     1d6:	80 91 2b 12 	lds	r24, 0x122B	; 0x80122b <uxDeletedTasksWaitingCleanUp>
     1da:	81 50       	subi	r24, 0x01	; 1
     1dc:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <uxDeletedTasksWaitingCleanUp>
     1e0:	0f 90       	pop	r0
     1e2:	0f be       	out	0x3f, r0	; 63
     1e4:	8b 8d       	ldd	r24, Y+27	; 0x1b
     1e6:	9c 8d       	ldd	r25, Y+28	; 0x1c
     1e8:	8c d2       	rcall	.+1304   	; 0x702 <vPortFree>
     1ea:	ce 01       	movw	r24, r28
     1ec:	8a d2       	rcall	.+1300   	; 0x702 <vPortFree>
     1ee:	80 91 2b 12 	lds	r24, 0x122B	; 0x80122b <uxDeletedTasksWaitingCleanUp>
     1f2:	81 11       	cpse	r24, r1
     1f4:	de cf       	rjmp	.-68     	; 0x1b2 <prvIdleTask+0x18>
     1f6:	f7 01       	movw	r30, r14
     1f8:	80 81       	ld	r24, Z
     1fa:	82 30       	cpi	r24, 0x02	; 2
     1fc:	08 f0       	brcs	.+2      	; 0x200 <prvIdleTask+0x66>
     1fe:	f8 d3       	rcall	.+2032   	; 0x9f0 <vPortYield>
     200:	0e 94 19 0f 	call	0x1e32	; 0x1e32 <vApplicationIdleHook>
     204:	d2 cf       	rjmp	.-92     	; 0x1aa <prvIdleTask+0x10>

00000206 <prvTimerTask>:
     206:	cf 93       	push	r28
     208:	df 93       	push	r29
     20a:	cd b7       	in	r28, 0x3d	; 61
     20c:	de b7       	in	r29, 0x3e	; 62
     20e:	60 97       	sbiw	r28, 0x10	; 16
     210:	0f b6       	in	r0, 0x3f	; 63
     212:	f8 94       	cli
     214:	de bf       	out	0x3e, r29	; 62
     216:	0f be       	out	0x3f, r0	; 63
     218:	cd bf       	out	0x3d, r28	; 61
     21a:	ce 01       	movw	r24, r28
     21c:	01 96       	adiw	r24, 0x01	; 1
     21e:	9a 87       	std	Y+10, r25	; 0x0a
     220:	89 87       	std	Y+9, r24	; 0x09
     222:	81 2c       	mov	r8, r1
     224:	91 2c       	mov	r9, r1
     226:	a1 2c       	mov	r10, r1
     228:	b1 2c       	mov	r11, r1
     22a:	69 84       	ldd	r6, Y+9	; 0x09
     22c:	7a 84       	ldd	r7, Y+10	; 0x0a
     22e:	e0 91 94 12 	lds	r30, 0x1294	; 0x801294 <pxCurrentTimerList>
     232:	f0 91 95 12 	lds	r31, 0x1295	; 0x801295 <pxCurrentTimerList+0x1>
     236:	80 81       	ld	r24, Z
     238:	88 23       	and	r24, r24
     23a:	09 f4       	brne	.+2      	; 0x23e <prvTimerTask+0x38>
     23c:	0e c1       	rjmp	.+540    	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
     23e:	07 80       	ldd	r0, Z+7	; 0x07
     240:	f0 85       	ldd	r31, Z+8	; 0x08
     242:	e0 2d       	mov	r30, r0
     244:	20 80       	ld	r2, Z
     246:	31 80       	ldd	r3, Z+1	; 0x01
     248:	42 80       	ldd	r4, Z+2	; 0x02
     24a:	53 80       	ldd	r5, Z+3	; 0x03
     24c:	0e 94 62 0a 	call	0x14c4	; 0x14c4 <vTaskSuspendAll>
     250:	ce 01       	movw	r24, r28
     252:	01 96       	adiw	r24, 0x01	; 1
     254:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <prvSampleTimeNow>
     258:	6b 87       	std	Y+11, r22	; 0x0b
     25a:	7c 87       	std	Y+12, r23	; 0x0c
     25c:	8d 87       	std	Y+13, r24	; 0x0d
     25e:	9e 87       	std	Y+14, r25	; 0x0e
     260:	89 81       	ldd	r24, Y+1	; 0x01
     262:	81 11       	cpse	r24, r1
     264:	64 c0       	rjmp	.+200    	; 0x32e <prvTimerTask+0x128>
     266:	8b 85       	ldd	r24, Y+11	; 0x0b
     268:	9c 85       	ldd	r25, Y+12	; 0x0c
     26a:	ad 85       	ldd	r26, Y+13	; 0x0d
     26c:	be 85       	ldd	r27, Y+14	; 0x0e
     26e:	82 15       	cp	r24, r2
     270:	93 05       	cpc	r25, r3
     272:	a4 05       	cpc	r26, r4
     274:	b5 05       	cpc	r27, r5
     276:	08 f4       	brcc	.+2      	; 0x27a <prvTimerTask+0x74>
     278:	44 c0       	rjmp	.+136    	; 0x302 <prvTimerTask+0xfc>
     27a:	0e 94 48 0b 	call	0x1690	; 0x1690 <xTaskResumeAll>
     27e:	e0 91 94 12 	lds	r30, 0x1294	; 0x801294 <pxCurrentTimerList>
     282:	f0 91 95 12 	lds	r31, 0x1295	; 0x801295 <pxCurrentTimerList+0x1>
     286:	07 80       	ldd	r0, Z+7	; 0x07
     288:	f0 85       	ldd	r31, Z+8	; 0x08
     28a:	e0 2d       	mov	r30, r0
     28c:	a0 85       	ldd	r26, Z+8	; 0x08
     28e:	b1 85       	ldd	r27, Z+9	; 0x09
     290:	b8 8b       	std	Y+16, r27	; 0x10
     292:	af 87       	std	Y+15, r26	; 0x0f
     294:	cd 01       	movw	r24, r26
     296:	02 96       	adiw	r24, 0x02	; 2
     298:	d6 d2       	rcall	.+1452   	; 0x846 <uxListRemove>
     29a:	ef 85       	ldd	r30, Y+15	; 0x0f
     29c:	f8 89       	ldd	r31, Y+16	; 0x10
     29e:	87 89       	ldd	r24, Z+23	; 0x17
     2a0:	82 ff       	sbrs	r24, 2
     2a2:	21 c0       	rjmp	.+66     	; 0x2e6 <prvTimerTask+0xe0>
     2a4:	46 85       	ldd	r20, Z+14	; 0x0e
     2a6:	57 85       	ldd	r21, Z+15	; 0x0f
     2a8:	60 89       	ldd	r22, Z+16	; 0x10
     2aa:	71 89       	ldd	r23, Z+17	; 0x11
     2ac:	42 0d       	add	r20, r2
     2ae:	53 1d       	adc	r21, r3
     2b0:	64 1d       	adc	r22, r4
     2b2:	75 1d       	adc	r23, r5
     2b4:	72 01       	movw	r14, r4
     2b6:	61 01       	movw	r12, r2
     2b8:	0b 85       	ldd	r16, Y+11	; 0x0b
     2ba:	1c 85       	ldd	r17, Y+12	; 0x0c
     2bc:	2d 85       	ldd	r18, Y+13	; 0x0d
     2be:	3e 85       	ldd	r19, Y+14	; 0x0e
     2c0:	cf 01       	movw	r24, r30
     2c2:	0e 94 97 0d 	call	0x1b2e	; 0x1b2e <prvInsertTimerInActiveList>
     2c6:	88 23       	and	r24, r24
     2c8:	99 f0       	breq	.+38     	; 0x2f0 <prvTimerTask+0xea>
     2ca:	c8 2c       	mov	r12, r8
     2cc:	d9 2c       	mov	r13, r9
     2ce:	ea 2c       	mov	r14, r10
     2d0:	fb 2c       	mov	r15, r11
     2d2:	00 e0       	ldi	r16, 0x00	; 0
     2d4:	10 e0       	ldi	r17, 0x00	; 0
     2d6:	a2 01       	movw	r20, r4
     2d8:	91 01       	movw	r18, r2
     2da:	60 e0       	ldi	r22, 0x00	; 0
     2dc:	8f 85       	ldd	r24, Y+15	; 0x0f
     2de:	98 89       	ldd	r25, Y+16	; 0x10
     2e0:	0e 94 28 0e 	call	0x1c50	; 0x1c50 <xTimerGenericCommand>
     2e4:	05 c0       	rjmp	.+10     	; 0x2f0 <prvTimerTask+0xea>
     2e6:	8e 7f       	andi	r24, 0xFE	; 254
     2e8:	af 85       	ldd	r26, Y+15	; 0x0f
     2ea:	b8 89       	ldd	r27, Y+16	; 0x10
     2ec:	57 96       	adiw	r26, 0x17	; 23
     2ee:	8c 93       	st	X, r24
     2f0:	af 85       	ldd	r26, Y+15	; 0x0f
     2f2:	b8 89       	ldd	r27, Y+16	; 0x10
     2f4:	54 96       	adiw	r26, 0x14	; 20
     2f6:	ed 91       	ld	r30, X+
     2f8:	fc 91       	ld	r31, X
     2fa:	55 97       	sbiw	r26, 0x15	; 21
     2fc:	cd 01       	movw	r24, r26
     2fe:	19 95       	eicall
     300:	9e c0       	rjmp	.+316    	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     302:	20 e0       	ldi	r18, 0x00	; 0
     304:	b2 01       	movw	r22, r4
     306:	a1 01       	movw	r20, r2
     308:	8b 85       	ldd	r24, Y+11	; 0x0b
     30a:	9c 85       	ldd	r25, Y+12	; 0x0c
     30c:	ad 85       	ldd	r26, Y+13	; 0x0d
     30e:	be 85       	ldd	r27, Y+14	; 0x0e
     310:	48 1b       	sub	r20, r24
     312:	59 0b       	sbc	r21, r25
     314:	6a 0b       	sbc	r22, r26
     316:	7b 0b       	sbc	r23, r27
     318:	80 91 90 12 	lds	r24, 0x1290	; 0x801290 <xTimerQueue>
     31c:	90 91 91 12 	lds	r25, 0x1291	; 0x801291 <xTimerQueue+0x1>
     320:	d1 d6       	rcall	.+3490   	; 0x10c4 <vQueueWaitForMessageRestricted>
     322:	0e 94 48 0b 	call	0x1690	; 0x1690 <xTaskResumeAll>
     326:	81 11       	cpse	r24, r1
     328:	8a c0       	rjmp	.+276    	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     32a:	62 d3       	rcall	.+1732   	; 0x9f0 <vPortYield>
     32c:	88 c0       	rjmp	.+272    	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     32e:	0e 94 48 0b 	call	0x1690	; 0x1690 <xTaskResumeAll>
     332:	85 c0       	rjmp	.+266    	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     334:	89 81       	ldd	r24, Y+1	; 0x01
     336:	88 23       	and	r24, r24
     338:	0c f4       	brge	.+2      	; 0x33c <prvTimerTask+0x136>
     33a:	81 c0       	rjmp	.+258    	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     33c:	4e 80       	ldd	r4, Y+6	; 0x06
     33e:	5f 80       	ldd	r5, Y+7	; 0x07
     340:	d2 01       	movw	r26, r4
     342:	1c 96       	adiw	r26, 0x0c	; 12
     344:	8d 91       	ld	r24, X+
     346:	9c 91       	ld	r25, X
     348:	1d 97       	sbiw	r26, 0x0d	; 13
     34a:	89 2b       	or	r24, r25
     34c:	19 f0       	breq	.+6      	; 0x354 <prvTimerTask+0x14e>
     34e:	c2 01       	movw	r24, r4
     350:	02 96       	adiw	r24, 0x02	; 2
     352:	79 d2       	rcall	.+1266   	; 0x846 <uxListRemove>
     354:	ce 01       	movw	r24, r28
     356:	08 96       	adiw	r24, 0x08	; 8
     358:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <prvSampleTimeNow>
     35c:	8b 01       	movw	r16, r22
     35e:	9c 01       	movw	r18, r24
     360:	e9 81       	ldd	r30, Y+1	; 0x01
     362:	0e 2e       	mov	r0, r30
     364:	00 0c       	add	r0, r0
     366:	ff 0b       	sbc	r31, r31
     368:	ea 30       	cpi	r30, 0x0A	; 10
     36a:	f1 05       	cpc	r31, r1
     36c:	08 f0       	brcs	.+2      	; 0x370 <prvTimerTask+0x16a>
     36e:	67 c0       	rjmp	.+206    	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     370:	88 27       	eor	r24, r24
     372:	ee 58       	subi	r30, 0x8E	; 142
     374:	ff 4f       	sbci	r31, 0xFF	; 255
     376:	8f 4f       	sbci	r24, 0xFF	; 255
     378:	0c 94 a4 17 	jmp	0x2f48	; 0x2f48 <__tablejump2__>
     37c:	f2 01       	movw	r30, r4
     37e:	87 89       	ldd	r24, Z+23	; 0x17
     380:	81 60       	ori	r24, 0x01	; 1
     382:	87 8b       	std	Z+23, r24	; 0x17
     384:	ca 80       	ldd	r12, Y+2	; 0x02
     386:	db 80       	ldd	r13, Y+3	; 0x03
     388:	ec 80       	ldd	r14, Y+4	; 0x04
     38a:	fd 80       	ldd	r15, Y+5	; 0x05
     38c:	46 85       	ldd	r20, Z+14	; 0x0e
     38e:	57 85       	ldd	r21, Z+15	; 0x0f
     390:	60 89       	ldd	r22, Z+16	; 0x10
     392:	71 89       	ldd	r23, Z+17	; 0x11
     394:	4c 0d       	add	r20, r12
     396:	5d 1d       	adc	r21, r13
     398:	6e 1d       	adc	r22, r14
     39a:	7f 1d       	adc	r23, r15
     39c:	c2 01       	movw	r24, r4
     39e:	0e 94 97 0d 	call	0x1b2e	; 0x1b2e <prvInsertTimerInActiveList>
     3a2:	88 23       	and	r24, r24
     3a4:	09 f4       	brne	.+2      	; 0x3a8 <prvTimerTask+0x1a2>
     3a6:	4b c0       	rjmp	.+150    	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     3a8:	d2 01       	movw	r26, r4
     3aa:	54 96       	adiw	r26, 0x14	; 20
     3ac:	ed 91       	ld	r30, X+
     3ae:	fc 91       	ld	r31, X
     3b0:	55 97       	sbiw	r26, 0x15	; 21
     3b2:	c2 01       	movw	r24, r4
     3b4:	19 95       	eicall
     3b6:	f2 01       	movw	r30, r4
     3b8:	87 89       	ldd	r24, Z+23	; 0x17
     3ba:	82 ff       	sbrs	r24, 2
     3bc:	40 c0       	rjmp	.+128    	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     3be:	4a 81       	ldd	r20, Y+2	; 0x02
     3c0:	5b 81       	ldd	r21, Y+3	; 0x03
     3c2:	6c 81       	ldd	r22, Y+4	; 0x04
     3c4:	7d 81       	ldd	r23, Y+5	; 0x05
     3c6:	86 85       	ldd	r24, Z+14	; 0x0e
     3c8:	97 85       	ldd	r25, Z+15	; 0x0f
     3ca:	a0 89       	ldd	r26, Z+16	; 0x10
     3cc:	b1 89       	ldd	r27, Z+17	; 0x11
     3ce:	9a 01       	movw	r18, r20
     3d0:	ab 01       	movw	r20, r22
     3d2:	28 0f       	add	r18, r24
     3d4:	39 1f       	adc	r19, r25
     3d6:	4a 1f       	adc	r20, r26
     3d8:	5b 1f       	adc	r21, r27
     3da:	c8 2c       	mov	r12, r8
     3dc:	d9 2c       	mov	r13, r9
     3de:	ea 2c       	mov	r14, r10
     3e0:	fb 2c       	mov	r15, r11
     3e2:	00 e0       	ldi	r16, 0x00	; 0
     3e4:	10 e0       	ldi	r17, 0x00	; 0
     3e6:	60 e0       	ldi	r22, 0x00	; 0
     3e8:	c2 01       	movw	r24, r4
     3ea:	0e 94 28 0e 	call	0x1c50	; 0x1c50 <xTimerGenericCommand>
     3ee:	27 c0       	rjmp	.+78     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     3f0:	d2 01       	movw	r26, r4
     3f2:	57 96       	adiw	r26, 0x17	; 23
     3f4:	8c 91       	ld	r24, X
     3f6:	57 97       	sbiw	r26, 0x17	; 23
     3f8:	8e 7f       	andi	r24, 0xFE	; 254
     3fa:	57 96       	adiw	r26, 0x17	; 23
     3fc:	8c 93       	st	X, r24
     3fe:	1f c0       	rjmp	.+62     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     400:	f2 01       	movw	r30, r4
     402:	87 89       	ldd	r24, Z+23	; 0x17
     404:	81 60       	ori	r24, 0x01	; 1
     406:	87 8b       	std	Z+23, r24	; 0x17
     408:	4a 81       	ldd	r20, Y+2	; 0x02
     40a:	5b 81       	ldd	r21, Y+3	; 0x03
     40c:	6c 81       	ldd	r22, Y+4	; 0x04
     40e:	7d 81       	ldd	r23, Y+5	; 0x05
     410:	46 87       	std	Z+14, r20	; 0x0e
     412:	57 87       	std	Z+15, r21	; 0x0f
     414:	60 8b       	std	Z+16, r22	; 0x10
     416:	71 8b       	std	Z+17, r23	; 0x11
     418:	40 0f       	add	r20, r16
     41a:	51 1f       	adc	r21, r17
     41c:	62 1f       	adc	r22, r18
     41e:	73 1f       	adc	r23, r19
     420:	68 01       	movw	r12, r16
     422:	79 01       	movw	r14, r18
     424:	c2 01       	movw	r24, r4
     426:	0e 94 97 0d 	call	0x1b2e	; 0x1b2e <prvInsertTimerInActiveList>
     42a:	09 c0       	rjmp	.+18     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     42c:	f2 01       	movw	r30, r4
     42e:	87 89       	ldd	r24, Z+23	; 0x17
     430:	81 fd       	sbrc	r24, 1
     432:	03 c0       	rjmp	.+6      	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
     434:	c2 01       	movw	r24, r4
     436:	65 d1       	rcall	.+714    	; 0x702 <vPortFree>
     438:	02 c0       	rjmp	.+4      	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     43a:	8e 7f       	andi	r24, 0xFE	; 254
     43c:	87 8b       	std	Z+23, r24	; 0x17
     43e:	28 2d       	mov	r18, r8
     440:	39 2d       	mov	r19, r9
     442:	4a 2d       	mov	r20, r10
     444:	5b 2d       	mov	r21, r11
     446:	66 2d       	mov	r22, r6
     448:	77 2d       	mov	r23, r7
     44a:	80 91 90 12 	lds	r24, 0x1290	; 0x801290 <xTimerQueue>
     44e:	90 91 91 12 	lds	r25, 0x1291	; 0x801291 <xTimerQueue+0x1>
     452:	a3 d5       	rcall	.+2886   	; 0xf9a <xQueueReceive>
     454:	81 11       	cpse	r24, r1
     456:	6e cf       	rjmp	.-292    	; 0x334 <prvTimerTask+0x12e>
     458:	ea ce       	rjmp	.-556    	; 0x22e <prvTimerTask+0x28>
     45a:	0e 94 62 0a 	call	0x14c4	; 0x14c4 <vTaskSuspendAll>
     45e:	ce 01       	movw	r24, r28
     460:	01 96       	adiw	r24, 0x01	; 1
     462:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <prvSampleTimeNow>
     466:	6b 87       	std	Y+11, r22	; 0x0b
     468:	7c 87       	std	Y+12, r23	; 0x0c
     46a:	8d 87       	std	Y+13, r24	; 0x0d
     46c:	9e 87       	std	Y+14, r25	; 0x0e
     46e:	89 81       	ldd	r24, Y+1	; 0x01
     470:	81 11       	cpse	r24, r1
     472:	5d cf       	rjmp	.-326    	; 0x32e <prvTimerTask+0x128>
     474:	e0 91 92 12 	lds	r30, 0x1292	; 0x801292 <pxOverflowTimerList>
     478:	f0 91 93 12 	lds	r31, 0x1293	; 0x801293 <pxOverflowTimerList+0x1>
     47c:	80 81       	ld	r24, Z
     47e:	21 e0       	ldi	r18, 0x01	; 1
     480:	81 11       	cpse	r24, r1
     482:	20 e0       	ldi	r18, 0x00	; 0
     484:	28 2c       	mov	r2, r8
     486:	39 2c       	mov	r3, r9
     488:	4a 2c       	mov	r4, r10
     48a:	5b 2c       	mov	r5, r11
     48c:	3b cf       	rjmp	.-394    	; 0x304 <prvTimerTask+0xfe>

0000048e <__ctors_end>:
     48e:	11 24       	eor	r1, r1
     490:	1f be       	out	0x3f, r1	; 63
     492:	cf ef       	ldi	r28, 0xFF	; 255
     494:	d1 e2       	ldi	r29, 0x21	; 33
     496:	de bf       	out	0x3e, r29	; 62
     498:	cd bf       	out	0x3d, r28	; 61
     49a:	00 e0       	ldi	r16, 0x00	; 0
     49c:	0c bf       	out	0x3c, r16	; 60

0000049e <__do_copy_data>:
     49e:	12 e0       	ldi	r17, 0x02	; 2
     4a0:	a0 e0       	ldi	r26, 0x00	; 0
     4a2:	b2 e0       	ldi	r27, 0x02	; 2
     4a4:	ea e5       	ldi	r30, 0x5A	; 90
     4a6:	f2 e3       	ldi	r31, 0x32	; 50
     4a8:	00 e0       	ldi	r16, 0x00	; 0
     4aa:	0b bf       	out	0x3b, r16	; 59
     4ac:	02 c0       	rjmp	.+4      	; 0x4b2 <__do_copy_data+0x14>
     4ae:	07 90       	elpm	r0, Z+
     4b0:	0d 92       	st	X+, r0
     4b2:	a2 36       	cpi	r26, 0x62	; 98
     4b4:	b1 07       	cpc	r27, r17
     4b6:	d9 f7       	brne	.-10     	; 0x4ae <__do_copy_data+0x10>

000004b8 <__do_clear_bss>:
     4b8:	22 e1       	ldi	r18, 0x12	; 18
     4ba:	a2 e6       	ldi	r26, 0x62	; 98
     4bc:	b2 e0       	ldi	r27, 0x02	; 2
     4be:	01 c0       	rjmp	.+2      	; 0x4c2 <.do_clear_bss_start>

000004c0 <.do_clear_bss_loop>:
     4c0:	1d 92       	st	X+, r1

000004c2 <.do_clear_bss_start>:
     4c2:	ad 3d       	cpi	r26, 0xDD	; 221
     4c4:	b2 07       	cpc	r27, r18
     4c6:	e1 f7       	brne	.-8      	; 0x4c0 <.do_clear_bss_loop>
     4c8:	0e 94 ce 0f 	call	0x1f9c	; 0x1f9c <main>
     4cc:	0c 94 2b 19 	jmp	0x3256	; 0x3256 <_exit>

000004d0 <__bad_interrupt>:
     4d0:	97 cd       	rjmp	.-1234   	; 0x0 <__vectors>

000004d2 <trace_init>:
     4d2:	e7 e0       	ldi	r30, 0x07	; 7
     4d4:	f1 e0       	ldi	r31, 0x01	; 1
     4d6:	80 81       	ld	r24, Z
     4d8:	8f 60       	ori	r24, 0x0F	; 15
     4da:	80 83       	st	Z, r24
     4dc:	08 95       	ret

000004de <task_switch_in>:
     4de:	e8 e0       	ldi	r30, 0x08	; 8
     4e0:	f1 e0       	ldi	r31, 0x01	; 1
     4e2:	90 81       	ld	r25, Z
     4e4:	90 7f       	andi	r25, 0xF0	; 240
     4e6:	90 83       	st	Z, r25
     4e8:	90 81       	ld	r25, Z
     4ea:	8f 70       	andi	r24, 0x0F	; 15
     4ec:	98 2b       	or	r25, r24
     4ee:	90 83       	st	Z, r25
     4f0:	08 95       	ret

000004f2 <task_switch_out>:
     4f2:	e8 e0       	ldi	r30, 0x08	; 8
     4f4:	f1 e0       	ldi	r31, 0x01	; 1
     4f6:	80 81       	ld	r24, Z
     4f8:	80 7f       	andi	r24, 0xF0	; 240
     4fa:	80 83       	st	Z, r24
     4fc:	08 95       	ret

000004fe <prvInsertBlockIntoFreeList>:
     4fe:	cf 93       	push	r28
     500:	df 93       	push	r29
     502:	dc 01       	movw	r26, r24
     504:	ea e6       	ldi	r30, 0x6A	; 106
     506:	f2 e0       	ldi	r31, 0x02	; 2
     508:	01 c0       	rjmp	.+2      	; 0x50c <prvInsertBlockIntoFreeList+0xe>
     50a:	f9 01       	movw	r30, r18
     50c:	20 81       	ld	r18, Z
     50e:	31 81       	ldd	r19, Z+1	; 0x01
     510:	2a 17       	cp	r18, r26
     512:	3b 07       	cpc	r19, r27
     514:	d0 f3       	brcs	.-12     	; 0x50a <prvInsertBlockIntoFreeList+0xc>
     516:	82 81       	ldd	r24, Z+2	; 0x02
     518:	93 81       	ldd	r25, Z+3	; 0x03
     51a:	af 01       	movw	r20, r30
     51c:	48 0f       	add	r20, r24
     51e:	59 1f       	adc	r21, r25
     520:	a4 17       	cp	r26, r20
     522:	b5 07       	cpc	r27, r21
     524:	49 f4       	brne	.+18     	; 0x538 <prvInsertBlockIntoFreeList+0x3a>
     526:	12 96       	adiw	r26, 0x02	; 2
     528:	4d 91       	ld	r20, X+
     52a:	5c 91       	ld	r21, X
     52c:	13 97       	sbiw	r26, 0x03	; 3
     52e:	84 0f       	add	r24, r20
     530:	95 1f       	adc	r25, r21
     532:	93 83       	std	Z+3, r25	; 0x03
     534:	82 83       	std	Z+2, r24	; 0x02
     536:	df 01       	movw	r26, r30
     538:	12 96       	adiw	r26, 0x02	; 2
     53a:	8d 91       	ld	r24, X+
     53c:	9c 91       	ld	r25, X
     53e:	13 97       	sbiw	r26, 0x03	; 3
     540:	ed 01       	movw	r28, r26
     542:	c8 0f       	add	r28, r24
     544:	d9 1f       	adc	r29, r25
     546:	2c 17       	cp	r18, r28
     548:	3d 07       	cpc	r19, r29
     54a:	d9 f4       	brne	.+54     	; 0x582 <prvInsertBlockIntoFreeList+0x84>
     54c:	20 91 68 02 	lds	r18, 0x0268	; 0x800268 <pxEnd>
     550:	30 91 69 02 	lds	r19, 0x0269	; 0x800269 <pxEnd+0x1>
     554:	c2 17       	cp	r28, r18
     556:	d3 07       	cpc	r29, r19
     558:	81 f0       	breq	.+32     	; 0x57a <prvInsertBlockIntoFreeList+0x7c>
     55a:	2a 81       	ldd	r18, Y+2	; 0x02
     55c:	3b 81       	ldd	r19, Y+3	; 0x03
     55e:	82 0f       	add	r24, r18
     560:	93 1f       	adc	r25, r19
     562:	13 96       	adiw	r26, 0x03	; 3
     564:	9c 93       	st	X, r25
     566:	8e 93       	st	-X, r24
     568:	12 97       	sbiw	r26, 0x02	; 2
     56a:	c0 81       	ld	r28, Z
     56c:	d1 81       	ldd	r29, Z+1	; 0x01
     56e:	88 81       	ld	r24, Y
     570:	99 81       	ldd	r25, Y+1	; 0x01
     572:	11 96       	adiw	r26, 0x01	; 1
     574:	9c 93       	st	X, r25
     576:	8e 93       	st	-X, r24
     578:	07 c0       	rjmp	.+14     	; 0x588 <prvInsertBlockIntoFreeList+0x8a>
     57a:	11 96       	adiw	r26, 0x01	; 1
     57c:	dc 93       	st	X, r29
     57e:	ce 93       	st	-X, r28
     580:	03 c0       	rjmp	.+6      	; 0x588 <prvInsertBlockIntoFreeList+0x8a>
     582:	11 96       	adiw	r26, 0x01	; 1
     584:	3c 93       	st	X, r19
     586:	2e 93       	st	-X, r18
     588:	ae 17       	cp	r26, r30
     58a:	bf 07       	cpc	r27, r31
     58c:	11 f0       	breq	.+4      	; 0x592 <prvInsertBlockIntoFreeList+0x94>
     58e:	b1 83       	std	Z+1, r27	; 0x01
     590:	a0 83       	st	Z, r26
     592:	df 91       	pop	r29
     594:	cf 91       	pop	r28
     596:	08 95       	ret

00000598 <pvPortMalloc>:
     598:	cf 92       	push	r12
     59a:	df 92       	push	r13
     59c:	ef 92       	push	r14
     59e:	ff 92       	push	r15
     5a0:	0f 93       	push	r16
     5a2:	1f 93       	push	r17
     5a4:	cf 93       	push	r28
     5a6:	df 93       	push	r29
     5a8:	ec 01       	movw	r28, r24
     5aa:	8c d7       	rcall	.+3864   	; 0x14c4 <vTaskSuspendAll>
     5ac:	80 91 68 02 	lds	r24, 0x0268	; 0x800268 <pxEnd>
     5b0:	90 91 69 02 	lds	r25, 0x0269	; 0x800269 <pxEnd+0x1>
     5b4:	89 2b       	or	r24, r25
     5b6:	41 f5       	brne	.+80     	; 0x608 <pvPortMalloc+0x70>
     5b8:	ea e6       	ldi	r30, 0x6A	; 106
     5ba:	f2 e0       	ldi	r31, 0x02	; 2
     5bc:	ae e6       	ldi	r26, 0x6E	; 110
     5be:	b2 e0       	ldi	r27, 0x02	; 2
     5c0:	b1 83       	std	Z+1, r27	; 0x01
     5c2:	a0 83       	st	Z, r26
     5c4:	13 82       	std	Z+3, r1	; 0x03
     5c6:	12 82       	std	Z+2, r1	; 0x02
     5c8:	ea e0       	ldi	r30, 0x0A	; 10
     5ca:	f2 e1       	ldi	r31, 0x12	; 18
     5cc:	f0 93 69 02 	sts	0x0269, r31	; 0x800269 <pxEnd+0x1>
     5d0:	e0 93 68 02 	sts	0x0268, r30	; 0x800268 <pxEnd>
     5d4:	13 82       	std	Z+3, r1	; 0x03
     5d6:	12 82       	std	Z+2, r1	; 0x02
     5d8:	11 82       	std	Z+1, r1	; 0x01
     5da:	10 82       	st	Z, r1
     5dc:	8c e9       	ldi	r24, 0x9C	; 156
     5de:	9f e0       	ldi	r25, 0x0F	; 15
     5e0:	13 96       	adiw	r26, 0x03	; 3
     5e2:	9c 93       	st	X, r25
     5e4:	8e 93       	st	-X, r24
     5e6:	12 97       	sbiw	r26, 0x02	; 2
     5e8:	ed 93       	st	X+, r30
     5ea:	fc 93       	st	X, r31
     5ec:	90 93 65 02 	sts	0x0265, r25	; 0x800265 <xMinimumEverFreeBytesRemaining+0x1>
     5f0:	80 93 64 02 	sts	0x0264, r24	; 0x800264 <xMinimumEverFreeBytesRemaining>
     5f4:	90 93 67 02 	sts	0x0267, r25	; 0x800267 <xFreeBytesRemaining+0x1>
     5f8:	80 93 66 02 	sts	0x0266, r24	; 0x800266 <xFreeBytesRemaining>
     5fc:	80 e0       	ldi	r24, 0x00	; 0
     5fe:	90 e8       	ldi	r25, 0x80	; 128
     600:	90 93 63 02 	sts	0x0263, r25	; 0x800263 <__data_end+0x1>
     604:	80 93 62 02 	sts	0x0262, r24	; 0x800262 <__data_end>
     608:	e0 90 62 02 	lds	r14, 0x0262	; 0x800262 <__data_end>
     60c:	f0 90 63 02 	lds	r15, 0x0263	; 0x800263 <__data_end+0x1>
     610:	c7 01       	movw	r24, r14
     612:	8c 23       	and	r24, r28
     614:	9d 23       	and	r25, r29
     616:	89 2b       	or	r24, r25
     618:	09 f0       	breq	.+2      	; 0x61c <pvPortMalloc+0x84>
     61a:	65 c0       	rjmp	.+202    	; 0x6e6 <pvPortMalloc+0x14e>
     61c:	20 97       	sbiw	r28, 0x00	; 0
     61e:	09 f4       	brne	.+2      	; 0x622 <pvPortMalloc+0x8a>
     620:	64 c0       	rjmp	.+200    	; 0x6ea <pvPortMalloc+0x152>
     622:	ae 01       	movw	r20, r28
     624:	4c 5f       	subi	r20, 0xFC	; 252
     626:	5f 4f       	sbci	r21, 0xFF	; 255
     628:	09 f4       	brne	.+2      	; 0x62c <pvPortMalloc+0x94>
     62a:	5d c0       	rjmp	.+186    	; 0x6e6 <pvPortMalloc+0x14e>
     62c:	00 91 66 02 	lds	r16, 0x0266	; 0x800266 <xFreeBytesRemaining>
     630:	10 91 67 02 	lds	r17, 0x0267	; 0x800267 <xFreeBytesRemaining+0x1>
     634:	04 17       	cp	r16, r20
     636:	15 07       	cpc	r17, r21
     638:	08 f4       	brcc	.+2      	; 0x63c <pvPortMalloc+0xa4>
     63a:	55 c0       	rjmp	.+170    	; 0x6e6 <pvPortMalloc+0x14e>
     63c:	c0 91 6a 02 	lds	r28, 0x026A	; 0x80026a <xStart>
     640:	d0 91 6b 02 	lds	r29, 0x026B	; 0x80026b <xStart+0x1>
     644:	ea e6       	ldi	r30, 0x6A	; 106
     646:	f2 e0       	ldi	r31, 0x02	; 2
     648:	02 c0       	rjmp	.+4      	; 0x64e <pvPortMalloc+0xb6>
     64a:	fe 01       	movw	r30, r28
     64c:	e9 01       	movw	r28, r18
     64e:	2a 81       	ldd	r18, Y+2	; 0x02
     650:	3b 81       	ldd	r19, Y+3	; 0x03
     652:	24 17       	cp	r18, r20
     654:	35 07       	cpc	r19, r21
     656:	28 f4       	brcc	.+10     	; 0x662 <pvPortMalloc+0xca>
     658:	28 81       	ld	r18, Y
     65a:	39 81       	ldd	r19, Y+1	; 0x01
     65c:	21 15       	cp	r18, r1
     65e:	31 05       	cpc	r19, r1
     660:	a1 f7       	brne	.-24     	; 0x64a <pvPortMalloc+0xb2>
     662:	80 91 68 02 	lds	r24, 0x0268	; 0x800268 <pxEnd>
     666:	90 91 69 02 	lds	r25, 0x0269	; 0x800269 <pxEnd+0x1>
     66a:	c8 17       	cp	r28, r24
     66c:	d9 07       	cpc	r29, r25
     66e:	d9 f1       	breq	.+118    	; 0x6e6 <pvPortMalloc+0x14e>
     670:	c0 80       	ld	r12, Z
     672:	d1 80       	ldd	r13, Z+1	; 0x01
     674:	84 e0       	ldi	r24, 0x04	; 4
     676:	c8 0e       	add	r12, r24
     678:	d1 1c       	adc	r13, r1
     67a:	88 81       	ld	r24, Y
     67c:	99 81       	ldd	r25, Y+1	; 0x01
     67e:	91 83       	std	Z+1, r25	; 0x01
     680:	80 83       	st	Z, r24
     682:	2a 81       	ldd	r18, Y+2	; 0x02
     684:	3b 81       	ldd	r19, Y+3	; 0x03
     686:	24 1b       	sub	r18, r20
     688:	35 0b       	sbc	r19, r21
     68a:	29 30       	cpi	r18, 0x09	; 9
     68c:	31 05       	cpc	r19, r1
     68e:	48 f0       	brcs	.+18     	; 0x6a2 <pvPortMalloc+0x10a>
     690:	ce 01       	movw	r24, r28
     692:	84 0f       	add	r24, r20
     694:	95 1f       	adc	r25, r21
     696:	fc 01       	movw	r30, r24
     698:	33 83       	std	Z+3, r19	; 0x03
     69a:	22 83       	std	Z+2, r18	; 0x02
     69c:	5b 83       	std	Y+3, r21	; 0x03
     69e:	4a 83       	std	Y+2, r20	; 0x02
     6a0:	2e df       	rcall	.-420    	; 0x4fe <prvInsertBlockIntoFreeList>
     6a2:	8a 81       	ldd	r24, Y+2	; 0x02
     6a4:	9b 81       	ldd	r25, Y+3	; 0x03
     6a6:	08 1b       	sub	r16, r24
     6a8:	19 0b       	sbc	r17, r25
     6aa:	10 93 67 02 	sts	0x0267, r17	; 0x800267 <xFreeBytesRemaining+0x1>
     6ae:	00 93 66 02 	sts	0x0266, r16	; 0x800266 <xFreeBytesRemaining>
     6b2:	20 91 64 02 	lds	r18, 0x0264	; 0x800264 <xMinimumEverFreeBytesRemaining>
     6b6:	30 91 65 02 	lds	r19, 0x0265	; 0x800265 <xMinimumEverFreeBytesRemaining+0x1>
     6ba:	02 17       	cp	r16, r18
     6bc:	13 07       	cpc	r17, r19
     6be:	20 f4       	brcc	.+8      	; 0x6c8 <pvPortMalloc+0x130>
     6c0:	10 93 65 02 	sts	0x0265, r17	; 0x800265 <xMinimumEverFreeBytesRemaining+0x1>
     6c4:	00 93 64 02 	sts	0x0264, r16	; 0x800264 <xMinimumEverFreeBytesRemaining>
     6c8:	e8 2a       	or	r14, r24
     6ca:	f9 2a       	or	r15, r25
     6cc:	fb 82       	std	Y+3, r15	; 0x03
     6ce:	ea 82       	std	Y+2, r14	; 0x02
     6d0:	19 82       	std	Y+1, r1	; 0x01
     6d2:	18 82       	st	Y, r1
     6d4:	dd d7       	rcall	.+4026   	; 0x1690 <xTaskResumeAll>
     6d6:	c1 14       	cp	r12, r1
     6d8:	d1 04       	cpc	r13, r1
     6da:	49 f4       	brne	.+18     	; 0x6ee <pvPortMalloc+0x156>
     6dc:	0e 94 1a 0f 	call	0x1e34	; 0x1e34 <vApplicationMallocFailedHook>
     6e0:	c1 2c       	mov	r12, r1
     6e2:	d1 2c       	mov	r13, r1
     6e4:	04 c0       	rjmp	.+8      	; 0x6ee <pvPortMalloc+0x156>
     6e6:	d4 d7       	rcall	.+4008   	; 0x1690 <xTaskResumeAll>
     6e8:	f9 cf       	rjmp	.-14     	; 0x6dc <pvPortMalloc+0x144>
     6ea:	d2 d7       	rcall	.+4004   	; 0x1690 <xTaskResumeAll>
     6ec:	f7 cf       	rjmp	.-18     	; 0x6dc <pvPortMalloc+0x144>
     6ee:	c6 01       	movw	r24, r12
     6f0:	df 91       	pop	r29
     6f2:	cf 91       	pop	r28
     6f4:	1f 91       	pop	r17
     6f6:	0f 91       	pop	r16
     6f8:	ff 90       	pop	r15
     6fa:	ef 90       	pop	r14
     6fc:	df 90       	pop	r13
     6fe:	cf 90       	pop	r12
     700:	08 95       	ret

00000702 <vPortFree>:
     702:	cf 93       	push	r28
     704:	df 93       	push	r29
     706:	00 97       	sbiw	r24, 0x00	; 0
     708:	41 f1       	breq	.+80     	; 0x75a <vPortFree+0x58>
     70a:	fc 01       	movw	r30, r24
     70c:	34 97       	sbiw	r30, 0x04	; 4
     70e:	22 81       	ldd	r18, Z+2	; 0x02
     710:	33 81       	ldd	r19, Z+3	; 0x03
     712:	40 91 62 02 	lds	r20, 0x0262	; 0x800262 <__data_end>
     716:	50 91 63 02 	lds	r21, 0x0263	; 0x800263 <__data_end+0x1>
     71a:	b9 01       	movw	r22, r18
     71c:	64 23       	and	r22, r20
     71e:	75 23       	and	r23, r21
     720:	67 2b       	or	r22, r23
     722:	d9 f0       	breq	.+54     	; 0x75a <vPortFree+0x58>
     724:	60 81       	ld	r22, Z
     726:	71 81       	ldd	r23, Z+1	; 0x01
     728:	67 2b       	or	r22, r23
     72a:	b9 f4       	brne	.+46     	; 0x75a <vPortFree+0x58>
     72c:	ef 01       	movw	r28, r30
     72e:	40 95       	com	r20
     730:	50 95       	com	r21
     732:	24 23       	and	r18, r20
     734:	35 23       	and	r19, r21
     736:	33 83       	std	Z+3, r19	; 0x03
     738:	22 83       	std	Z+2, r18	; 0x02
     73a:	c4 d6       	rcall	.+3464   	; 0x14c4 <vTaskSuspendAll>
     73c:	20 91 66 02 	lds	r18, 0x0266	; 0x800266 <xFreeBytesRemaining>
     740:	30 91 67 02 	lds	r19, 0x0267	; 0x800267 <xFreeBytesRemaining+0x1>
     744:	8a 81       	ldd	r24, Y+2	; 0x02
     746:	9b 81       	ldd	r25, Y+3	; 0x03
     748:	82 0f       	add	r24, r18
     74a:	93 1f       	adc	r25, r19
     74c:	90 93 67 02 	sts	0x0267, r25	; 0x800267 <xFreeBytesRemaining+0x1>
     750:	80 93 66 02 	sts	0x0266, r24	; 0x800266 <xFreeBytesRemaining>
     754:	ce 01       	movw	r24, r28
     756:	d3 de       	rcall	.-602    	; 0x4fe <prvInsertBlockIntoFreeList>
     758:	9b d7       	rcall	.+3894   	; 0x1690 <xTaskResumeAll>
     75a:	df 91       	pop	r29
     75c:	cf 91       	pop	r28
     75e:	08 95       	ret

00000760 <vListInitialise>:
     760:	fc 01       	movw	r30, r24
     762:	03 96       	adiw	r24, 0x03	; 3
     764:	92 83       	std	Z+2, r25	; 0x02
     766:	81 83       	std	Z+1, r24	; 0x01
     768:	4f ef       	ldi	r20, 0xFF	; 255
     76a:	5f ef       	ldi	r21, 0xFF	; 255
     76c:	ba 01       	movw	r22, r20
     76e:	43 83       	std	Z+3, r20	; 0x03
     770:	54 83       	std	Z+4, r21	; 0x04
     772:	65 83       	std	Z+5, r22	; 0x05
     774:	76 83       	std	Z+6, r23	; 0x06
     776:	90 87       	std	Z+8, r25	; 0x08
     778:	87 83       	std	Z+7, r24	; 0x07
     77a:	92 87       	std	Z+10, r25	; 0x0a
     77c:	81 87       	std	Z+9, r24	; 0x09
     77e:	10 82       	st	Z, r1
     780:	08 95       	ret

00000782 <vListInitialiseItem>:
     782:	fc 01       	movw	r30, r24
     784:	13 86       	std	Z+11, r1	; 0x0b
     786:	12 86       	std	Z+10, r1	; 0x0a
     788:	08 95       	ret

0000078a <vListInsertEnd>:
     78a:	cf 93       	push	r28
     78c:	df 93       	push	r29
     78e:	9c 01       	movw	r18, r24
     790:	fb 01       	movw	r30, r22
     792:	dc 01       	movw	r26, r24
     794:	11 96       	adiw	r26, 0x01	; 1
     796:	cd 91       	ld	r28, X+
     798:	dc 91       	ld	r29, X
     79a:	12 97       	sbiw	r26, 0x02	; 2
     79c:	d5 83       	std	Z+5, r29	; 0x05
     79e:	c4 83       	std	Z+4, r28	; 0x04
     7a0:	8e 81       	ldd	r24, Y+6	; 0x06
     7a2:	9f 81       	ldd	r25, Y+7	; 0x07
     7a4:	97 83       	std	Z+7, r25	; 0x07
     7a6:	86 83       	std	Z+6, r24	; 0x06
     7a8:	8e 81       	ldd	r24, Y+6	; 0x06
     7aa:	9f 81       	ldd	r25, Y+7	; 0x07
     7ac:	dc 01       	movw	r26, r24
     7ae:	15 96       	adiw	r26, 0x05	; 5
     7b0:	7c 93       	st	X, r23
     7b2:	6e 93       	st	-X, r22
     7b4:	14 97       	sbiw	r26, 0x04	; 4
     7b6:	7f 83       	std	Y+7, r23	; 0x07
     7b8:	6e 83       	std	Y+6, r22	; 0x06
     7ba:	33 87       	std	Z+11, r19	; 0x0b
     7bc:	22 87       	std	Z+10, r18	; 0x0a
     7be:	f9 01       	movw	r30, r18
     7c0:	80 81       	ld	r24, Z
     7c2:	8f 5f       	subi	r24, 0xFF	; 255
     7c4:	80 83       	st	Z, r24
     7c6:	df 91       	pop	r29
     7c8:	cf 91       	pop	r28
     7ca:	08 95       	ret

000007cc <vListInsert>:
     7cc:	0f 93       	push	r16
     7ce:	1f 93       	push	r17
     7d0:	cf 93       	push	r28
     7d2:	df 93       	push	r29
     7d4:	eb 01       	movw	r28, r22
     7d6:	08 81       	ld	r16, Y
     7d8:	19 81       	ldd	r17, Y+1	; 0x01
     7da:	2a 81       	ldd	r18, Y+2	; 0x02
     7dc:	3b 81       	ldd	r19, Y+3	; 0x03
     7de:	0f 3f       	cpi	r16, 0xFF	; 255
     7e0:	4f ef       	ldi	r20, 0xFF	; 255
     7e2:	14 07       	cpc	r17, r20
     7e4:	24 07       	cpc	r18, r20
     7e6:	34 07       	cpc	r19, r20
     7e8:	21 f4       	brne	.+8      	; 0x7f2 <vListInsert+0x26>
     7ea:	fc 01       	movw	r30, r24
     7ec:	a1 85       	ldd	r26, Z+9	; 0x09
     7ee:	b2 85       	ldd	r27, Z+10	; 0x0a
     7f0:	11 c0       	rjmp	.+34     	; 0x814 <vListInsert+0x48>
     7f2:	dc 01       	movw	r26, r24
     7f4:	13 96       	adiw	r26, 0x03	; 3
     7f6:	01 c0       	rjmp	.+2      	; 0x7fa <vListInsert+0x2e>
     7f8:	df 01       	movw	r26, r30
     7fa:	14 96       	adiw	r26, 0x04	; 4
     7fc:	ed 91       	ld	r30, X+
     7fe:	fc 91       	ld	r31, X
     800:	15 97       	sbiw	r26, 0x05	; 5
     802:	40 81       	ld	r20, Z
     804:	51 81       	ldd	r21, Z+1	; 0x01
     806:	62 81       	ldd	r22, Z+2	; 0x02
     808:	73 81       	ldd	r23, Z+3	; 0x03
     80a:	04 17       	cp	r16, r20
     80c:	15 07       	cpc	r17, r21
     80e:	26 07       	cpc	r18, r22
     810:	37 07       	cpc	r19, r23
     812:	90 f7       	brcc	.-28     	; 0x7f8 <vListInsert+0x2c>
     814:	14 96       	adiw	r26, 0x04	; 4
     816:	ed 91       	ld	r30, X+
     818:	fc 91       	ld	r31, X
     81a:	15 97       	sbiw	r26, 0x05	; 5
     81c:	fd 83       	std	Y+5, r31	; 0x05
     81e:	ec 83       	std	Y+4, r30	; 0x04
     820:	d7 83       	std	Z+7, r29	; 0x07
     822:	c6 83       	std	Z+6, r28	; 0x06
     824:	bf 83       	std	Y+7, r27	; 0x07
     826:	ae 83       	std	Y+6, r26	; 0x06
     828:	15 96       	adiw	r26, 0x05	; 5
     82a:	dc 93       	st	X, r29
     82c:	ce 93       	st	-X, r28
     82e:	14 97       	sbiw	r26, 0x04	; 4
     830:	9b 87       	std	Y+11, r25	; 0x0b
     832:	8a 87       	std	Y+10, r24	; 0x0a
     834:	fc 01       	movw	r30, r24
     836:	20 81       	ld	r18, Z
     838:	2f 5f       	subi	r18, 0xFF	; 255
     83a:	20 83       	st	Z, r18
     83c:	df 91       	pop	r29
     83e:	cf 91       	pop	r28
     840:	1f 91       	pop	r17
     842:	0f 91       	pop	r16
     844:	08 95       	ret

00000846 <uxListRemove>:
     846:	cf 93       	push	r28
     848:	df 93       	push	r29
     84a:	fc 01       	movw	r30, r24
     84c:	a2 85       	ldd	r26, Z+10	; 0x0a
     84e:	b3 85       	ldd	r27, Z+11	; 0x0b
     850:	c4 81       	ldd	r28, Z+4	; 0x04
     852:	d5 81       	ldd	r29, Z+5	; 0x05
     854:	86 81       	ldd	r24, Z+6	; 0x06
     856:	97 81       	ldd	r25, Z+7	; 0x07
     858:	9f 83       	std	Y+7, r25	; 0x07
     85a:	8e 83       	std	Y+6, r24	; 0x06
     85c:	c6 81       	ldd	r28, Z+6	; 0x06
     85e:	d7 81       	ldd	r29, Z+7	; 0x07
     860:	84 81       	ldd	r24, Z+4	; 0x04
     862:	95 81       	ldd	r25, Z+5	; 0x05
     864:	9d 83       	std	Y+5, r25	; 0x05
     866:	8c 83       	std	Y+4, r24	; 0x04
     868:	11 96       	adiw	r26, 0x01	; 1
     86a:	8d 91       	ld	r24, X+
     86c:	9c 91       	ld	r25, X
     86e:	12 97       	sbiw	r26, 0x02	; 2
     870:	e8 17       	cp	r30, r24
     872:	f9 07       	cpc	r31, r25
     874:	31 f4       	brne	.+12     	; 0x882 <uxListRemove+0x3c>
     876:	86 81       	ldd	r24, Z+6	; 0x06
     878:	97 81       	ldd	r25, Z+7	; 0x07
     87a:	12 96       	adiw	r26, 0x02	; 2
     87c:	9c 93       	st	X, r25
     87e:	8e 93       	st	-X, r24
     880:	11 97       	sbiw	r26, 0x01	; 1
     882:	13 86       	std	Z+11, r1	; 0x0b
     884:	12 86       	std	Z+10, r1	; 0x0a
     886:	8c 91       	ld	r24, X
     888:	81 50       	subi	r24, 0x01	; 1
     88a:	8c 93       	st	X, r24
     88c:	8c 91       	ld	r24, X
     88e:	df 91       	pop	r29
     890:	cf 91       	pop	r28
     892:	08 95       	ret

00000894 <pxPortInitialiseStack>:
		);
	}
	else
	{
        uint8_t register temp_reg;
		__asm__ __volatile__ (
     894:	31 e1       	ldi	r19, 0x11	; 17
     896:	fc 01       	movw	r30, r24
     898:	30 83       	st	Z, r19
     89a:	31 97       	sbiw	r30, 0x01	; 1
     89c:	22 e2       	ldi	r18, 0x22	; 34
     89e:	20 83       	st	Z, r18
     8a0:	31 97       	sbiw	r30, 0x01	; 1
     8a2:	a3 e3       	ldi	r26, 0x33	; 51
     8a4:	a0 83       	st	Z, r26
     8a6:	31 97       	sbiw	r30, 0x01	; 1
     8a8:	60 83       	st	Z, r22
     8aa:	31 97       	sbiw	r30, 0x01	; 1
     8ac:	70 83       	st	Z, r23
     8ae:	31 97       	sbiw	r30, 0x01	; 1
     8b0:	10 82       	st	Z, r1
     8b2:	31 97       	sbiw	r30, 0x01	; 1
     8b4:	10 82       	st	Z, r1
     8b6:	31 97       	sbiw	r30, 0x01	; 1
     8b8:	60 e8       	ldi	r22, 0x80	; 128
     8ba:	60 83       	st	Z, r22
     8bc:	31 97       	sbiw	r30, 0x01	; 1
     8be:	10 82       	st	Z, r1
     8c0:	31 97       	sbiw	r30, 0x01	; 1
     8c2:	10 82       	st	Z, r1
     8c4:	31 97       	sbiw	r30, 0x01	; 1
     8c6:	10 82       	st	Z, r1
     8c8:	31 97       	sbiw	r30, 0x01	; 1
     8ca:	62 e0       	ldi	r22, 0x02	; 2
     8cc:	60 83       	st	Z, r22
     8ce:	31 97       	sbiw	r30, 0x01	; 1
     8d0:	63 e0       	ldi	r22, 0x03	; 3
     8d2:	60 83       	st	Z, r22
     8d4:	31 97       	sbiw	r30, 0x01	; 1
     8d6:	64 e0       	ldi	r22, 0x04	; 4
     8d8:	60 83       	st	Z, r22
     8da:	31 97       	sbiw	r30, 0x01	; 1
     8dc:	65 e0       	ldi	r22, 0x05	; 5
     8de:	60 83       	st	Z, r22
     8e0:	31 97       	sbiw	r30, 0x01	; 1
     8e2:	66 e0       	ldi	r22, 0x06	; 6
     8e4:	60 83       	st	Z, r22
     8e6:	31 97       	sbiw	r30, 0x01	; 1
     8e8:	67 e0       	ldi	r22, 0x07	; 7
     8ea:	60 83       	st	Z, r22
     8ec:	31 97       	sbiw	r30, 0x01	; 1
     8ee:	68 e0       	ldi	r22, 0x08	; 8
     8f0:	60 83       	st	Z, r22
     8f2:	31 97       	sbiw	r30, 0x01	; 1
     8f4:	69 e0       	ldi	r22, 0x09	; 9
     8f6:	60 83       	st	Z, r22
     8f8:	31 97       	sbiw	r30, 0x01	; 1
     8fa:	60 e1       	ldi	r22, 0x10	; 16
     8fc:	60 83       	st	Z, r22
     8fe:	31 97       	sbiw	r30, 0x01	; 1
     900:	30 83       	st	Z, r19
     902:	31 97       	sbiw	r30, 0x01	; 1
     904:	32 e1       	ldi	r19, 0x12	; 18
     906:	30 83       	st	Z, r19
     908:	31 97       	sbiw	r30, 0x01	; 1
     90a:	33 e1       	ldi	r19, 0x13	; 19
     90c:	30 83       	st	Z, r19
     90e:	31 97       	sbiw	r30, 0x01	; 1
     910:	34 e1       	ldi	r19, 0x14	; 20
     912:	30 83       	st	Z, r19
     914:	31 97       	sbiw	r30, 0x01	; 1
     916:	35 e1       	ldi	r19, 0x15	; 21
     918:	30 83       	st	Z, r19
     91a:	31 97       	sbiw	r30, 0x01	; 1
     91c:	36 e1       	ldi	r19, 0x16	; 22
     91e:	30 83       	st	Z, r19
     920:	31 97       	sbiw	r30, 0x01	; 1
     922:	37 e1       	ldi	r19, 0x17	; 23
     924:	30 83       	st	Z, r19
     926:	31 97       	sbiw	r30, 0x01	; 1
     928:	38 e1       	ldi	r19, 0x18	; 24
     92a:	30 83       	st	Z, r19
     92c:	31 97       	sbiw	r30, 0x01	; 1
     92e:	39 e1       	ldi	r19, 0x19	; 25
     930:	30 83       	st	Z, r19
     932:	31 97       	sbiw	r30, 0x01	; 1
     934:	30 e2       	ldi	r19, 0x20	; 32
     936:	30 83       	st	Z, r19
     938:	31 97       	sbiw	r30, 0x01	; 1
     93a:	31 e2       	ldi	r19, 0x21	; 33
     93c:	30 83       	st	Z, r19
     93e:	31 97       	sbiw	r30, 0x01	; 1
     940:	20 83       	st	Z, r18
     942:	31 97       	sbiw	r30, 0x01	; 1
     944:	23 e2       	ldi	r18, 0x23	; 35
     946:	20 83       	st	Z, r18
     948:	31 97       	sbiw	r30, 0x01	; 1
     94a:	40 83       	st	Z, r20
     94c:	31 97       	sbiw	r30, 0x01	; 1
     94e:	50 83       	st	Z, r21
     950:	31 97       	sbiw	r30, 0x01	; 1
     952:	26 e2       	ldi	r18, 0x26	; 38
     954:	20 83       	st	Z, r18
     956:	31 97       	sbiw	r30, 0x01	; 1
     958:	27 e2       	ldi	r18, 0x27	; 39
     95a:	20 83       	st	Z, r18
     95c:	31 97       	sbiw	r30, 0x01	; 1
     95e:	28 e2       	ldi	r18, 0x28	; 40
     960:	20 83       	st	Z, r18
     962:	31 97       	sbiw	r30, 0x01	; 1
     964:	29 e2       	ldi	r18, 0x29	; 41
     966:	20 83       	st	Z, r18
     968:	31 97       	sbiw	r30, 0x01	; 1
     96a:	20 e3       	ldi	r18, 0x30	; 48
     96c:	20 83       	st	Z, r18
     96e:	31 97       	sbiw	r30, 0x01	; 1
     970:	21 e3       	ldi	r18, 0x31	; 49
     972:	20 83       	st	Z, r18
     974:	89 97       	sbiw	r24, 0x29	; 41
     976:	08 95       	ret

00000978 <xPortStartScheduler>:
     978:	a8 95       	wdr
     97a:	90 ec       	ldi	r25, 0xC0	; 192
     97c:	88 e1       	ldi	r24, 0x18	; 24
     97e:	0f b6       	in	r0, 0x3f	; 63
     980:	f8 94       	cli
     982:	a8 95       	wdr
     984:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x700060>
     988:	0f be       	out	0x3f, r0	; 63
     98a:	90 93 60 00 	sts	0x0060, r25	; 0x800060 <__TEXT_REGION_LENGTH__+0x700060>
     98e:	a0 91 88 12 	lds	r26, 0x1288	; 0x801288 <pxCurrentTCB>
     992:	b0 91 89 12 	lds	r27, 0x1289	; 0x801289 <pxCurrentTCB+0x1>
     996:	cd 91       	ld	r28, X+
     998:	cd bf       	out	0x3d, r28	; 61
     99a:	dd 91       	ld	r29, X+
     99c:	de bf       	out	0x3e, r29	; 62
     99e:	ff 91       	pop	r31
     9a0:	ef 91       	pop	r30
     9a2:	df 91       	pop	r29
     9a4:	cf 91       	pop	r28
     9a6:	bf 91       	pop	r27
     9a8:	af 91       	pop	r26
     9aa:	9f 91       	pop	r25
     9ac:	8f 91       	pop	r24
     9ae:	7f 91       	pop	r23
     9b0:	6f 91       	pop	r22
     9b2:	5f 91       	pop	r21
     9b4:	4f 91       	pop	r20
     9b6:	3f 91       	pop	r19
     9b8:	2f 91       	pop	r18
     9ba:	1f 91       	pop	r17
     9bc:	0f 91       	pop	r16
     9be:	ff 90       	pop	r15
     9c0:	ef 90       	pop	r14
     9c2:	df 90       	pop	r13
     9c4:	cf 90       	pop	r12
     9c6:	bf 90       	pop	r11
     9c8:	af 90       	pop	r10
     9ca:	9f 90       	pop	r9
     9cc:	8f 90       	pop	r8
     9ce:	7f 90       	pop	r7
     9d0:	6f 90       	pop	r6
     9d2:	5f 90       	pop	r5
     9d4:	4f 90       	pop	r4
     9d6:	3f 90       	pop	r3
     9d8:	2f 90       	pop	r2
     9da:	1f 90       	pop	r1
     9dc:	0f 90       	pop	r0
     9de:	0c be       	out	0x3c, r0	; 60
     9e0:	0f 90       	pop	r0
     9e2:	0b be       	out	0x3b, r0	; 59
     9e4:	0f 90       	pop	r0
     9e6:	0f be       	out	0x3f, r0	; 63
     9e8:	0f 90       	pop	r0
     9ea:	08 95       	ret
     9ec:	81 e0       	ldi	r24, 0x01	; 1
     9ee:	08 95       	ret

000009f0 <vPortYield>:
     9f0:	0f 92       	push	r0
     9f2:	0f b6       	in	r0, 0x3f	; 63
     9f4:	f8 94       	cli
     9f6:	0f 92       	push	r0
     9f8:	0b b6       	in	r0, 0x3b	; 59
     9fa:	0f 92       	push	r0
     9fc:	0c b6       	in	r0, 0x3c	; 60
     9fe:	0f 92       	push	r0
     a00:	1f 92       	push	r1
     a02:	11 24       	eor	r1, r1
     a04:	2f 92       	push	r2
     a06:	3f 92       	push	r3
     a08:	4f 92       	push	r4
     a0a:	5f 92       	push	r5
     a0c:	6f 92       	push	r6
     a0e:	7f 92       	push	r7
     a10:	8f 92       	push	r8
     a12:	9f 92       	push	r9
     a14:	af 92       	push	r10
     a16:	bf 92       	push	r11
     a18:	cf 92       	push	r12
     a1a:	df 92       	push	r13
     a1c:	ef 92       	push	r14
     a1e:	ff 92       	push	r15
     a20:	0f 93       	push	r16
     a22:	1f 93       	push	r17
     a24:	2f 93       	push	r18
     a26:	3f 93       	push	r19
     a28:	4f 93       	push	r20
     a2a:	5f 93       	push	r21
     a2c:	6f 93       	push	r22
     a2e:	7f 93       	push	r23
     a30:	8f 93       	push	r24
     a32:	9f 93       	push	r25
     a34:	af 93       	push	r26
     a36:	bf 93       	push	r27
     a38:	cf 93       	push	r28
     a3a:	df 93       	push	r29
     a3c:	ef 93       	push	r30
     a3e:	ff 93       	push	r31
     a40:	a0 91 88 12 	lds	r26, 0x1288	; 0x801288 <pxCurrentTCB>
     a44:	b0 91 89 12 	lds	r27, 0x1289	; 0x801289 <pxCurrentTCB+0x1>
     a48:	0d b6       	in	r0, 0x3d	; 61
     a4a:	0d 92       	st	X+, r0
     a4c:	0e b6       	in	r0, 0x3e	; 62
     a4e:	0d 92       	st	X+, r0
     a50:	be d6       	rcall	.+3452   	; 0x17ce <vTaskSwitchContext>
     a52:	a0 91 88 12 	lds	r26, 0x1288	; 0x801288 <pxCurrentTCB>
     a56:	b0 91 89 12 	lds	r27, 0x1289	; 0x801289 <pxCurrentTCB+0x1>
     a5a:	cd 91       	ld	r28, X+
     a5c:	cd bf       	out	0x3d, r28	; 61
     a5e:	dd 91       	ld	r29, X+
     a60:	de bf       	out	0x3e, r29	; 62
     a62:	ff 91       	pop	r31
     a64:	ef 91       	pop	r30
     a66:	df 91       	pop	r29
     a68:	cf 91       	pop	r28
     a6a:	bf 91       	pop	r27
     a6c:	af 91       	pop	r26
     a6e:	9f 91       	pop	r25
     a70:	8f 91       	pop	r24
     a72:	7f 91       	pop	r23
     a74:	6f 91       	pop	r22
     a76:	5f 91       	pop	r21
     a78:	4f 91       	pop	r20
     a7a:	3f 91       	pop	r19
     a7c:	2f 91       	pop	r18
     a7e:	1f 91       	pop	r17
     a80:	0f 91       	pop	r16
     a82:	ff 90       	pop	r15
     a84:	ef 90       	pop	r14
     a86:	df 90       	pop	r13
     a88:	cf 90       	pop	r12
     a8a:	bf 90       	pop	r11
     a8c:	af 90       	pop	r10
     a8e:	9f 90       	pop	r9
     a90:	8f 90       	pop	r8
     a92:	7f 90       	pop	r7
     a94:	6f 90       	pop	r6
     a96:	5f 90       	pop	r5
     a98:	4f 90       	pop	r4
     a9a:	3f 90       	pop	r3
     a9c:	2f 90       	pop	r2
     a9e:	1f 90       	pop	r1
     aa0:	0f 90       	pop	r0
     aa2:	0c be       	out	0x3c, r0	; 60
     aa4:	0f 90       	pop	r0
     aa6:	0b be       	out	0x3b, r0	; 59
     aa8:	0f 90       	pop	r0
     aaa:	0f be       	out	0x3f, r0	; 63
     aac:	0f 90       	pop	r0
     aae:	08 95       	ret

00000ab0 <vPortYieldFromTick>:
     ab0:	0f 92       	push	r0
     ab2:	0f b6       	in	r0, 0x3f	; 63
     ab4:	f8 94       	cli
     ab6:	0f 92       	push	r0
     ab8:	0b b6       	in	r0, 0x3b	; 59
     aba:	0f 92       	push	r0
     abc:	0c b6       	in	r0, 0x3c	; 60
     abe:	0f 92       	push	r0
     ac0:	1f 92       	push	r1
     ac2:	11 24       	eor	r1, r1
     ac4:	2f 92       	push	r2
     ac6:	3f 92       	push	r3
     ac8:	4f 92       	push	r4
     aca:	5f 92       	push	r5
     acc:	6f 92       	push	r6
     ace:	7f 92       	push	r7
     ad0:	8f 92       	push	r8
     ad2:	9f 92       	push	r9
     ad4:	af 92       	push	r10
     ad6:	bf 92       	push	r11
     ad8:	cf 92       	push	r12
     ada:	df 92       	push	r13
     adc:	ef 92       	push	r14
     ade:	ff 92       	push	r15
     ae0:	0f 93       	push	r16
     ae2:	1f 93       	push	r17
     ae4:	2f 93       	push	r18
     ae6:	3f 93       	push	r19
     ae8:	4f 93       	push	r20
     aea:	5f 93       	push	r21
     aec:	6f 93       	push	r22
     aee:	7f 93       	push	r23
     af0:	8f 93       	push	r24
     af2:	9f 93       	push	r25
     af4:	af 93       	push	r26
     af6:	bf 93       	push	r27
     af8:	cf 93       	push	r28
     afa:	df 93       	push	r29
     afc:	ef 93       	push	r30
     afe:	ff 93       	push	r31
     b00:	a0 91 88 12 	lds	r26, 0x1288	; 0x801288 <pxCurrentTCB>
     b04:	b0 91 89 12 	lds	r27, 0x1289	; 0x801289 <pxCurrentTCB+0x1>
     b08:	0d b6       	in	r0, 0x3d	; 61
     b0a:	0d 92       	st	X+, r0
     b0c:	0e b6       	in	r0, 0x3e	; 62
     b0e:	0d 92       	st	X+, r0
     b10:	13 be       	out	0x33, r1	; 51
     b12:	ec d4       	rcall	.+2520   	; 0x14ec <xTaskIncrementTick>
     b14:	81 11       	cpse	r24, r1
     b16:	5b d6       	rcall	.+3254   	; 0x17ce <vTaskSwitchContext>
     b18:	a0 91 88 12 	lds	r26, 0x1288	; 0x801288 <pxCurrentTCB>
     b1c:	b0 91 89 12 	lds	r27, 0x1289	; 0x801289 <pxCurrentTCB+0x1>
     b20:	cd 91       	ld	r28, X+
     b22:	cd bf       	out	0x3d, r28	; 61
     b24:	dd 91       	ld	r29, X+
     b26:	de bf       	out	0x3e, r29	; 62
     b28:	ff 91       	pop	r31
     b2a:	ef 91       	pop	r30
     b2c:	df 91       	pop	r29
     b2e:	cf 91       	pop	r28
     b30:	bf 91       	pop	r27
     b32:	af 91       	pop	r26
     b34:	9f 91       	pop	r25
     b36:	8f 91       	pop	r24
     b38:	7f 91       	pop	r23
     b3a:	6f 91       	pop	r22
     b3c:	5f 91       	pop	r21
     b3e:	4f 91       	pop	r20
     b40:	3f 91       	pop	r19
     b42:	2f 91       	pop	r18
     b44:	1f 91       	pop	r17
     b46:	0f 91       	pop	r16
     b48:	ff 90       	pop	r15
     b4a:	ef 90       	pop	r14
     b4c:	df 90       	pop	r13
     b4e:	cf 90       	pop	r12
     b50:	bf 90       	pop	r11
     b52:	af 90       	pop	r10
     b54:	9f 90       	pop	r9
     b56:	8f 90       	pop	r8
     b58:	7f 90       	pop	r7
     b5a:	6f 90       	pop	r6
     b5c:	5f 90       	pop	r5
     b5e:	4f 90       	pop	r4
     b60:	3f 90       	pop	r3
     b62:	2f 90       	pop	r2
     b64:	1f 90       	pop	r1
     b66:	0f 90       	pop	r0
     b68:	0c be       	out	0x3c, r0	; 60
     b6a:	0f 90       	pop	r0
     b6c:	0b be       	out	0x3b, r0	; 59
     b6e:	0f 90       	pop	r0
     b70:	0f be       	out	0x3f, r0	; 63
     b72:	0f 90       	pop	r0
     b74:	08 95       	ret

00000b76 <__vector_12>:
     b76:	9c df       	rcall	.-200    	; 0xab0 <vPortYieldFromTick>
     b78:	18 95       	reti

00000b7a <prvIsQueueEmpty>:
     b7a:	0f b6       	in	r0, 0x3f	; 63
     b7c:	f8 94       	cli
     b7e:	0f 92       	push	r0
     b80:	fc 01       	movw	r30, r24
     b82:	96 8d       	ldd	r25, Z+30	; 0x1e
     b84:	0f 90       	pop	r0
     b86:	0f be       	out	0x3f, r0	; 63
     b88:	81 e0       	ldi	r24, 0x01	; 1
     b8a:	91 11       	cpse	r25, r1
     b8c:	80 e0       	ldi	r24, 0x00	; 0
     b8e:	08 95       	ret

00000b90 <prvCopyDataToQueue>:
     b90:	0f 93       	push	r16
     b92:	1f 93       	push	r17
     b94:	cf 93       	push	r28
     b96:	df 93       	push	r29
     b98:	ec 01       	movw	r28, r24
     b9a:	04 2f       	mov	r16, r20
     b9c:	1e 8d       	ldd	r17, Y+30	; 0x1e
     b9e:	48 a1       	ldd	r20, Y+32	; 0x20
     ba0:	41 11       	cpse	r20, r1
     ba2:	0b c0       	rjmp	.+22     	; 0xbba <prvCopyDataToQueue+0x2a>
     ba4:	88 81       	ld	r24, Y
     ba6:	99 81       	ldd	r25, Y+1	; 0x01
     ba8:	89 2b       	or	r24, r25
     baa:	09 f0       	breq	.+2      	; 0xbae <prvCopyDataToQueue+0x1e>
     bac:	41 c0       	rjmp	.+130    	; 0xc30 <prvCopyDataToQueue+0xa0>
     bae:	8c 81       	ldd	r24, Y+4	; 0x04
     bb0:	9d 81       	ldd	r25, Y+5	; 0x05
     bb2:	7d d7       	rcall	.+3834   	; 0x1aae <xTaskPriorityDisinherit>
     bb4:	1d 82       	std	Y+5, r1	; 0x05
     bb6:	1c 82       	std	Y+4, r1	; 0x04
     bb8:	42 c0       	rjmp	.+132    	; 0xc3e <prvCopyDataToQueue+0xae>
     bba:	01 11       	cpse	r16, r1
     bbc:	17 c0       	rjmp	.+46     	; 0xbec <prvCopyDataToQueue+0x5c>
     bbe:	50 e0       	ldi	r21, 0x00	; 0
     bc0:	8a 81       	ldd	r24, Y+2	; 0x02
     bc2:	9b 81       	ldd	r25, Y+3	; 0x03
     bc4:	0e 94 eb 18 	call	0x31d6	; 0x31d6 <memcpy>
     bc8:	28 a1       	ldd	r18, Y+32	; 0x20
     bca:	8a 81       	ldd	r24, Y+2	; 0x02
     bcc:	9b 81       	ldd	r25, Y+3	; 0x03
     bce:	82 0f       	add	r24, r18
     bd0:	91 1d       	adc	r25, r1
     bd2:	9b 83       	std	Y+3, r25	; 0x03
     bd4:	8a 83       	std	Y+2, r24	; 0x02
     bd6:	2c 81       	ldd	r18, Y+4	; 0x04
     bd8:	3d 81       	ldd	r19, Y+5	; 0x05
     bda:	82 17       	cp	r24, r18
     bdc:	93 07       	cpc	r25, r19
     bde:	50 f1       	brcs	.+84     	; 0xc34 <prvCopyDataToQueue+0xa4>
     be0:	88 81       	ld	r24, Y
     be2:	99 81       	ldd	r25, Y+1	; 0x01
     be4:	9b 83       	std	Y+3, r25	; 0x03
     be6:	8a 83       	std	Y+2, r24	; 0x02
     be8:	80 e0       	ldi	r24, 0x00	; 0
     bea:	29 c0       	rjmp	.+82     	; 0xc3e <prvCopyDataToQueue+0xae>
     bec:	50 e0       	ldi	r21, 0x00	; 0
     bee:	8e 81       	ldd	r24, Y+6	; 0x06
     bf0:	9f 81       	ldd	r25, Y+7	; 0x07
     bf2:	0e 94 eb 18 	call	0x31d6	; 0x31d6 <memcpy>
     bf6:	88 a1       	ldd	r24, Y+32	; 0x20
     bf8:	90 e0       	ldi	r25, 0x00	; 0
     bfa:	91 95       	neg	r25
     bfc:	81 95       	neg	r24
     bfe:	91 09       	sbc	r25, r1
     c00:	2e 81       	ldd	r18, Y+6	; 0x06
     c02:	3f 81       	ldd	r19, Y+7	; 0x07
     c04:	28 0f       	add	r18, r24
     c06:	39 1f       	adc	r19, r25
     c08:	3f 83       	std	Y+7, r19	; 0x07
     c0a:	2e 83       	std	Y+6, r18	; 0x06
     c0c:	48 81       	ld	r20, Y
     c0e:	59 81       	ldd	r21, Y+1	; 0x01
     c10:	24 17       	cp	r18, r20
     c12:	35 07       	cpc	r19, r21
     c14:	30 f4       	brcc	.+12     	; 0xc22 <prvCopyDataToQueue+0x92>
     c16:	2c 81       	ldd	r18, Y+4	; 0x04
     c18:	3d 81       	ldd	r19, Y+5	; 0x05
     c1a:	82 0f       	add	r24, r18
     c1c:	93 1f       	adc	r25, r19
     c1e:	9f 83       	std	Y+7, r25	; 0x07
     c20:	8e 83       	std	Y+6, r24	; 0x06
     c22:	02 30       	cpi	r16, 0x02	; 2
     c24:	49 f4       	brne	.+18     	; 0xc38 <prvCopyDataToQueue+0xa8>
     c26:	11 23       	and	r17, r17
     c28:	49 f0       	breq	.+18     	; 0xc3c <prvCopyDataToQueue+0xac>
     c2a:	11 50       	subi	r17, 0x01	; 1
     c2c:	80 e0       	ldi	r24, 0x00	; 0
     c2e:	07 c0       	rjmp	.+14     	; 0xc3e <prvCopyDataToQueue+0xae>
     c30:	80 e0       	ldi	r24, 0x00	; 0
     c32:	05 c0       	rjmp	.+10     	; 0xc3e <prvCopyDataToQueue+0xae>
     c34:	80 e0       	ldi	r24, 0x00	; 0
     c36:	03 c0       	rjmp	.+6      	; 0xc3e <prvCopyDataToQueue+0xae>
     c38:	80 e0       	ldi	r24, 0x00	; 0
     c3a:	01 c0       	rjmp	.+2      	; 0xc3e <prvCopyDataToQueue+0xae>
     c3c:	80 e0       	ldi	r24, 0x00	; 0
     c3e:	1f 5f       	subi	r17, 0xFF	; 255
     c40:	1e 8f       	std	Y+30, r17	; 0x1e
     c42:	df 91       	pop	r29
     c44:	cf 91       	pop	r28
     c46:	1f 91       	pop	r17
     c48:	0f 91       	pop	r16
     c4a:	08 95       	ret

00000c4c <prvCopyDataFromQueue>:
     c4c:	fc 01       	movw	r30, r24
     c4e:	40 a1       	ldd	r20, Z+32	; 0x20
     c50:	44 23       	and	r20, r20
     c52:	a9 f0       	breq	.+42     	; 0xc7e <prvCopyDataFromQueue+0x32>
     c54:	50 e0       	ldi	r21, 0x00	; 0
     c56:	26 81       	ldd	r18, Z+6	; 0x06
     c58:	37 81       	ldd	r19, Z+7	; 0x07
     c5a:	24 0f       	add	r18, r20
     c5c:	35 1f       	adc	r19, r21
     c5e:	37 83       	std	Z+7, r19	; 0x07
     c60:	26 83       	std	Z+6, r18	; 0x06
     c62:	84 81       	ldd	r24, Z+4	; 0x04
     c64:	95 81       	ldd	r25, Z+5	; 0x05
     c66:	28 17       	cp	r18, r24
     c68:	39 07       	cpc	r19, r25
     c6a:	20 f0       	brcs	.+8      	; 0xc74 <prvCopyDataFromQueue+0x28>
     c6c:	80 81       	ld	r24, Z
     c6e:	91 81       	ldd	r25, Z+1	; 0x01
     c70:	97 83       	std	Z+7, r25	; 0x07
     c72:	86 83       	std	Z+6, r24	; 0x06
     c74:	cb 01       	movw	r24, r22
     c76:	66 81       	ldd	r22, Z+6	; 0x06
     c78:	77 81       	ldd	r23, Z+7	; 0x07
     c7a:	0c 94 eb 18 	jmp	0x31d6	; 0x31d6 <memcpy>
     c7e:	08 95       	ret

00000c80 <prvUnlockQueue>:
     c80:	ef 92       	push	r14
     c82:	ff 92       	push	r15
     c84:	0f 93       	push	r16
     c86:	1f 93       	push	r17
     c88:	cf 93       	push	r28
     c8a:	8c 01       	movw	r16, r24
     c8c:	0f b6       	in	r0, 0x3f	; 63
     c8e:	f8 94       	cli
     c90:	0f 92       	push	r0
     c92:	fc 01       	movw	r30, r24
     c94:	c2 a1       	ldd	r28, Z+34	; 0x22
     c96:	1c 16       	cp	r1, r28
     c98:	9c f4       	brge	.+38     	; 0xcc0 <prvUnlockQueue+0x40>
     c9a:	83 89       	ldd	r24, Z+19	; 0x13
     c9c:	81 11       	cpse	r24, r1
     c9e:	06 c0       	rjmp	.+12     	; 0xcac <prvUnlockQueue+0x2c>
     ca0:	0f c0       	rjmp	.+30     	; 0xcc0 <prvUnlockQueue+0x40>
     ca2:	f8 01       	movw	r30, r16
     ca4:	83 89       	ldd	r24, Z+19	; 0x13
     ca6:	81 11       	cpse	r24, r1
     ca8:	05 c0       	rjmp	.+10     	; 0xcb4 <prvUnlockQueue+0x34>
     caa:	0a c0       	rjmp	.+20     	; 0xcc0 <prvUnlockQueue+0x40>
     cac:	78 01       	movw	r14, r16
     cae:	f3 e1       	ldi	r31, 0x13	; 19
     cb0:	ef 0e       	add	r14, r31
     cb2:	f1 1c       	adc	r15, r1
     cb4:	c7 01       	movw	r24, r14
     cb6:	41 d6       	rcall	.+3202   	; 0x193a <xTaskRemoveFromEventList>
     cb8:	81 11       	cpse	r24, r1
     cba:	e7 d6       	rcall	.+3534   	; 0x1a8a <vTaskMissedYield>
     cbc:	c1 50       	subi	r28, 0x01	; 1
     cbe:	89 f7       	brne	.-30     	; 0xca2 <prvUnlockQueue+0x22>
     cc0:	8f ef       	ldi	r24, 0xFF	; 255
     cc2:	f8 01       	movw	r30, r16
     cc4:	82 a3       	std	Z+34, r24	; 0x22
     cc6:	0f 90       	pop	r0
     cc8:	0f be       	out	0x3f, r0	; 63
     cca:	0f b6       	in	r0, 0x3f	; 63
     ccc:	f8 94       	cli
     cce:	0f 92       	push	r0
     cd0:	c1 a1       	ldd	r28, Z+33	; 0x21
     cd2:	1c 16       	cp	r1, r28
     cd4:	9c f4       	brge	.+38     	; 0xcfc <prvUnlockQueue+0x7c>
     cd6:	80 85       	ldd	r24, Z+8	; 0x08
     cd8:	81 11       	cpse	r24, r1
     cda:	06 c0       	rjmp	.+12     	; 0xce8 <prvUnlockQueue+0x68>
     cdc:	0f c0       	rjmp	.+30     	; 0xcfc <prvUnlockQueue+0x7c>
     cde:	f8 01       	movw	r30, r16
     ce0:	80 85       	ldd	r24, Z+8	; 0x08
     ce2:	81 11       	cpse	r24, r1
     ce4:	05 c0       	rjmp	.+10     	; 0xcf0 <prvUnlockQueue+0x70>
     ce6:	0a c0       	rjmp	.+20     	; 0xcfc <prvUnlockQueue+0x7c>
     ce8:	78 01       	movw	r14, r16
     cea:	f8 e0       	ldi	r31, 0x08	; 8
     cec:	ef 0e       	add	r14, r31
     cee:	f1 1c       	adc	r15, r1
     cf0:	c7 01       	movw	r24, r14
     cf2:	23 d6       	rcall	.+3142   	; 0x193a <xTaskRemoveFromEventList>
     cf4:	81 11       	cpse	r24, r1
     cf6:	c9 d6       	rcall	.+3474   	; 0x1a8a <vTaskMissedYield>
     cf8:	c1 50       	subi	r28, 0x01	; 1
     cfa:	89 f7       	brne	.-30     	; 0xcde <prvUnlockQueue+0x5e>
     cfc:	8f ef       	ldi	r24, 0xFF	; 255
     cfe:	f8 01       	movw	r30, r16
     d00:	81 a3       	std	Z+33, r24	; 0x21
     d02:	0f 90       	pop	r0
     d04:	0f be       	out	0x3f, r0	; 63
     d06:	cf 91       	pop	r28
     d08:	1f 91       	pop	r17
     d0a:	0f 91       	pop	r16
     d0c:	ff 90       	pop	r15
     d0e:	ef 90       	pop	r14
     d10:	08 95       	ret

00000d12 <xQueueGenericReset>:
     d12:	cf 93       	push	r28
     d14:	df 93       	push	r29
     d16:	ec 01       	movw	r28, r24
     d18:	0f b6       	in	r0, 0x3f	; 63
     d1a:	f8 94       	cli
     d1c:	0f 92       	push	r0
     d1e:	e8 81       	ld	r30, Y
     d20:	f9 81       	ldd	r31, Y+1	; 0x01
     d22:	8f 8d       	ldd	r24, Y+31	; 0x1f
     d24:	28 a1       	ldd	r18, Y+32	; 0x20
     d26:	90 e0       	ldi	r25, 0x00	; 0
     d28:	30 e0       	ldi	r19, 0x00	; 0
     d2a:	82 9f       	mul	r24, r18
     d2c:	a0 01       	movw	r20, r0
     d2e:	83 9f       	mul	r24, r19
     d30:	50 0d       	add	r21, r0
     d32:	92 9f       	mul	r25, r18
     d34:	50 0d       	add	r21, r0
     d36:	11 24       	eor	r1, r1
     d38:	4e 0f       	add	r20, r30
     d3a:	5f 1f       	adc	r21, r31
     d3c:	5d 83       	std	Y+5, r21	; 0x05
     d3e:	4c 83       	std	Y+4, r20	; 0x04
     d40:	1e 8e       	std	Y+30, r1	; 0x1e
     d42:	fb 83       	std	Y+3, r31	; 0x03
     d44:	ea 83       	std	Y+2, r30	; 0x02
     d46:	01 97       	sbiw	r24, 0x01	; 1
     d48:	82 9f       	mul	r24, r18
     d4a:	a0 01       	movw	r20, r0
     d4c:	83 9f       	mul	r24, r19
     d4e:	50 0d       	add	r21, r0
     d50:	92 9f       	mul	r25, r18
     d52:	50 0d       	add	r21, r0
     d54:	11 24       	eor	r1, r1
     d56:	cf 01       	movw	r24, r30
     d58:	84 0f       	add	r24, r20
     d5a:	95 1f       	adc	r25, r21
     d5c:	9f 83       	std	Y+7, r25	; 0x07
     d5e:	8e 83       	std	Y+6, r24	; 0x06
     d60:	8f ef       	ldi	r24, 0xFF	; 255
     d62:	89 a3       	std	Y+33, r24	; 0x21
     d64:	8a a3       	std	Y+34, r24	; 0x22
     d66:	61 11       	cpse	r22, r1
     d68:	0a c0       	rjmp	.+20     	; 0xd7e <xQueueGenericReset+0x6c>
     d6a:	88 85       	ldd	r24, Y+8	; 0x08
     d6c:	88 23       	and	r24, r24
     d6e:	69 f0       	breq	.+26     	; 0xd8a <xQueueGenericReset+0x78>
     d70:	ce 01       	movw	r24, r28
     d72:	08 96       	adiw	r24, 0x08	; 8
     d74:	e2 d5       	rcall	.+3012   	; 0x193a <xTaskRemoveFromEventList>
     d76:	88 23       	and	r24, r24
     d78:	41 f0       	breq	.+16     	; 0xd8a <xQueueGenericReset+0x78>
     d7a:	3a de       	rcall	.-908    	; 0x9f0 <vPortYield>
     d7c:	06 c0       	rjmp	.+12     	; 0xd8a <xQueueGenericReset+0x78>
     d7e:	ce 01       	movw	r24, r28
     d80:	08 96       	adiw	r24, 0x08	; 8
     d82:	ee dc       	rcall	.-1572   	; 0x760 <vListInitialise>
     d84:	ce 01       	movw	r24, r28
     d86:	43 96       	adiw	r24, 0x13	; 19
     d88:	eb dc       	rcall	.-1578   	; 0x760 <vListInitialise>
     d8a:	0f 90       	pop	r0
     d8c:	0f be       	out	0x3f, r0	; 63
     d8e:	81 e0       	ldi	r24, 0x01	; 1
     d90:	df 91       	pop	r29
     d92:	cf 91       	pop	r28
     d94:	08 95       	ret

00000d96 <xQueueGenericCreate>:
     d96:	ff 92       	push	r15
     d98:	0f 93       	push	r16
     d9a:	1f 93       	push	r17
     d9c:	cf 93       	push	r28
     d9e:	df 93       	push	r29
     da0:	08 2f       	mov	r16, r24
     da2:	16 2f       	mov	r17, r22
     da4:	f4 2e       	mov	r15, r20
     da6:	66 23       	and	r22, r22
     da8:	b9 f0       	breq	.+46     	; 0xdd8 <xQueueGenericCreate+0x42>
     daa:	86 9f       	mul	r24, r22
     dac:	c0 01       	movw	r24, r0
     dae:	11 24       	eor	r1, r1
     db0:	85 96       	adiw	r24, 0x25	; 37
     db2:	f2 db       	rcall	.-2076   	; 0x598 <pvPortMalloc>
     db4:	ec 01       	movw	r28, r24
     db6:	00 97       	sbiw	r24, 0x00	; 0
     db8:	41 f4       	brne	.+16     	; 0xdca <xQueueGenericCreate+0x34>
     dba:	14 c0       	rjmp	.+40     	; 0xde4 <xQueueGenericCreate+0x4e>
     dbc:	0f 8f       	std	Y+31, r16	; 0x1f
     dbe:	18 a3       	std	Y+32, r17	; 0x20
     dc0:	61 e0       	ldi	r22, 0x01	; 1
     dc2:	ce 01       	movw	r24, r28
     dc4:	a6 df       	rcall	.-180    	; 0xd12 <xQueueGenericReset>
     dc6:	fc a2       	std	Y+36, r15	; 0x24
     dc8:	0d c0       	rjmp	.+26     	; 0xde4 <xQueueGenericCreate+0x4e>
     dca:	85 96       	adiw	r24, 0x25	; 37
     dcc:	99 83       	std	Y+1, r25	; 0x01
     dce:	88 83       	st	Y, r24
     dd0:	f5 cf       	rjmp	.-22     	; 0xdbc <xQueueGenericCreate+0x26>
     dd2:	d9 83       	std	Y+1, r29	; 0x01
     dd4:	c8 83       	st	Y, r28
     dd6:	f2 cf       	rjmp	.-28     	; 0xdbc <xQueueGenericCreate+0x26>
     dd8:	85 e2       	ldi	r24, 0x25	; 37
     dda:	90 e0       	ldi	r25, 0x00	; 0
     ddc:	dd db       	rcall	.-2118   	; 0x598 <pvPortMalloc>
     dde:	ec 01       	movw	r28, r24
     de0:	89 2b       	or	r24, r25
     de2:	b9 f7       	brne	.-18     	; 0xdd2 <xQueueGenericCreate+0x3c>
     de4:	ce 01       	movw	r24, r28
     de6:	df 91       	pop	r29
     de8:	cf 91       	pop	r28
     dea:	1f 91       	pop	r17
     dec:	0f 91       	pop	r16
     dee:	ff 90       	pop	r15
     df0:	08 95       	ret

00000df2 <xQueueGenericSend>:
     df2:	9f 92       	push	r9
     df4:	af 92       	push	r10
     df6:	bf 92       	push	r11
     df8:	cf 92       	push	r12
     dfa:	df 92       	push	r13
     dfc:	ef 92       	push	r14
     dfe:	ff 92       	push	r15
     e00:	0f 93       	push	r16
     e02:	1f 93       	push	r17
     e04:	cf 93       	push	r28
     e06:	df 93       	push	r29
     e08:	cd b7       	in	r28, 0x3d	; 61
     e0a:	de b7       	in	r29, 0x3e	; 62
     e0c:	29 97       	sbiw	r28, 0x09	; 9
     e0e:	0f b6       	in	r0, 0x3f	; 63
     e10:	f8 94       	cli
     e12:	de bf       	out	0x3e, r29	; 62
     e14:	0f be       	out	0x3f, r0	; 63
     e16:	cd bf       	out	0x3d, r28	; 61
     e18:	7c 01       	movw	r14, r24
     e1a:	5b 01       	movw	r10, r22
     e1c:	2e 83       	std	Y+6, r18	; 0x06
     e1e:	3f 83       	std	Y+7, r19	; 0x07
     e20:	48 87       	std	Y+8, r20	; 0x08
     e22:	59 87       	std	Y+9, r21	; 0x09
     e24:	10 e0       	ldi	r17, 0x00	; 0
     e26:	99 24       	eor	r9, r9
     e28:	93 94       	inc	r9
     e2a:	6c 01       	movw	r12, r24
     e2c:	88 e0       	ldi	r24, 0x08	; 8
     e2e:	c8 0e       	add	r12, r24
     e30:	d1 1c       	adc	r13, r1
     e32:	0f b6       	in	r0, 0x3f	; 63
     e34:	f8 94       	cli
     e36:	0f 92       	push	r0
     e38:	f7 01       	movw	r30, r14
     e3a:	96 8d       	ldd	r25, Z+30	; 0x1e
     e3c:	87 8d       	ldd	r24, Z+31	; 0x1f
     e3e:	98 17       	cp	r25, r24
     e40:	10 f0       	brcs	.+4      	; 0xe46 <xQueueGenericSend+0x54>
     e42:	02 30       	cpi	r16, 0x02	; 2
     e44:	a9 f4       	brne	.+42     	; 0xe70 <xQueueGenericSend+0x7e>
     e46:	40 2f       	mov	r20, r16
     e48:	b5 01       	movw	r22, r10
     e4a:	c7 01       	movw	r24, r14
     e4c:	a1 de       	rcall	.-702    	; 0xb90 <prvCopyDataToQueue>
     e4e:	f7 01       	movw	r30, r14
     e50:	93 89       	ldd	r25, Z+19	; 0x13
     e52:	99 23       	and	r25, r25
     e54:	39 f0       	breq	.+14     	; 0xe64 <xQueueGenericSend+0x72>
     e56:	c7 01       	movw	r24, r14
     e58:	43 96       	adiw	r24, 0x13	; 19
     e5a:	6f d5       	rcall	.+2782   	; 0x193a <xTaskRemoveFromEventList>
     e5c:	88 23       	and	r24, r24
     e5e:	21 f0       	breq	.+8      	; 0xe68 <xQueueGenericSend+0x76>
     e60:	c7 dd       	rcall	.-1138   	; 0x9f0 <vPortYield>
     e62:	02 c0       	rjmp	.+4      	; 0xe68 <xQueueGenericSend+0x76>
     e64:	81 11       	cpse	r24, r1
     e66:	c4 dd       	rcall	.-1144   	; 0x9f0 <vPortYield>
     e68:	0f 90       	pop	r0
     e6a:	0f be       	out	0x3f, r0	; 63
     e6c:	81 e0       	ldi	r24, 0x01	; 1
     e6e:	4b c0       	rjmp	.+150    	; 0xf06 <xQueueGenericSend+0x114>
     e70:	8e 81       	ldd	r24, Y+6	; 0x06
     e72:	9f 81       	ldd	r25, Y+7	; 0x07
     e74:	a8 85       	ldd	r26, Y+8	; 0x08
     e76:	b9 85       	ldd	r27, Y+9	; 0x09
     e78:	89 2b       	or	r24, r25
     e7a:	8a 2b       	or	r24, r26
     e7c:	8b 2b       	or	r24, r27
     e7e:	21 f4       	brne	.+8      	; 0xe88 <xQueueGenericSend+0x96>
     e80:	0f 90       	pop	r0
     e82:	0f be       	out	0x3f, r0	; 63
     e84:	80 e0       	ldi	r24, 0x00	; 0
     e86:	3f c0       	rjmp	.+126    	; 0xf06 <xQueueGenericSend+0x114>
     e88:	11 11       	cpse	r17, r1
     e8a:	04 c0       	rjmp	.+8      	; 0xe94 <xQueueGenericSend+0xa2>
     e8c:	ce 01       	movw	r24, r28
     e8e:	01 96       	adiw	r24, 0x01	; 1
     e90:	96 d5       	rcall	.+2860   	; 0x19be <vTaskInternalSetTimeOutState>
     e92:	19 2d       	mov	r17, r9
     e94:	0f 90       	pop	r0
     e96:	0f be       	out	0x3f, r0	; 63
     e98:	15 d3       	rcall	.+1578   	; 0x14c4 <vTaskSuspendAll>
     e9a:	0f b6       	in	r0, 0x3f	; 63
     e9c:	f8 94       	cli
     e9e:	0f 92       	push	r0
     ea0:	f7 01       	movw	r30, r14
     ea2:	81 a1       	ldd	r24, Z+33	; 0x21
     ea4:	8f 3f       	cpi	r24, 0xFF	; 255
     ea6:	09 f4       	brne	.+2      	; 0xeaa <xQueueGenericSend+0xb8>
     ea8:	11 a2       	std	Z+33, r1	; 0x21
     eaa:	f7 01       	movw	r30, r14
     eac:	82 a1       	ldd	r24, Z+34	; 0x22
     eae:	8f 3f       	cpi	r24, 0xFF	; 255
     eb0:	09 f4       	brne	.+2      	; 0xeb4 <xQueueGenericSend+0xc2>
     eb2:	12 a2       	std	Z+34, r1	; 0x22
     eb4:	0f 90       	pop	r0
     eb6:	0f be       	out	0x3f, r0	; 63
     eb8:	be 01       	movw	r22, r28
     eba:	6a 5f       	subi	r22, 0xFA	; 250
     ebc:	7f 4f       	sbci	r23, 0xFF	; 255
     ebe:	ce 01       	movw	r24, r28
     ec0:	01 96       	adiw	r24, 0x01	; 1
     ec2:	8e d5       	rcall	.+2844   	; 0x19e0 <xTaskCheckForTimeOut>
     ec4:	81 11       	cpse	r24, r1
     ec6:	1b c0       	rjmp	.+54     	; 0xefe <xQueueGenericSend+0x10c>
     ec8:	0f b6       	in	r0, 0x3f	; 63
     eca:	f8 94       	cli
     ecc:	0f 92       	push	r0
     ece:	f7 01       	movw	r30, r14
     ed0:	96 8d       	ldd	r25, Z+30	; 0x1e
     ed2:	87 8d       	ldd	r24, Z+31	; 0x1f
     ed4:	0f 90       	pop	r0
     ed6:	0f be       	out	0x3f, r0	; 63
     ed8:	98 13       	cpse	r25, r24
     eda:	0d c0       	rjmp	.+26     	; 0xef6 <xQueueGenericSend+0x104>
     edc:	4e 81       	ldd	r20, Y+6	; 0x06
     ede:	5f 81       	ldd	r21, Y+7	; 0x07
     ee0:	68 85       	ldd	r22, Y+8	; 0x08
     ee2:	79 85       	ldd	r23, Y+9	; 0x09
     ee4:	c6 01       	movw	r24, r12
     ee6:	f2 d4       	rcall	.+2532   	; 0x18cc <vTaskPlaceOnEventList>
     ee8:	c7 01       	movw	r24, r14
     eea:	ca de       	rcall	.-620    	; 0xc80 <prvUnlockQueue>
     eec:	d1 d3       	rcall	.+1954   	; 0x1690 <xTaskResumeAll>
     eee:	81 11       	cpse	r24, r1
     ef0:	a0 cf       	rjmp	.-192    	; 0xe32 <xQueueGenericSend+0x40>
     ef2:	7e dd       	rcall	.-1284   	; 0x9f0 <vPortYield>
     ef4:	9e cf       	rjmp	.-196    	; 0xe32 <xQueueGenericSend+0x40>
     ef6:	c7 01       	movw	r24, r14
     ef8:	c3 de       	rcall	.-634    	; 0xc80 <prvUnlockQueue>
     efa:	ca d3       	rcall	.+1940   	; 0x1690 <xTaskResumeAll>
     efc:	9a cf       	rjmp	.-204    	; 0xe32 <xQueueGenericSend+0x40>
     efe:	c7 01       	movw	r24, r14
     f00:	bf de       	rcall	.-642    	; 0xc80 <prvUnlockQueue>
     f02:	c6 d3       	rcall	.+1932   	; 0x1690 <xTaskResumeAll>
     f04:	80 e0       	ldi	r24, 0x00	; 0
     f06:	29 96       	adiw	r28, 0x09	; 9
     f08:	0f b6       	in	r0, 0x3f	; 63
     f0a:	f8 94       	cli
     f0c:	de bf       	out	0x3e, r29	; 62
     f0e:	0f be       	out	0x3f, r0	; 63
     f10:	cd bf       	out	0x3d, r28	; 61
     f12:	df 91       	pop	r29
     f14:	cf 91       	pop	r28
     f16:	1f 91       	pop	r17
     f18:	0f 91       	pop	r16
     f1a:	ff 90       	pop	r15
     f1c:	ef 90       	pop	r14
     f1e:	df 90       	pop	r13
     f20:	cf 90       	pop	r12
     f22:	bf 90       	pop	r11
     f24:	af 90       	pop	r10
     f26:	9f 90       	pop	r9
     f28:	08 95       	ret

00000f2a <xQueueGenericSendFromISR>:
     f2a:	ef 92       	push	r14
     f2c:	ff 92       	push	r15
     f2e:	0f 93       	push	r16
     f30:	1f 93       	push	r17
     f32:	cf 93       	push	r28
     f34:	df 93       	push	r29
     f36:	8a 01       	movw	r16, r20
     f38:	fc 01       	movw	r30, r24
     f3a:	56 8d       	ldd	r21, Z+30	; 0x1e
     f3c:	37 8d       	ldd	r19, Z+31	; 0x1f
     f3e:	53 17       	cp	r21, r19
     f40:	10 f0       	brcs	.+4      	; 0xf46 <xQueueGenericSendFromISR+0x1c>
     f42:	22 30       	cpi	r18, 0x02	; 2
     f44:	e1 f4       	brne	.+56     	; 0xf7e <xQueueGenericSendFromISR+0x54>
     f46:	42 2f       	mov	r20, r18
     f48:	78 01       	movw	r14, r16
     f4a:	ec 01       	movw	r28, r24
     f4c:	1a a1       	ldd	r17, Y+34	; 0x22
     f4e:	20 de       	rcall	.-960    	; 0xb90 <prvCopyDataToQueue>
     f50:	1f 3f       	cpi	r17, 0xFF	; 255
     f52:	79 f4       	brne	.+30     	; 0xf72 <xQueueGenericSendFromISR+0x48>
     f54:	8b 89       	ldd	r24, Y+19	; 0x13
     f56:	88 23       	and	r24, r24
     f58:	a1 f0       	breq	.+40     	; 0xf82 <xQueueGenericSendFromISR+0x58>
     f5a:	ce 01       	movw	r24, r28
     f5c:	43 96       	adiw	r24, 0x13	; 19
     f5e:	ed d4       	rcall	.+2522   	; 0x193a <xTaskRemoveFromEventList>
     f60:	88 23       	and	r24, r24
     f62:	89 f0       	breq	.+34     	; 0xf86 <xQueueGenericSendFromISR+0x5c>
     f64:	e1 14       	cp	r14, r1
     f66:	f1 04       	cpc	r15, r1
     f68:	81 f0       	breq	.+32     	; 0xf8a <xQueueGenericSendFromISR+0x60>
     f6a:	81 e0       	ldi	r24, 0x01	; 1
     f6c:	f7 01       	movw	r30, r14
     f6e:	80 83       	st	Z, r24
     f70:	0d c0       	rjmp	.+26     	; 0xf8c <xQueueGenericSendFromISR+0x62>
     f72:	ff 24       	eor	r15, r15
     f74:	f3 94       	inc	r15
     f76:	f1 0e       	add	r15, r17
     f78:	fa a2       	std	Y+34, r15	; 0x22
     f7a:	81 e0       	ldi	r24, 0x01	; 1
     f7c:	07 c0       	rjmp	.+14     	; 0xf8c <xQueueGenericSendFromISR+0x62>
     f7e:	80 e0       	ldi	r24, 0x00	; 0
     f80:	05 c0       	rjmp	.+10     	; 0xf8c <xQueueGenericSendFromISR+0x62>
     f82:	81 e0       	ldi	r24, 0x01	; 1
     f84:	03 c0       	rjmp	.+6      	; 0xf8c <xQueueGenericSendFromISR+0x62>
     f86:	81 e0       	ldi	r24, 0x01	; 1
     f88:	01 c0       	rjmp	.+2      	; 0xf8c <xQueueGenericSendFromISR+0x62>
     f8a:	81 e0       	ldi	r24, 0x01	; 1
     f8c:	df 91       	pop	r29
     f8e:	cf 91       	pop	r28
     f90:	1f 91       	pop	r17
     f92:	0f 91       	pop	r16
     f94:	ff 90       	pop	r15
     f96:	ef 90       	pop	r14
     f98:	08 95       	ret

00000f9a <xQueueReceive>:
     f9a:	9f 92       	push	r9
     f9c:	af 92       	push	r10
     f9e:	bf 92       	push	r11
     fa0:	cf 92       	push	r12
     fa2:	df 92       	push	r13
     fa4:	ef 92       	push	r14
     fa6:	ff 92       	push	r15
     fa8:	0f 93       	push	r16
     faa:	1f 93       	push	r17
     fac:	cf 93       	push	r28
     fae:	df 93       	push	r29
     fb0:	cd b7       	in	r28, 0x3d	; 61
     fb2:	de b7       	in	r29, 0x3e	; 62
     fb4:	29 97       	sbiw	r28, 0x09	; 9
     fb6:	0f b6       	in	r0, 0x3f	; 63
     fb8:	f8 94       	cli
     fba:	de bf       	out	0x3e, r29	; 62
     fbc:	0f be       	out	0x3f, r0	; 63
     fbe:	cd bf       	out	0x3d, r28	; 61
     fc0:	8c 01       	movw	r16, r24
     fc2:	5b 01       	movw	r10, r22
     fc4:	2e 83       	std	Y+6, r18	; 0x06
     fc6:	3f 83       	std	Y+7, r19	; 0x07
     fc8:	48 87       	std	Y+8, r20	; 0x08
     fca:	59 87       	std	Y+9, r21	; 0x09
     fcc:	e1 2c       	mov	r14, r1
     fce:	99 24       	eor	r9, r9
     fd0:	93 94       	inc	r9
     fd2:	6c 01       	movw	r12, r24
     fd4:	83 e1       	ldi	r24, 0x13	; 19
     fd6:	c8 0e       	add	r12, r24
     fd8:	d1 1c       	adc	r13, r1
     fda:	0f b6       	in	r0, 0x3f	; 63
     fdc:	f8 94       	cli
     fde:	0f 92       	push	r0
     fe0:	f8 01       	movw	r30, r16
     fe2:	f6 8c       	ldd	r15, Z+30	; 0x1e
     fe4:	ff 20       	and	r15, r15
     fe6:	91 f0       	breq	.+36     	; 0x100c <xQueueReceive+0x72>
     fe8:	b5 01       	movw	r22, r10
     fea:	c8 01       	movw	r24, r16
     fec:	2f de       	rcall	.-930    	; 0xc4c <prvCopyDataFromQueue>
     fee:	fa 94       	dec	r15
     ff0:	f8 01       	movw	r30, r16
     ff2:	f6 8e       	std	Z+30, r15	; 0x1e
     ff4:	80 85       	ldd	r24, Z+8	; 0x08
     ff6:	88 23       	and	r24, r24
     ff8:	29 f0       	breq	.+10     	; 0x1004 <xQueueReceive+0x6a>
     ffa:	c8 01       	movw	r24, r16
     ffc:	08 96       	adiw	r24, 0x08	; 8
     ffe:	9d d4       	rcall	.+2362   	; 0x193a <xTaskRemoveFromEventList>
    1000:	81 11       	cpse	r24, r1
    1002:	f6 dc       	rcall	.-1556   	; 0x9f0 <vPortYield>
    1004:	0f 90       	pop	r0
    1006:	0f be       	out	0x3f, r0	; 63
    1008:	81 e0       	ldi	r24, 0x01	; 1
    100a:	4a c0       	rjmp	.+148    	; 0x10a0 <xQueueReceive+0x106>
    100c:	8e 81       	ldd	r24, Y+6	; 0x06
    100e:	9f 81       	ldd	r25, Y+7	; 0x07
    1010:	a8 85       	ldd	r26, Y+8	; 0x08
    1012:	b9 85       	ldd	r27, Y+9	; 0x09
    1014:	89 2b       	or	r24, r25
    1016:	8a 2b       	or	r24, r26
    1018:	8b 2b       	or	r24, r27
    101a:	21 f4       	brne	.+8      	; 0x1024 <xQueueReceive+0x8a>
    101c:	0f 90       	pop	r0
    101e:	0f be       	out	0x3f, r0	; 63
    1020:	80 e0       	ldi	r24, 0x00	; 0
    1022:	3e c0       	rjmp	.+124    	; 0x10a0 <xQueueReceive+0x106>
    1024:	e1 10       	cpse	r14, r1
    1026:	04 c0       	rjmp	.+8      	; 0x1030 <xQueueReceive+0x96>
    1028:	ce 01       	movw	r24, r28
    102a:	01 96       	adiw	r24, 0x01	; 1
    102c:	c8 d4       	rcall	.+2448   	; 0x19be <vTaskInternalSetTimeOutState>
    102e:	e9 2c       	mov	r14, r9
    1030:	0f 90       	pop	r0
    1032:	0f be       	out	0x3f, r0	; 63
    1034:	47 d2       	rcall	.+1166   	; 0x14c4 <vTaskSuspendAll>
    1036:	0f b6       	in	r0, 0x3f	; 63
    1038:	f8 94       	cli
    103a:	0f 92       	push	r0
    103c:	f8 01       	movw	r30, r16
    103e:	81 a1       	ldd	r24, Z+33	; 0x21
    1040:	8f 3f       	cpi	r24, 0xFF	; 255
    1042:	09 f4       	brne	.+2      	; 0x1046 <xQueueReceive+0xac>
    1044:	11 a2       	std	Z+33, r1	; 0x21
    1046:	f8 01       	movw	r30, r16
    1048:	82 a1       	ldd	r24, Z+34	; 0x22
    104a:	8f 3f       	cpi	r24, 0xFF	; 255
    104c:	09 f4       	brne	.+2      	; 0x1050 <xQueueReceive+0xb6>
    104e:	12 a2       	std	Z+34, r1	; 0x22
    1050:	0f 90       	pop	r0
    1052:	0f be       	out	0x3f, r0	; 63
    1054:	be 01       	movw	r22, r28
    1056:	6a 5f       	subi	r22, 0xFA	; 250
    1058:	7f 4f       	sbci	r23, 0xFF	; 255
    105a:	ce 01       	movw	r24, r28
    105c:	01 96       	adiw	r24, 0x01	; 1
    105e:	c0 d4       	rcall	.+2432   	; 0x19e0 <xTaskCheckForTimeOut>
    1060:	81 11       	cpse	r24, r1
    1062:	15 c0       	rjmp	.+42     	; 0x108e <xQueueReceive+0xf4>
    1064:	c8 01       	movw	r24, r16
    1066:	89 dd       	rcall	.-1262   	; 0xb7a <prvIsQueueEmpty>
    1068:	88 23       	and	r24, r24
    106a:	69 f0       	breq	.+26     	; 0x1086 <xQueueReceive+0xec>
    106c:	4e 81       	ldd	r20, Y+6	; 0x06
    106e:	5f 81       	ldd	r21, Y+7	; 0x07
    1070:	68 85       	ldd	r22, Y+8	; 0x08
    1072:	79 85       	ldd	r23, Y+9	; 0x09
    1074:	c6 01       	movw	r24, r12
    1076:	2a d4       	rcall	.+2132   	; 0x18cc <vTaskPlaceOnEventList>
    1078:	c8 01       	movw	r24, r16
    107a:	02 de       	rcall	.-1020   	; 0xc80 <prvUnlockQueue>
    107c:	09 d3       	rcall	.+1554   	; 0x1690 <xTaskResumeAll>
    107e:	81 11       	cpse	r24, r1
    1080:	ac cf       	rjmp	.-168    	; 0xfda <xQueueReceive+0x40>
    1082:	b6 dc       	rcall	.-1684   	; 0x9f0 <vPortYield>
    1084:	aa cf       	rjmp	.-172    	; 0xfda <xQueueReceive+0x40>
    1086:	c8 01       	movw	r24, r16
    1088:	fb dd       	rcall	.-1034   	; 0xc80 <prvUnlockQueue>
    108a:	02 d3       	rcall	.+1540   	; 0x1690 <xTaskResumeAll>
    108c:	a6 cf       	rjmp	.-180    	; 0xfda <xQueueReceive+0x40>
    108e:	c8 01       	movw	r24, r16
    1090:	f7 dd       	rcall	.-1042   	; 0xc80 <prvUnlockQueue>
    1092:	fe d2       	rcall	.+1532   	; 0x1690 <xTaskResumeAll>
    1094:	c8 01       	movw	r24, r16
    1096:	71 dd       	rcall	.-1310   	; 0xb7a <prvIsQueueEmpty>
    1098:	88 23       	and	r24, r24
    109a:	09 f4       	brne	.+2      	; 0x109e <xQueueReceive+0x104>
    109c:	9e cf       	rjmp	.-196    	; 0xfda <xQueueReceive+0x40>
    109e:	80 e0       	ldi	r24, 0x00	; 0
    10a0:	29 96       	adiw	r28, 0x09	; 9
    10a2:	0f b6       	in	r0, 0x3f	; 63
    10a4:	f8 94       	cli
    10a6:	de bf       	out	0x3e, r29	; 62
    10a8:	0f be       	out	0x3f, r0	; 63
    10aa:	cd bf       	out	0x3d, r28	; 61
    10ac:	df 91       	pop	r29
    10ae:	cf 91       	pop	r28
    10b0:	1f 91       	pop	r17
    10b2:	0f 91       	pop	r16
    10b4:	ff 90       	pop	r15
    10b6:	ef 90       	pop	r14
    10b8:	df 90       	pop	r13
    10ba:	cf 90       	pop	r12
    10bc:	bf 90       	pop	r11
    10be:	af 90       	pop	r10
    10c0:	9f 90       	pop	r9
    10c2:	08 95       	ret

000010c4 <vQueueWaitForMessageRestricted>:
    10c4:	cf 93       	push	r28
    10c6:	df 93       	push	r29
    10c8:	ec 01       	movw	r28, r24
    10ca:	0f b6       	in	r0, 0x3f	; 63
    10cc:	f8 94       	cli
    10ce:	0f 92       	push	r0
    10d0:	89 a1       	ldd	r24, Y+33	; 0x21
    10d2:	8f 3f       	cpi	r24, 0xFF	; 255
    10d4:	09 f4       	brne	.+2      	; 0x10d8 <vQueueWaitForMessageRestricted+0x14>
    10d6:	19 a2       	std	Y+33, r1	; 0x21
    10d8:	8a a1       	ldd	r24, Y+34	; 0x22
    10da:	8f 3f       	cpi	r24, 0xFF	; 255
    10dc:	09 f4       	brne	.+2      	; 0x10e0 <vQueueWaitForMessageRestricted+0x1c>
    10de:	1a a2       	std	Y+34, r1	; 0x22
    10e0:	0f 90       	pop	r0
    10e2:	0f be       	out	0x3f, r0	; 63
    10e4:	8e 8d       	ldd	r24, Y+30	; 0x1e
    10e6:	81 11       	cpse	r24, r1
    10e8:	03 c0       	rjmp	.+6      	; 0x10f0 <vQueueWaitForMessageRestricted+0x2c>
    10ea:	ce 01       	movw	r24, r28
    10ec:	43 96       	adiw	r24, 0x13	; 19
    10ee:	05 d4       	rcall	.+2058   	; 0x18fa <vTaskPlaceOnEventListRestricted>
    10f0:	ce 01       	movw	r24, r28
    10f2:	c6 dd       	rcall	.-1140   	; 0xc80 <prvUnlockQueue>
    10f4:	df 91       	pop	r29
    10f6:	cf 91       	pop	r28
    10f8:	08 95       	ret

000010fa <prvResetNextTaskUnblockTime>:
    10fa:	e0 91 44 12 	lds	r30, 0x1244	; 0x801244 <pxDelayedTaskList>
    10fe:	f0 91 45 12 	lds	r31, 0x1245	; 0x801245 <pxDelayedTaskList+0x1>
    1102:	80 81       	ld	r24, Z
    1104:	81 11       	cpse	r24, r1
    1106:	0c c0       	rjmp	.+24     	; 0x1120 <prvResetNextTaskUnblockTime+0x26>
    1108:	8f ef       	ldi	r24, 0xFF	; 255
    110a:	9f ef       	ldi	r25, 0xFF	; 255
    110c:	dc 01       	movw	r26, r24
    110e:	80 93 11 12 	sts	0x1211, r24	; 0x801211 <xNextTaskUnblockTime>
    1112:	90 93 12 12 	sts	0x1212, r25	; 0x801212 <xNextTaskUnblockTime+0x1>
    1116:	a0 93 13 12 	sts	0x1213, r26	; 0x801213 <xNextTaskUnblockTime+0x2>
    111a:	b0 93 14 12 	sts	0x1214, r27	; 0x801214 <xNextTaskUnblockTime+0x3>
    111e:	08 95       	ret
    1120:	e0 91 44 12 	lds	r30, 0x1244	; 0x801244 <pxDelayedTaskList>
    1124:	f0 91 45 12 	lds	r31, 0x1245	; 0x801245 <pxDelayedTaskList+0x1>
    1128:	07 80       	ldd	r0, Z+7	; 0x07
    112a:	f0 85       	ldd	r31, Z+8	; 0x08
    112c:	e0 2d       	mov	r30, r0
    112e:	00 84       	ldd	r0, Z+8	; 0x08
    1130:	f1 85       	ldd	r31, Z+9	; 0x09
    1132:	e0 2d       	mov	r30, r0
    1134:	82 81       	ldd	r24, Z+2	; 0x02
    1136:	93 81       	ldd	r25, Z+3	; 0x03
    1138:	a4 81       	ldd	r26, Z+4	; 0x04
    113a:	b5 81       	ldd	r27, Z+5	; 0x05
    113c:	80 93 11 12 	sts	0x1211, r24	; 0x801211 <xNextTaskUnblockTime>
    1140:	90 93 12 12 	sts	0x1212, r25	; 0x801212 <xNextTaskUnblockTime+0x1>
    1144:	a0 93 13 12 	sts	0x1213, r26	; 0x801213 <xNextTaskUnblockTime+0x2>
    1148:	b0 93 14 12 	sts	0x1214, r27	; 0x801214 <xNextTaskUnblockTime+0x3>
    114c:	08 95       	ret

0000114e <prvAddCurrentTaskToDelayedList>:
    114e:	8f 92       	push	r8
    1150:	9f 92       	push	r9
    1152:	af 92       	push	r10
    1154:	bf 92       	push	r11
    1156:	cf 92       	push	r12
    1158:	df 92       	push	r13
    115a:	ef 92       	push	r14
    115c:	ff 92       	push	r15
    115e:	cf 93       	push	r28
    1160:	6b 01       	movw	r12, r22
    1162:	7c 01       	movw	r14, r24
    1164:	c4 2f       	mov	r28, r20
    1166:	80 90 1b 12 	lds	r8, 0x121B	; 0x80121b <xTickCount>
    116a:	90 90 1c 12 	lds	r9, 0x121C	; 0x80121c <xTickCount+0x1>
    116e:	a0 90 1d 12 	lds	r10, 0x121D	; 0x80121d <xTickCount+0x2>
    1172:	b0 90 1e 12 	lds	r11, 0x121E	; 0x80121e <xTickCount+0x3>
    1176:	80 91 88 12 	lds	r24, 0x1288	; 0x801288 <pxCurrentTCB>
    117a:	90 91 89 12 	lds	r25, 0x1289	; 0x801289 <pxCurrentTCB+0x1>
    117e:	02 96       	adiw	r24, 0x02	; 2
    1180:	62 db       	rcall	.-2364   	; 0x846 <uxListRemove>
    1182:	8f ef       	ldi	r24, 0xFF	; 255
    1184:	c8 16       	cp	r12, r24
    1186:	d8 06       	cpc	r13, r24
    1188:	e8 06       	cpc	r14, r24
    118a:	f8 06       	cpc	r15, r24
    118c:	61 f4       	brne	.+24     	; 0x11a6 <prvAddCurrentTaskToDelayedList+0x58>
    118e:	cc 23       	and	r28, r28
    1190:	51 f0       	breq	.+20     	; 0x11a6 <prvAddCurrentTaskToDelayedList+0x58>
    1192:	60 91 88 12 	lds	r22, 0x1288	; 0x801288 <pxCurrentTCB>
    1196:	70 91 89 12 	lds	r23, 0x1289	; 0x801289 <pxCurrentTCB+0x1>
    119a:	6e 5f       	subi	r22, 0xFE	; 254
    119c:	7f 4f       	sbci	r23, 0xFF	; 255
    119e:	80 e2       	ldi	r24, 0x20	; 32
    11a0:	92 e1       	ldi	r25, 0x12	; 18
    11a2:	f3 da       	rcall	.-2586   	; 0x78a <vListInsertEnd>
    11a4:	3d c0       	rjmp	.+122    	; 0x1220 <prvAddCurrentTaskToDelayedList+0xd2>
    11a6:	c8 0c       	add	r12, r8
    11a8:	d9 1c       	adc	r13, r9
    11aa:	ea 1c       	adc	r14, r10
    11ac:	fb 1c       	adc	r15, r11
    11ae:	e0 91 88 12 	lds	r30, 0x1288	; 0x801288 <pxCurrentTCB>
    11b2:	f0 91 89 12 	lds	r31, 0x1289	; 0x801289 <pxCurrentTCB+0x1>
    11b6:	c2 82       	std	Z+2, r12	; 0x02
    11b8:	d3 82       	std	Z+3, r13	; 0x03
    11ba:	e4 82       	std	Z+4, r14	; 0x04
    11bc:	f5 82       	std	Z+5, r15	; 0x05
    11be:	c8 14       	cp	r12, r8
    11c0:	d9 04       	cpc	r13, r9
    11c2:	ea 04       	cpc	r14, r10
    11c4:	fb 04       	cpc	r15, r11
    11c6:	60 f4       	brcc	.+24     	; 0x11e0 <prvAddCurrentTaskToDelayedList+0x92>
    11c8:	60 91 88 12 	lds	r22, 0x1288	; 0x801288 <pxCurrentTCB>
    11cc:	70 91 89 12 	lds	r23, 0x1289	; 0x801289 <pxCurrentTCB+0x1>
    11d0:	80 91 42 12 	lds	r24, 0x1242	; 0x801242 <pxOverflowDelayedTaskList>
    11d4:	90 91 43 12 	lds	r25, 0x1243	; 0x801243 <pxOverflowDelayedTaskList+0x1>
    11d8:	6e 5f       	subi	r22, 0xFE	; 254
    11da:	7f 4f       	sbci	r23, 0xFF	; 255
    11dc:	f7 da       	rcall	.-2578   	; 0x7cc <vListInsert>
    11de:	20 c0       	rjmp	.+64     	; 0x1220 <prvAddCurrentTaskToDelayedList+0xd2>
    11e0:	60 91 88 12 	lds	r22, 0x1288	; 0x801288 <pxCurrentTCB>
    11e4:	70 91 89 12 	lds	r23, 0x1289	; 0x801289 <pxCurrentTCB+0x1>
    11e8:	80 91 44 12 	lds	r24, 0x1244	; 0x801244 <pxDelayedTaskList>
    11ec:	90 91 45 12 	lds	r25, 0x1245	; 0x801245 <pxDelayedTaskList+0x1>
    11f0:	6e 5f       	subi	r22, 0xFE	; 254
    11f2:	7f 4f       	sbci	r23, 0xFF	; 255
    11f4:	eb da       	rcall	.-2602   	; 0x7cc <vListInsert>
    11f6:	80 91 11 12 	lds	r24, 0x1211	; 0x801211 <xNextTaskUnblockTime>
    11fa:	90 91 12 12 	lds	r25, 0x1212	; 0x801212 <xNextTaskUnblockTime+0x1>
    11fe:	a0 91 13 12 	lds	r26, 0x1213	; 0x801213 <xNextTaskUnblockTime+0x2>
    1202:	b0 91 14 12 	lds	r27, 0x1214	; 0x801214 <xNextTaskUnblockTime+0x3>
    1206:	c8 16       	cp	r12, r24
    1208:	d9 06       	cpc	r13, r25
    120a:	ea 06       	cpc	r14, r26
    120c:	fb 06       	cpc	r15, r27
    120e:	40 f4       	brcc	.+16     	; 0x1220 <prvAddCurrentTaskToDelayedList+0xd2>
    1210:	c0 92 11 12 	sts	0x1211, r12	; 0x801211 <xNextTaskUnblockTime>
    1214:	d0 92 12 12 	sts	0x1212, r13	; 0x801212 <xNextTaskUnblockTime+0x1>
    1218:	e0 92 13 12 	sts	0x1213, r14	; 0x801213 <xNextTaskUnblockTime+0x2>
    121c:	f0 92 14 12 	sts	0x1214, r15	; 0x801214 <xNextTaskUnblockTime+0x3>
    1220:	cf 91       	pop	r28
    1222:	ff 90       	pop	r15
    1224:	ef 90       	pop	r14
    1226:	df 90       	pop	r13
    1228:	cf 90       	pop	r12
    122a:	bf 90       	pop	r11
    122c:	af 90       	pop	r10
    122e:	9f 90       	pop	r9
    1230:	8f 90       	pop	r8
    1232:	08 95       	ret

00001234 <xTaskCreate>:
    1234:	4f 92       	push	r4
    1236:	5f 92       	push	r5
    1238:	6f 92       	push	r6
    123a:	7f 92       	push	r7
    123c:	8f 92       	push	r8
    123e:	9f 92       	push	r9
    1240:	af 92       	push	r10
    1242:	bf 92       	push	r11
    1244:	cf 92       	push	r12
    1246:	df 92       	push	r13
    1248:	ef 92       	push	r14
    124a:	ff 92       	push	r15
    124c:	0f 93       	push	r16
    124e:	cf 93       	push	r28
    1250:	df 93       	push	r29
    1252:	4c 01       	movw	r8, r24
    1254:	6b 01       	movw	r12, r22
    1256:	5a 01       	movw	r10, r20
    1258:	29 01       	movw	r4, r18
    125a:	ca 01       	movw	r24, r20
    125c:	9d d9       	rcall	.-3270   	; 0x598 <pvPortMalloc>
    125e:	3c 01       	movw	r6, r24
    1260:	89 2b       	or	r24, r25
    1262:	09 f4       	brne	.+2      	; 0x1266 <xTaskCreate+0x32>
    1264:	e4 c0       	rjmp	.+456    	; 0x142e <xTaskCreate+0x1fa>
    1266:	80 e3       	ldi	r24, 0x30	; 48
    1268:	90 e0       	ldi	r25, 0x00	; 0
    126a:	96 d9       	rcall	.-3284   	; 0x598 <pvPortMalloc>
    126c:	ec 01       	movw	r28, r24
    126e:	89 2b       	or	r24, r25
    1270:	99 f0       	breq	.+38     	; 0x1298 <xTaskCreate+0x64>
    1272:	7c 8e       	std	Y+28, r7	; 0x1c
    1274:	6b 8e       	std	Y+27, r6	; 0x1b
    1276:	a5 01       	movw	r20, r10
    1278:	65 ea       	ldi	r22, 0xA5	; 165
    127a:	70 e0       	ldi	r23, 0x00	; 0
    127c:	c3 01       	movw	r24, r6
    127e:	0e 94 f4 18 	call	0x31e8	; 0x31e8 <memset>
    1282:	21 e0       	ldi	r18, 0x01	; 1
    1284:	a2 1a       	sub	r10, r18
    1286:	b1 08       	sbc	r11, r1
    1288:	8b 8d       	ldd	r24, Y+27	; 0x1b
    128a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    128c:	a8 0e       	add	r10, r24
    128e:	b9 1e       	adc	r11, r25
    1290:	c1 14       	cp	r12, r1
    1292:	d1 04       	cpc	r13, r1
    1294:	21 f4       	brne	.+8      	; 0x129e <xTaskCreate+0x6a>
    1296:	1f c0       	rjmp	.+62     	; 0x12d6 <xTaskCreate+0xa2>
    1298:	c3 01       	movw	r24, r6
    129a:	33 da       	rcall	.-2970   	; 0x702 <vPortFree>
    129c:	c8 c0       	rjmp	.+400    	; 0x142e <xTaskCreate+0x1fa>
    129e:	d6 01       	movw	r26, r12
    12a0:	8c 91       	ld	r24, X
    12a2:	8d 8f       	std	Y+29, r24	; 0x1d
    12a4:	8c 91       	ld	r24, X
    12a6:	88 23       	and	r24, r24
    12a8:	a1 f0       	breq	.+40     	; 0x12d2 <xTaskCreate+0x9e>
    12aa:	ae 01       	movw	r20, r28
    12ac:	42 5e       	subi	r20, 0xE2	; 226
    12ae:	5f 4f       	sbci	r21, 0xFF	; 255
    12b0:	f6 01       	movw	r30, r12
    12b2:	31 96       	adiw	r30, 0x01	; 1
    12b4:	b8 e0       	ldi	r27, 0x08	; 8
    12b6:	cb 0e       	add	r12, r27
    12b8:	d1 1c       	adc	r13, r1
    12ba:	cf 01       	movw	r24, r30
    12bc:	21 91       	ld	r18, Z+
    12be:	da 01       	movw	r26, r20
    12c0:	2d 93       	st	X+, r18
    12c2:	ad 01       	movw	r20, r26
    12c4:	dc 01       	movw	r26, r24
    12c6:	8c 91       	ld	r24, X
    12c8:	88 23       	and	r24, r24
    12ca:	19 f0       	breq	.+6      	; 0x12d2 <xTaskCreate+0x9e>
    12cc:	ec 15       	cp	r30, r12
    12ce:	fd 05       	cpc	r31, r13
    12d0:	a1 f7       	brne	.-24     	; 0x12ba <xTaskCreate+0x86>
    12d2:	1c a2       	std	Y+36, r1	; 0x24
    12d4:	01 c0       	rjmp	.+2      	; 0x12d8 <xTaskCreate+0xa4>
    12d6:	1d 8e       	std	Y+29, r1	; 0x1d
    12d8:	04 30       	cpi	r16, 0x04	; 4
    12da:	08 f0       	brcs	.+2      	; 0x12de <xTaskCreate+0xaa>
    12dc:	03 e0       	ldi	r16, 0x03	; 3
    12de:	0a 8f       	std	Y+26, r16	; 0x1a
    12e0:	0f a3       	std	Y+39, r16	; 0x27
    12e2:	18 a6       	std	Y+40, r1	; 0x28
    12e4:	6e 01       	movw	r12, r28
    12e6:	b2 e0       	ldi	r27, 0x02	; 2
    12e8:	cb 0e       	add	r12, r27
    12ea:	d1 1c       	adc	r13, r1
    12ec:	c6 01       	movw	r24, r12
    12ee:	49 da       	rcall	.-2926   	; 0x782 <vListInitialiseItem>
    12f0:	ce 01       	movw	r24, r28
    12f2:	0e 96       	adiw	r24, 0x0e	; 14
    12f4:	46 da       	rcall	.-2932   	; 0x782 <vListInitialiseItem>
    12f6:	db 87       	std	Y+11, r29	; 0x0b
    12f8:	ca 87       	std	Y+10, r28	; 0x0a
    12fa:	84 e0       	ldi	r24, 0x04	; 4
    12fc:	90 e0       	ldi	r25, 0x00	; 0
    12fe:	a0 e0       	ldi	r26, 0x00	; 0
    1300:	b0 e0       	ldi	r27, 0x00	; 0
    1302:	80 1b       	sub	r24, r16
    1304:	91 09       	sbc	r25, r1
    1306:	a1 09       	sbc	r26, r1
    1308:	b1 09       	sbc	r27, r1
    130a:	8e 87       	std	Y+14, r24	; 0x0e
    130c:	9f 87       	std	Y+15, r25	; 0x0f
    130e:	a8 8b       	std	Y+16, r26	; 0x10
    1310:	b9 8b       	std	Y+17, r27	; 0x11
    1312:	df 8b       	std	Y+23, r29	; 0x17
    1314:	ce 8b       	std	Y+22, r28	; 0x16
    1316:	1a a6       	std	Y+42, r1	; 0x2a
    1318:	19 a6       	std	Y+41, r1	; 0x29
    131a:	1b a6       	std	Y+43, r1	; 0x2b
    131c:	1c a6       	std	Y+44, r1	; 0x2c
    131e:	1d a6       	std	Y+45, r1	; 0x2d
    1320:	1e a6       	std	Y+46, r1	; 0x2e
    1322:	1f a6       	std	Y+47, r1	; 0x2f
    1324:	a2 01       	movw	r20, r4
    1326:	b4 01       	movw	r22, r8
    1328:	c5 01       	movw	r24, r10
    132a:	b4 da       	rcall	.-2712   	; 0x894 <pxPortInitialiseStack>
    132c:	99 83       	std	Y+1, r25	; 0x01
    132e:	88 83       	st	Y, r24
    1330:	e1 14       	cp	r14, r1
    1332:	f1 04       	cpc	r15, r1
    1334:	19 f0       	breq	.+6      	; 0x133c <xTaskCreate+0x108>
    1336:	f7 01       	movw	r30, r14
    1338:	d1 83       	std	Z+1, r29	; 0x01
    133a:	c0 83       	st	Z, r28
    133c:	0f b6       	in	r0, 0x3f	; 63
    133e:	f8 94       	cli
    1340:	0f 92       	push	r0
    1342:	80 91 1f 12 	lds	r24, 0x121F	; 0x80121f <uxCurrentNumberOfTasks>
    1346:	8f 5f       	subi	r24, 0xFF	; 255
    1348:	80 93 1f 12 	sts	0x121F, r24	; 0x80121f <uxCurrentNumberOfTasks>
    134c:	80 91 88 12 	lds	r24, 0x1288	; 0x801288 <pxCurrentTCB>
    1350:	90 91 89 12 	lds	r25, 0x1289	; 0x801289 <pxCurrentTCB+0x1>
    1354:	89 2b       	or	r24, r25
    1356:	89 f5       	brne	.+98     	; 0x13ba <xTaskCreate+0x186>
    1358:	d0 93 89 12 	sts	0x1289, r29	; 0x801289 <pxCurrentTCB+0x1>
    135c:	c0 93 88 12 	sts	0x1288, r28	; 0x801288 <pxCurrentTCB>
    1360:	80 91 1f 12 	lds	r24, 0x121F	; 0x80121f <uxCurrentNumberOfTasks>
    1364:	81 30       	cpi	r24, 0x01	; 1
    1366:	09 f0       	breq	.+2      	; 0x136a <xTaskCreate+0x136>
    1368:	38 c0       	rjmp	.+112    	; 0x13da <xTaskCreate+0x1a6>
    136a:	8c e5       	ldi	r24, 0x5C	; 92
    136c:	92 e1       	ldi	r25, 0x12	; 18
    136e:	f8 d9       	rcall	.-3088   	; 0x760 <vListInitialise>
    1370:	87 e6       	ldi	r24, 0x67	; 103
    1372:	92 e1       	ldi	r25, 0x12	; 18
    1374:	f5 d9       	rcall	.-3094   	; 0x760 <vListInitialise>
    1376:	82 e7       	ldi	r24, 0x72	; 114
    1378:	92 e1       	ldi	r25, 0x12	; 18
    137a:	f2 d9       	rcall	.-3100   	; 0x760 <vListInitialise>
    137c:	8d e7       	ldi	r24, 0x7D	; 125
    137e:	92 e1       	ldi	r25, 0x12	; 18
    1380:	ef d9       	rcall	.-3106   	; 0x760 <vListInitialise>
    1382:	81 e5       	ldi	r24, 0x51	; 81
    1384:	92 e1       	ldi	r25, 0x12	; 18
    1386:	ec d9       	rcall	.-3112   	; 0x760 <vListInitialise>
    1388:	86 e4       	ldi	r24, 0x46	; 70
    138a:	92 e1       	ldi	r25, 0x12	; 18
    138c:	e9 d9       	rcall	.-3118   	; 0x760 <vListInitialise>
    138e:	87 e3       	ldi	r24, 0x37	; 55
    1390:	92 e1       	ldi	r25, 0x12	; 18
    1392:	e6 d9       	rcall	.-3124   	; 0x760 <vListInitialise>
    1394:	8c e2       	ldi	r24, 0x2C	; 44
    1396:	92 e1       	ldi	r25, 0x12	; 18
    1398:	e3 d9       	rcall	.-3130   	; 0x760 <vListInitialise>
    139a:	80 e2       	ldi	r24, 0x20	; 32
    139c:	92 e1       	ldi	r25, 0x12	; 18
    139e:	e0 d9       	rcall	.-3136   	; 0x760 <vListInitialise>
    13a0:	81 e5       	ldi	r24, 0x51	; 81
    13a2:	92 e1       	ldi	r25, 0x12	; 18
    13a4:	90 93 45 12 	sts	0x1245, r25	; 0x801245 <pxDelayedTaskList+0x1>
    13a8:	80 93 44 12 	sts	0x1244, r24	; 0x801244 <pxDelayedTaskList>
    13ac:	86 e4       	ldi	r24, 0x46	; 70
    13ae:	92 e1       	ldi	r25, 0x12	; 18
    13b0:	90 93 43 12 	sts	0x1243, r25	; 0x801243 <pxOverflowDelayedTaskList+0x1>
    13b4:	80 93 42 12 	sts	0x1242, r24	; 0x801242 <pxOverflowDelayedTaskList>
    13b8:	10 c0       	rjmp	.+32     	; 0x13da <xTaskCreate+0x1a6>
    13ba:	80 91 19 12 	lds	r24, 0x1219	; 0x801219 <xSchedulerRunning>
    13be:	81 11       	cpse	r24, r1
    13c0:	0c c0       	rjmp	.+24     	; 0x13da <xTaskCreate+0x1a6>
    13c2:	e0 91 88 12 	lds	r30, 0x1288	; 0x801288 <pxCurrentTCB>
    13c6:	f0 91 89 12 	lds	r31, 0x1289	; 0x801289 <pxCurrentTCB+0x1>
    13ca:	92 8d       	ldd	r25, Z+26	; 0x1a
    13cc:	8a 8d       	ldd	r24, Y+26	; 0x1a
    13ce:	89 17       	cp	r24, r25
    13d0:	20 f0       	brcs	.+8      	; 0x13da <xTaskCreate+0x1a6>
    13d2:	d0 93 89 12 	sts	0x1289, r29	; 0x801289 <pxCurrentTCB+0x1>
    13d6:	c0 93 88 12 	sts	0x1288, r28	; 0x801288 <pxCurrentTCB>
    13da:	80 91 15 12 	lds	r24, 0x1215	; 0x801215 <uxTaskNumber>
    13de:	8f 5f       	subi	r24, 0xFF	; 255
    13e0:	80 93 15 12 	sts	0x1215, r24	; 0x801215 <uxTaskNumber>
    13e4:	8d a3       	std	Y+37, r24	; 0x25
    13e6:	8a 8d       	ldd	r24, Y+26	; 0x1a
    13e8:	90 91 1a 12 	lds	r25, 0x121A	; 0x80121a <uxTopReadyPriority>
    13ec:	98 17       	cp	r25, r24
    13ee:	10 f4       	brcc	.+4      	; 0x13f4 <xTaskCreate+0x1c0>
    13f0:	80 93 1a 12 	sts	0x121A, r24	; 0x80121a <uxTopReadyPriority>
    13f4:	fb e0       	ldi	r31, 0x0B	; 11
    13f6:	8f 9f       	mul	r24, r31
    13f8:	c0 01       	movw	r24, r0
    13fa:	11 24       	eor	r1, r1
    13fc:	b6 01       	movw	r22, r12
    13fe:	84 5a       	subi	r24, 0xA4	; 164
    1400:	9d 4e       	sbci	r25, 0xED	; 237
    1402:	c3 d9       	rcall	.-3194   	; 0x78a <vListInsertEnd>
    1404:	0f 90       	pop	r0
    1406:	0f be       	out	0x3f, r0	; 63
    1408:	80 91 19 12 	lds	r24, 0x1219	; 0x801219 <xSchedulerRunning>
    140c:	88 23       	and	r24, r24
    140e:	59 f0       	breq	.+22     	; 0x1426 <xTaskCreate+0x1f2>
    1410:	e0 91 88 12 	lds	r30, 0x1288	; 0x801288 <pxCurrentTCB>
    1414:	f0 91 89 12 	lds	r31, 0x1289	; 0x801289 <pxCurrentTCB+0x1>
    1418:	92 8d       	ldd	r25, Z+26	; 0x1a
    141a:	8a 8d       	ldd	r24, Y+26	; 0x1a
    141c:	98 17       	cp	r25, r24
    141e:	28 f4       	brcc	.+10     	; 0x142a <xTaskCreate+0x1f6>
    1420:	e7 da       	rcall	.-2610   	; 0x9f0 <vPortYield>
    1422:	81 e0       	ldi	r24, 0x01	; 1
    1424:	05 c0       	rjmp	.+10     	; 0x1430 <xTaskCreate+0x1fc>
    1426:	81 e0       	ldi	r24, 0x01	; 1
    1428:	03 c0       	rjmp	.+6      	; 0x1430 <xTaskCreate+0x1fc>
    142a:	81 e0       	ldi	r24, 0x01	; 1
    142c:	01 c0       	rjmp	.+2      	; 0x1430 <xTaskCreate+0x1fc>
    142e:	8f ef       	ldi	r24, 0xFF	; 255
    1430:	df 91       	pop	r29
    1432:	cf 91       	pop	r28
    1434:	0f 91       	pop	r16
    1436:	ff 90       	pop	r15
    1438:	ef 90       	pop	r14
    143a:	df 90       	pop	r13
    143c:	cf 90       	pop	r12
    143e:	bf 90       	pop	r11
    1440:	af 90       	pop	r10
    1442:	9f 90       	pop	r9
    1444:	8f 90       	pop	r8
    1446:	7f 90       	pop	r7
    1448:	6f 90       	pop	r6
    144a:	5f 90       	pop	r5
    144c:	4f 90       	pop	r4
    144e:	08 95       	ret

00001450 <vTaskStartScheduler>:
    1450:	ef 92       	push	r14
    1452:	ff 92       	push	r15
    1454:	0f 93       	push	r16
    1456:	0f 2e       	mov	r0, r31
    1458:	ff e0       	ldi	r31, 0x0F	; 15
    145a:	ef 2e       	mov	r14, r31
    145c:	f2 e1       	ldi	r31, 0x12	; 18
    145e:	ff 2e       	mov	r15, r31
    1460:	f0 2d       	mov	r31, r0
    1462:	00 e0       	ldi	r16, 0x00	; 0
    1464:	20 e0       	ldi	r18, 0x00	; 0
    1466:	30 e0       	ldi	r19, 0x00	; 0
    1468:	40 ec       	ldi	r20, 0xC0	; 192
    146a:	50 e0       	ldi	r21, 0x00	; 0
    146c:	61 e2       	ldi	r22, 0x21	; 33
    146e:	72 e0       	ldi	r23, 0x02	; 2
    1470:	8d ec       	ldi	r24, 0xCD	; 205
    1472:	90 e0       	ldi	r25, 0x00	; 0
    1474:	df de       	rcall	.-578    	; 0x1234 <xTaskCreate>
    1476:	81 30       	cpi	r24, 0x01	; 1
    1478:	09 f5       	brne	.+66     	; 0x14bc <vTaskStartScheduler+0x6c>
    147a:	ca d3       	rcall	.+1940   	; 0x1c10 <xTimerCreateTimerTask>
    147c:	81 30       	cpi	r24, 0x01	; 1
    147e:	f1 f4       	brne	.+60     	; 0x14bc <vTaskStartScheduler+0x6c>
    1480:	f8 94       	cli
    1482:	8f ef       	ldi	r24, 0xFF	; 255
    1484:	9f ef       	ldi	r25, 0xFF	; 255
    1486:	dc 01       	movw	r26, r24
    1488:	80 93 11 12 	sts	0x1211, r24	; 0x801211 <xNextTaskUnblockTime>
    148c:	90 93 12 12 	sts	0x1212, r25	; 0x801212 <xNextTaskUnblockTime+0x1>
    1490:	a0 93 13 12 	sts	0x1213, r26	; 0x801213 <xNextTaskUnblockTime+0x2>
    1494:	b0 93 14 12 	sts	0x1214, r27	; 0x801214 <xNextTaskUnblockTime+0x3>
    1498:	81 e0       	ldi	r24, 0x01	; 1
    149a:	80 93 19 12 	sts	0x1219, r24	; 0x801219 <xSchedulerRunning>
    149e:	10 92 1b 12 	sts	0x121B, r1	; 0x80121b <xTickCount>
    14a2:	10 92 1c 12 	sts	0x121C, r1	; 0x80121c <xTickCount+0x1>
    14a6:	10 92 1d 12 	sts	0x121D, r1	; 0x80121d <xTickCount+0x2>
    14aa:	10 92 1e 12 	sts	0x121E, r1	; 0x80121e <xTickCount+0x3>
    14ae:	e0 91 88 12 	lds	r30, 0x1288	; 0x801288 <pxCurrentTCB>
    14b2:	f0 91 89 12 	lds	r31, 0x1289	; 0x801289 <pxCurrentTCB+0x1>
    14b6:	81 a5       	ldd	r24, Z+41	; 0x29
    14b8:	12 d8       	rcall	.-4060   	; 0x4de <task_switch_in>
    14ba:	5e da       	rcall	.-2884   	; 0x978 <xPortStartScheduler>
    14bc:	0f 91       	pop	r16
    14be:	ff 90       	pop	r15
    14c0:	ef 90       	pop	r14
    14c2:	08 95       	ret

000014c4 <vTaskSuspendAll>:
    14c4:	80 91 0e 12 	lds	r24, 0x120E	; 0x80120e <uxSchedulerSuspended>
    14c8:	8f 5f       	subi	r24, 0xFF	; 255
    14ca:	80 93 0e 12 	sts	0x120E, r24	; 0x80120e <uxSchedulerSuspended>
    14ce:	08 95       	ret

000014d0 <xTaskGetTickCount>:
    14d0:	0f b6       	in	r0, 0x3f	; 63
    14d2:	f8 94       	cli
    14d4:	0f 92       	push	r0
    14d6:	60 91 1b 12 	lds	r22, 0x121B	; 0x80121b <xTickCount>
    14da:	70 91 1c 12 	lds	r23, 0x121C	; 0x80121c <xTickCount+0x1>
    14de:	80 91 1d 12 	lds	r24, 0x121D	; 0x80121d <xTickCount+0x2>
    14e2:	90 91 1e 12 	lds	r25, 0x121E	; 0x80121e <xTickCount+0x3>
    14e6:	0f 90       	pop	r0
    14e8:	0f be       	out	0x3f, r0	; 63
    14ea:	08 95       	ret

000014ec <xTaskIncrementTick>:
    14ec:	9f 92       	push	r9
    14ee:	af 92       	push	r10
    14f0:	bf 92       	push	r11
    14f2:	cf 92       	push	r12
    14f4:	df 92       	push	r13
    14f6:	ef 92       	push	r14
    14f8:	ff 92       	push	r15
    14fa:	0f 93       	push	r16
    14fc:	1f 93       	push	r17
    14fe:	cf 93       	push	r28
    1500:	df 93       	push	r29
    1502:	80 91 0e 12 	lds	r24, 0x120E	; 0x80120e <uxSchedulerSuspended>
    1506:	81 11       	cpse	r24, r1
    1508:	aa c0       	rjmp	.+340    	; 0x165e <xTaskIncrementTick+0x172>
    150a:	c0 90 1b 12 	lds	r12, 0x121B	; 0x80121b <xTickCount>
    150e:	d0 90 1c 12 	lds	r13, 0x121C	; 0x80121c <xTickCount+0x1>
    1512:	e0 90 1d 12 	lds	r14, 0x121D	; 0x80121d <xTickCount+0x2>
    1516:	f0 90 1e 12 	lds	r15, 0x121E	; 0x80121e <xTickCount+0x3>
    151a:	8f ef       	ldi	r24, 0xFF	; 255
    151c:	c8 1a       	sub	r12, r24
    151e:	d8 0a       	sbc	r13, r24
    1520:	e8 0a       	sbc	r14, r24
    1522:	f8 0a       	sbc	r15, r24
    1524:	c0 92 1b 12 	sts	0x121B, r12	; 0x80121b <xTickCount>
    1528:	d0 92 1c 12 	sts	0x121C, r13	; 0x80121c <xTickCount+0x1>
    152c:	e0 92 1d 12 	sts	0x121D, r14	; 0x80121d <xTickCount+0x2>
    1530:	f0 92 1e 12 	sts	0x121E, r15	; 0x80121e <xTickCount+0x3>
    1534:	c1 14       	cp	r12, r1
    1536:	d1 04       	cpc	r13, r1
    1538:	e1 04       	cpc	r14, r1
    153a:	f1 04       	cpc	r15, r1
    153c:	b1 f4       	brne	.+44     	; 0x156a <xTaskIncrementTick+0x7e>
    153e:	80 91 44 12 	lds	r24, 0x1244	; 0x801244 <pxDelayedTaskList>
    1542:	90 91 45 12 	lds	r25, 0x1245	; 0x801245 <pxDelayedTaskList+0x1>
    1546:	20 91 42 12 	lds	r18, 0x1242	; 0x801242 <pxOverflowDelayedTaskList>
    154a:	30 91 43 12 	lds	r19, 0x1243	; 0x801243 <pxOverflowDelayedTaskList+0x1>
    154e:	30 93 45 12 	sts	0x1245, r19	; 0x801245 <pxDelayedTaskList+0x1>
    1552:	20 93 44 12 	sts	0x1244, r18	; 0x801244 <pxDelayedTaskList>
    1556:	90 93 43 12 	sts	0x1243, r25	; 0x801243 <pxOverflowDelayedTaskList+0x1>
    155a:	80 93 42 12 	sts	0x1242, r24	; 0x801242 <pxOverflowDelayedTaskList>
    155e:	80 91 16 12 	lds	r24, 0x1216	; 0x801216 <xNumOfOverflows>
    1562:	8f 5f       	subi	r24, 0xFF	; 255
    1564:	80 93 16 12 	sts	0x1216, r24	; 0x801216 <xNumOfOverflows>
    1568:	c8 dd       	rcall	.-1136   	; 0x10fa <prvResetNextTaskUnblockTime>
    156a:	80 91 11 12 	lds	r24, 0x1211	; 0x801211 <xNextTaskUnblockTime>
    156e:	90 91 12 12 	lds	r25, 0x1212	; 0x801212 <xNextTaskUnblockTime+0x1>
    1572:	a0 91 13 12 	lds	r26, 0x1213	; 0x801213 <xNextTaskUnblockTime+0x2>
    1576:	b0 91 14 12 	lds	r27, 0x1214	; 0x801214 <xNextTaskUnblockTime+0x3>
    157a:	c8 16       	cp	r12, r24
    157c:	d9 06       	cpc	r13, r25
    157e:	ea 06       	cpc	r14, r26
    1580:	fb 06       	cpc	r15, r27
    1582:	10 f4       	brcc	.+4      	; 0x1588 <xTaskIncrementTick+0x9c>
    1584:	b1 2c       	mov	r11, r1
    1586:	5a c0       	rjmp	.+180    	; 0x163c <xTaskIncrementTick+0x150>
    1588:	b1 2c       	mov	r11, r1
    158a:	0f 2e       	mov	r0, r31
    158c:	fb e0       	ldi	r31, 0x0B	; 11
    158e:	af 2e       	mov	r10, r31
    1590:	f0 2d       	mov	r31, r0
    1592:	99 24       	eor	r9, r9
    1594:	93 94       	inc	r9
    1596:	e0 91 44 12 	lds	r30, 0x1244	; 0x801244 <pxDelayedTaskList>
    159a:	f0 91 45 12 	lds	r31, 0x1245	; 0x801245 <pxDelayedTaskList+0x1>
    159e:	80 81       	ld	r24, Z
    15a0:	81 11       	cpse	r24, r1
    15a2:	0c c0       	rjmp	.+24     	; 0x15bc <xTaskIncrementTick+0xd0>
    15a4:	8f ef       	ldi	r24, 0xFF	; 255
    15a6:	9f ef       	ldi	r25, 0xFF	; 255
    15a8:	dc 01       	movw	r26, r24
    15aa:	80 93 11 12 	sts	0x1211, r24	; 0x801211 <xNextTaskUnblockTime>
    15ae:	90 93 12 12 	sts	0x1212, r25	; 0x801212 <xNextTaskUnblockTime+0x1>
    15b2:	a0 93 13 12 	sts	0x1213, r26	; 0x801213 <xNextTaskUnblockTime+0x2>
    15b6:	b0 93 14 12 	sts	0x1214, r27	; 0x801214 <xNextTaskUnblockTime+0x3>
    15ba:	40 c0       	rjmp	.+128    	; 0x163c <xTaskIncrementTick+0x150>
    15bc:	e0 91 44 12 	lds	r30, 0x1244	; 0x801244 <pxDelayedTaskList>
    15c0:	f0 91 45 12 	lds	r31, 0x1245	; 0x801245 <pxDelayedTaskList+0x1>
    15c4:	07 80       	ldd	r0, Z+7	; 0x07
    15c6:	f0 85       	ldd	r31, Z+8	; 0x08
    15c8:	e0 2d       	mov	r30, r0
    15ca:	c0 85       	ldd	r28, Z+8	; 0x08
    15cc:	d1 85       	ldd	r29, Z+9	; 0x09
    15ce:	8a 81       	ldd	r24, Y+2	; 0x02
    15d0:	9b 81       	ldd	r25, Y+3	; 0x03
    15d2:	ac 81       	ldd	r26, Y+4	; 0x04
    15d4:	bd 81       	ldd	r27, Y+5	; 0x05
    15d6:	c8 16       	cp	r12, r24
    15d8:	d9 06       	cpc	r13, r25
    15da:	ea 06       	cpc	r14, r26
    15dc:	fb 06       	cpc	r15, r27
    15de:	48 f4       	brcc	.+18     	; 0x15f2 <xTaskIncrementTick+0x106>
    15e0:	80 93 11 12 	sts	0x1211, r24	; 0x801211 <xNextTaskUnblockTime>
    15e4:	90 93 12 12 	sts	0x1212, r25	; 0x801212 <xNextTaskUnblockTime+0x1>
    15e8:	a0 93 13 12 	sts	0x1213, r26	; 0x801213 <xNextTaskUnblockTime+0x2>
    15ec:	b0 93 14 12 	sts	0x1214, r27	; 0x801214 <xNextTaskUnblockTime+0x3>
    15f0:	25 c0       	rjmp	.+74     	; 0x163c <xTaskIncrementTick+0x150>
    15f2:	8e 01       	movw	r16, r28
    15f4:	0e 5f       	subi	r16, 0xFE	; 254
    15f6:	1f 4f       	sbci	r17, 0xFF	; 255
    15f8:	c8 01       	movw	r24, r16
    15fa:	25 d9       	rcall	.-3510   	; 0x846 <uxListRemove>
    15fc:	88 8d       	ldd	r24, Y+24	; 0x18
    15fe:	99 8d       	ldd	r25, Y+25	; 0x19
    1600:	89 2b       	or	r24, r25
    1602:	19 f0       	breq	.+6      	; 0x160a <xTaskIncrementTick+0x11e>
    1604:	ce 01       	movw	r24, r28
    1606:	0e 96       	adiw	r24, 0x0e	; 14
    1608:	1e d9       	rcall	.-3524   	; 0x846 <uxListRemove>
    160a:	8a 8d       	ldd	r24, Y+26	; 0x1a
    160c:	90 91 1a 12 	lds	r25, 0x121A	; 0x80121a <uxTopReadyPriority>
    1610:	98 17       	cp	r25, r24
    1612:	10 f4       	brcc	.+4      	; 0x1618 <xTaskIncrementTick+0x12c>
    1614:	80 93 1a 12 	sts	0x121A, r24	; 0x80121a <uxTopReadyPriority>
    1618:	a8 9e       	mul	r10, r24
    161a:	c0 01       	movw	r24, r0
    161c:	11 24       	eor	r1, r1
    161e:	b8 01       	movw	r22, r16
    1620:	84 5a       	subi	r24, 0xA4	; 164
    1622:	9d 4e       	sbci	r25, 0xED	; 237
    1624:	b2 d8       	rcall	.-3740   	; 0x78a <vListInsertEnd>
    1626:	e0 91 88 12 	lds	r30, 0x1288	; 0x801288 <pxCurrentTCB>
    162a:	f0 91 89 12 	lds	r31, 0x1289	; 0x801289 <pxCurrentTCB+0x1>
    162e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1630:	82 8d       	ldd	r24, Z+26	; 0x1a
    1632:	98 17       	cp	r25, r24
    1634:	08 f4       	brcc	.+2      	; 0x1638 <xTaskIncrementTick+0x14c>
    1636:	af cf       	rjmp	.-162    	; 0x1596 <xTaskIncrementTick+0xaa>
    1638:	b9 2c       	mov	r11, r9
    163a:	ad cf       	rjmp	.-166    	; 0x1596 <xTaskIncrementTick+0xaa>
    163c:	e0 91 88 12 	lds	r30, 0x1288	; 0x801288 <pxCurrentTCB>
    1640:	f0 91 89 12 	lds	r31, 0x1289	; 0x801289 <pxCurrentTCB+0x1>
    1644:	e2 8d       	ldd	r30, Z+26	; 0x1a
    1646:	8b e0       	ldi	r24, 0x0B	; 11
    1648:	e8 9f       	mul	r30, r24
    164a:	f0 01       	movw	r30, r0
    164c:	11 24       	eor	r1, r1
    164e:	e4 5a       	subi	r30, 0xA4	; 164
    1650:	fd 4e       	sbci	r31, 0xED	; 237
    1652:	80 81       	ld	r24, Z
    1654:	82 30       	cpi	r24, 0x02	; 2
    1656:	48 f0       	brcs	.+18     	; 0x166a <xTaskIncrementTick+0x17e>
    1658:	bb 24       	eor	r11, r11
    165a:	b3 94       	inc	r11
    165c:	06 c0       	rjmp	.+12     	; 0x166a <xTaskIncrementTick+0x17e>
    165e:	80 91 18 12 	lds	r24, 0x1218	; 0x801218 <uxPendedTicks>
    1662:	8f 5f       	subi	r24, 0xFF	; 255
    1664:	80 93 18 12 	sts	0x1218, r24	; 0x801218 <uxPendedTicks>
    1668:	b1 2c       	mov	r11, r1
    166a:	80 91 17 12 	lds	r24, 0x1217	; 0x801217 <xYieldPending>
    166e:	88 23       	and	r24, r24
    1670:	11 f0       	breq	.+4      	; 0x1676 <xTaskIncrementTick+0x18a>
    1672:	bb 24       	eor	r11, r11
    1674:	b3 94       	inc	r11
    1676:	8b 2d       	mov	r24, r11
    1678:	df 91       	pop	r29
    167a:	cf 91       	pop	r28
    167c:	1f 91       	pop	r17
    167e:	0f 91       	pop	r16
    1680:	ff 90       	pop	r15
    1682:	ef 90       	pop	r14
    1684:	df 90       	pop	r13
    1686:	cf 90       	pop	r12
    1688:	bf 90       	pop	r11
    168a:	af 90       	pop	r10
    168c:	9f 90       	pop	r9
    168e:	08 95       	ret

00001690 <xTaskResumeAll>:
    1690:	cf 92       	push	r12
    1692:	df 92       	push	r13
    1694:	ef 92       	push	r14
    1696:	ff 92       	push	r15
    1698:	0f 93       	push	r16
    169a:	1f 93       	push	r17
    169c:	cf 93       	push	r28
    169e:	df 93       	push	r29
    16a0:	0f b6       	in	r0, 0x3f	; 63
    16a2:	f8 94       	cli
    16a4:	0f 92       	push	r0
    16a6:	80 91 0e 12 	lds	r24, 0x120E	; 0x80120e <uxSchedulerSuspended>
    16aa:	81 50       	subi	r24, 0x01	; 1
    16ac:	80 93 0e 12 	sts	0x120E, r24	; 0x80120e <uxSchedulerSuspended>
    16b0:	80 91 0e 12 	lds	r24, 0x120E	; 0x80120e <uxSchedulerSuspended>
    16b4:	81 11       	cpse	r24, r1
    16b6:	56 c0       	rjmp	.+172    	; 0x1764 <xTaskResumeAll+0xd4>
    16b8:	80 91 1f 12 	lds	r24, 0x121F	; 0x80121f <uxCurrentNumberOfTasks>
    16bc:	81 11       	cpse	r24, r1
    16be:	29 c0       	rjmp	.+82     	; 0x1712 <xTaskResumeAll+0x82>
    16c0:	54 c0       	rjmp	.+168    	; 0x176a <xTaskResumeAll+0xda>
    16c2:	d7 01       	movw	r26, r14
    16c4:	17 96       	adiw	r26, 0x07	; 7
    16c6:	ed 91       	ld	r30, X+
    16c8:	fc 91       	ld	r31, X
    16ca:	18 97       	sbiw	r26, 0x08	; 8
    16cc:	c0 85       	ldd	r28, Z+8	; 0x08
    16ce:	d1 85       	ldd	r29, Z+9	; 0x09
    16d0:	ce 01       	movw	r24, r28
    16d2:	0e 96       	adiw	r24, 0x0e	; 14
    16d4:	b8 d8       	rcall	.-3728   	; 0x846 <uxListRemove>
    16d6:	8e 01       	movw	r16, r28
    16d8:	0e 5f       	subi	r16, 0xFE	; 254
    16da:	1f 4f       	sbci	r17, 0xFF	; 255
    16dc:	c8 01       	movw	r24, r16
    16de:	b3 d8       	rcall	.-3738   	; 0x846 <uxListRemove>
    16e0:	8a 8d       	ldd	r24, Y+26	; 0x1a
    16e2:	90 91 1a 12 	lds	r25, 0x121A	; 0x80121a <uxTopReadyPriority>
    16e6:	98 17       	cp	r25, r24
    16e8:	10 f4       	brcc	.+4      	; 0x16ee <xTaskResumeAll+0x5e>
    16ea:	80 93 1a 12 	sts	0x121A, r24	; 0x80121a <uxTopReadyPriority>
    16ee:	d8 9e       	mul	r13, r24
    16f0:	c0 01       	movw	r24, r0
    16f2:	11 24       	eor	r1, r1
    16f4:	b8 01       	movw	r22, r16
    16f6:	84 5a       	subi	r24, 0xA4	; 164
    16f8:	9d 4e       	sbci	r25, 0xED	; 237
    16fa:	47 d8       	rcall	.-3954   	; 0x78a <vListInsertEnd>
    16fc:	e0 91 88 12 	lds	r30, 0x1288	; 0x801288 <pxCurrentTCB>
    1700:	f0 91 89 12 	lds	r31, 0x1289	; 0x801289 <pxCurrentTCB+0x1>
    1704:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1706:	82 8d       	ldd	r24, Z+26	; 0x1a
    1708:	98 17       	cp	r25, r24
    170a:	88 f0       	brcs	.+34     	; 0x172e <xTaskResumeAll+0x9e>
    170c:	c0 92 17 12 	sts	0x1217, r12	; 0x801217 <xYieldPending>
    1710:	0e c0       	rjmp	.+28     	; 0x172e <xTaskResumeAll+0x9e>
    1712:	c0 e0       	ldi	r28, 0x00	; 0
    1714:	d0 e0       	ldi	r29, 0x00	; 0
    1716:	0f 2e       	mov	r0, r31
    1718:	f7 e3       	ldi	r31, 0x37	; 55
    171a:	ef 2e       	mov	r14, r31
    171c:	f2 e1       	ldi	r31, 0x12	; 18
    171e:	ff 2e       	mov	r15, r31
    1720:	f0 2d       	mov	r31, r0
    1722:	0f 2e       	mov	r0, r31
    1724:	fb e0       	ldi	r31, 0x0B	; 11
    1726:	df 2e       	mov	r13, r31
    1728:	f0 2d       	mov	r31, r0
    172a:	cc 24       	eor	r12, r12
    172c:	c3 94       	inc	r12
    172e:	f7 01       	movw	r30, r14
    1730:	80 81       	ld	r24, Z
    1732:	81 11       	cpse	r24, r1
    1734:	c6 cf       	rjmp	.-116    	; 0x16c2 <xTaskResumeAll+0x32>
    1736:	cd 2b       	or	r28, r29
    1738:	09 f0       	breq	.+2      	; 0x173c <xTaskResumeAll+0xac>
    173a:	df dc       	rcall	.-1602   	; 0x10fa <prvResetNextTaskUnblockTime>
    173c:	c0 91 18 12 	lds	r28, 0x1218	; 0x801218 <uxPendedTicks>
    1740:	cc 23       	and	r28, r28
    1742:	49 f0       	breq	.+18     	; 0x1756 <xTaskResumeAll+0xc6>
    1744:	d1 e0       	ldi	r29, 0x01	; 1
    1746:	d2 de       	rcall	.-604    	; 0x14ec <xTaskIncrementTick>
    1748:	81 11       	cpse	r24, r1
    174a:	d0 93 17 12 	sts	0x1217, r29	; 0x801217 <xYieldPending>
    174e:	c1 50       	subi	r28, 0x01	; 1
    1750:	d1 f7       	brne	.-12     	; 0x1746 <xTaskResumeAll+0xb6>
    1752:	10 92 18 12 	sts	0x1218, r1	; 0x801218 <uxPendedTicks>
    1756:	80 91 17 12 	lds	r24, 0x1217	; 0x801217 <xYieldPending>
    175a:	88 23       	and	r24, r24
    175c:	29 f0       	breq	.+10     	; 0x1768 <xTaskResumeAll+0xd8>
    175e:	48 d9       	rcall	.-3440   	; 0x9f0 <vPortYield>
    1760:	81 e0       	ldi	r24, 0x01	; 1
    1762:	03 c0       	rjmp	.+6      	; 0x176a <xTaskResumeAll+0xda>
    1764:	80 e0       	ldi	r24, 0x00	; 0
    1766:	01 c0       	rjmp	.+2      	; 0x176a <xTaskResumeAll+0xda>
    1768:	80 e0       	ldi	r24, 0x00	; 0
    176a:	0f 90       	pop	r0
    176c:	0f be       	out	0x3f, r0	; 63
    176e:	df 91       	pop	r29
    1770:	cf 91       	pop	r28
    1772:	1f 91       	pop	r17
    1774:	0f 91       	pop	r16
    1776:	ff 90       	pop	r15
    1778:	ef 90       	pop	r14
    177a:	df 90       	pop	r13
    177c:	cf 90       	pop	r12
    177e:	08 95       	ret

00001780 <vTaskDelay>:
    1780:	cf 92       	push	r12
    1782:	df 92       	push	r13
    1784:	ef 92       	push	r14
    1786:	ff 92       	push	r15
    1788:	6b 01       	movw	r12, r22
    178a:	7c 01       	movw	r14, r24
    178c:	67 2b       	or	r22, r23
    178e:	68 2b       	or	r22, r24
    1790:	69 2b       	or	r22, r25
    1792:	41 f0       	breq	.+16     	; 0x17a4 <vTaskDelay+0x24>
    1794:	97 de       	rcall	.-722    	; 0x14c4 <vTaskSuspendAll>
    1796:	40 e0       	ldi	r20, 0x00	; 0
    1798:	c7 01       	movw	r24, r14
    179a:	b6 01       	movw	r22, r12
    179c:	d8 dc       	rcall	.-1616   	; 0x114e <prvAddCurrentTaskToDelayedList>
    179e:	78 df       	rcall	.-272    	; 0x1690 <xTaskResumeAll>
    17a0:	81 11       	cpse	r24, r1
    17a2:	01 c0       	rjmp	.+2      	; 0x17a6 <vTaskDelay+0x26>
    17a4:	25 d9       	rcall	.-3510   	; 0x9f0 <vPortYield>
    17a6:	ff 90       	pop	r15
    17a8:	ef 90       	pop	r14
    17aa:	df 90       	pop	r13
    17ac:	cf 90       	pop	r12
    17ae:	08 95       	ret

000017b0 <vTaskSetApplicationTaskTag>:
    17b0:	00 97       	sbiw	r24, 0x00	; 0
    17b2:	21 f4       	brne	.+8      	; 0x17bc <vTaskSetApplicationTaskTag+0xc>
    17b4:	80 91 88 12 	lds	r24, 0x1288	; 0x801288 <pxCurrentTCB>
    17b8:	90 91 89 12 	lds	r25, 0x1289	; 0x801289 <pxCurrentTCB+0x1>
    17bc:	0f b6       	in	r0, 0x3f	; 63
    17be:	f8 94       	cli
    17c0:	0f 92       	push	r0
    17c2:	fc 01       	movw	r30, r24
    17c4:	72 a7       	std	Z+42, r23	; 0x2a
    17c6:	61 a7       	std	Z+41, r22	; 0x29
    17c8:	0f 90       	pop	r0
    17ca:	0f be       	out	0x3f, r0	; 63
    17cc:	08 95       	ret

000017ce <vTaskSwitchContext>:
    17ce:	80 91 0e 12 	lds	r24, 0x120E	; 0x80120e <uxSchedulerSuspended>
    17d2:	88 23       	and	r24, r24
    17d4:	21 f0       	breq	.+8      	; 0x17de <vTaskSwitchContext+0x10>
    17d6:	81 e0       	ldi	r24, 0x01	; 1
    17d8:	80 93 17 12 	sts	0x1217, r24	; 0x801217 <xYieldPending>
    17dc:	08 95       	ret
    17de:	10 92 17 12 	sts	0x1217, r1	; 0x801217 <xYieldPending>
    17e2:	e0 91 88 12 	lds	r30, 0x1288	; 0x801288 <pxCurrentTCB>
    17e6:	f0 91 89 12 	lds	r31, 0x1289	; 0x801289 <pxCurrentTCB+0x1>
    17ea:	81 a5       	ldd	r24, Z+41	; 0x29
    17ec:	0e 94 79 02 	call	0x4f2	; 0x4f2 <task_switch_out>
    17f0:	a0 91 88 12 	lds	r26, 0x1288	; 0x801288 <pxCurrentTCB>
    17f4:	b0 91 89 12 	lds	r27, 0x1289	; 0x801289 <pxCurrentTCB+0x1>
    17f8:	e0 91 88 12 	lds	r30, 0x1288	; 0x801288 <pxCurrentTCB>
    17fc:	f0 91 89 12 	lds	r31, 0x1289	; 0x801289 <pxCurrentTCB+0x1>
    1800:	2d 91       	ld	r18, X+
    1802:	3c 91       	ld	r19, X
    1804:	83 8d       	ldd	r24, Z+27	; 0x1b
    1806:	94 8d       	ldd	r25, Z+28	; 0x1c
    1808:	82 17       	cp	r24, r18
    180a:	93 07       	cpc	r25, r19
    180c:	58 f0       	brcs	.+22     	; 0x1824 <vTaskSwitchContext+0x56>
    180e:	60 91 88 12 	lds	r22, 0x1288	; 0x801288 <pxCurrentTCB>
    1812:	70 91 89 12 	lds	r23, 0x1289	; 0x801289 <pxCurrentTCB+0x1>
    1816:	80 91 88 12 	lds	r24, 0x1288	; 0x801288 <pxCurrentTCB>
    181a:	90 91 89 12 	lds	r25, 0x1289	; 0x801289 <pxCurrentTCB+0x1>
    181e:	63 5e       	subi	r22, 0xE3	; 227
    1820:	7f 4f       	sbci	r23, 0xFF	; 255
    1822:	15 d3       	rcall	.+1578   	; 0x1e4e <vApplicationStackOverflowHook>
    1824:	80 91 1a 12 	lds	r24, 0x121A	; 0x80121a <uxTopReadyPriority>
    1828:	28 2f       	mov	r18, r24
    182a:	30 e0       	ldi	r19, 0x00	; 0
    182c:	9b e0       	ldi	r25, 0x0B	; 11
    182e:	89 9f       	mul	r24, r25
    1830:	f0 01       	movw	r30, r0
    1832:	11 24       	eor	r1, r1
    1834:	e4 5a       	subi	r30, 0xA4	; 164
    1836:	fd 4e       	sbci	r31, 0xED	; 237
    1838:	90 81       	ld	r25, Z
    183a:	91 11       	cpse	r25, r1
    183c:	0e c0       	rjmp	.+28     	; 0x185a <vTaskSwitchContext+0x8c>
    183e:	4b e0       	ldi	r20, 0x0B	; 11
    1840:	81 50       	subi	r24, 0x01	; 1
    1842:	28 2f       	mov	r18, r24
    1844:	30 e0       	ldi	r19, 0x00	; 0
    1846:	42 9f       	mul	r20, r18
    1848:	f0 01       	movw	r30, r0
    184a:	43 9f       	mul	r20, r19
    184c:	f0 0d       	add	r31, r0
    184e:	11 24       	eor	r1, r1
    1850:	e4 5a       	subi	r30, 0xA4	; 164
    1852:	fd 4e       	sbci	r31, 0xED	; 237
    1854:	90 81       	ld	r25, Z
    1856:	99 23       	and	r25, r25
    1858:	99 f3       	breq	.-26     	; 0x1840 <vTaskSwitchContext+0x72>
    185a:	9b e0       	ldi	r25, 0x0B	; 11
    185c:	92 9f       	mul	r25, r18
    185e:	a0 01       	movw	r20, r0
    1860:	93 9f       	mul	r25, r19
    1862:	50 0d       	add	r21, r0
    1864:	11 24       	eor	r1, r1
    1866:	da 01       	movw	r26, r20
    1868:	a4 5a       	subi	r26, 0xA4	; 164
    186a:	bd 4e       	sbci	r27, 0xED	; 237
    186c:	11 96       	adiw	r26, 0x01	; 1
    186e:	ed 91       	ld	r30, X+
    1870:	fc 91       	ld	r31, X
    1872:	12 97       	sbiw	r26, 0x02	; 2
    1874:	04 80       	ldd	r0, Z+4	; 0x04
    1876:	f5 81       	ldd	r31, Z+5	; 0x05
    1878:	e0 2d       	mov	r30, r0
    187a:	12 96       	adiw	r26, 0x02	; 2
    187c:	fc 93       	st	X, r31
    187e:	ee 93       	st	-X, r30
    1880:	11 97       	sbiw	r26, 0x01	; 1
    1882:	41 5a       	subi	r20, 0xA1	; 161
    1884:	5d 4e       	sbci	r21, 0xED	; 237
    1886:	e4 17       	cp	r30, r20
    1888:	f5 07       	cpc	r31, r21
    188a:	29 f4       	brne	.+10     	; 0x1896 <vTaskSwitchContext+0xc8>
    188c:	44 81       	ldd	r20, Z+4	; 0x04
    188e:	55 81       	ldd	r21, Z+5	; 0x05
    1890:	fd 01       	movw	r30, r26
    1892:	52 83       	std	Z+2, r21	; 0x02
    1894:	41 83       	std	Z+1, r20	; 0x01
    1896:	9b e0       	ldi	r25, 0x0B	; 11
    1898:	92 9f       	mul	r25, r18
    189a:	f0 01       	movw	r30, r0
    189c:	93 9f       	mul	r25, r19
    189e:	f0 0d       	add	r31, r0
    18a0:	11 24       	eor	r1, r1
    18a2:	e4 5a       	subi	r30, 0xA4	; 164
    18a4:	fd 4e       	sbci	r31, 0xED	; 237
    18a6:	01 80       	ldd	r0, Z+1	; 0x01
    18a8:	f2 81       	ldd	r31, Z+2	; 0x02
    18aa:	e0 2d       	mov	r30, r0
    18ac:	20 85       	ldd	r18, Z+8	; 0x08
    18ae:	31 85       	ldd	r19, Z+9	; 0x09
    18b0:	30 93 89 12 	sts	0x1289, r19	; 0x801289 <pxCurrentTCB+0x1>
    18b4:	20 93 88 12 	sts	0x1288, r18	; 0x801288 <pxCurrentTCB>
    18b8:	80 93 1a 12 	sts	0x121A, r24	; 0x80121a <uxTopReadyPriority>
    18bc:	e0 91 88 12 	lds	r30, 0x1288	; 0x801288 <pxCurrentTCB>
    18c0:	f0 91 89 12 	lds	r31, 0x1289	; 0x801289 <pxCurrentTCB+0x1>
    18c4:	81 a5       	ldd	r24, Z+41	; 0x29
    18c6:	0c 94 6f 02 	jmp	0x4de	; 0x4de <task_switch_in>
    18ca:	08 95       	ret

000018cc <vTaskPlaceOnEventList>:
    18cc:	cf 92       	push	r12
    18ce:	df 92       	push	r13
    18d0:	ef 92       	push	r14
    18d2:	ff 92       	push	r15
    18d4:	6a 01       	movw	r12, r20
    18d6:	7b 01       	movw	r14, r22
    18d8:	60 91 88 12 	lds	r22, 0x1288	; 0x801288 <pxCurrentTCB>
    18dc:	70 91 89 12 	lds	r23, 0x1289	; 0x801289 <pxCurrentTCB+0x1>
    18e0:	62 5f       	subi	r22, 0xF2	; 242
    18e2:	7f 4f       	sbci	r23, 0xFF	; 255
    18e4:	0e 94 e6 03 	call	0x7cc	; 0x7cc <vListInsert>
    18e8:	41 e0       	ldi	r20, 0x01	; 1
    18ea:	c7 01       	movw	r24, r14
    18ec:	b6 01       	movw	r22, r12
    18ee:	2f dc       	rcall	.-1954   	; 0x114e <prvAddCurrentTaskToDelayedList>
    18f0:	ff 90       	pop	r15
    18f2:	ef 90       	pop	r14
    18f4:	df 90       	pop	r13
    18f6:	cf 90       	pop	r12
    18f8:	08 95       	ret

000018fa <vTaskPlaceOnEventListRestricted>:
    18fa:	cf 92       	push	r12
    18fc:	df 92       	push	r13
    18fe:	ef 92       	push	r14
    1900:	ff 92       	push	r15
    1902:	cf 93       	push	r28
    1904:	6a 01       	movw	r12, r20
    1906:	7b 01       	movw	r14, r22
    1908:	c2 2f       	mov	r28, r18
    190a:	60 91 88 12 	lds	r22, 0x1288	; 0x801288 <pxCurrentTCB>
    190e:	70 91 89 12 	lds	r23, 0x1289	; 0x801289 <pxCurrentTCB+0x1>
    1912:	62 5f       	subi	r22, 0xF2	; 242
    1914:	7f 4f       	sbci	r23, 0xFF	; 255
    1916:	0e 94 c5 03 	call	0x78a	; 0x78a <vListInsertEnd>
    191a:	cc 23       	and	r28, r28
    191c:	21 f0       	breq	.+8      	; 0x1926 <vTaskPlaceOnEventListRestricted+0x2c>
    191e:	cc 24       	eor	r12, r12
    1920:	ca 94       	dec	r12
    1922:	dc 2c       	mov	r13, r12
    1924:	76 01       	movw	r14, r12
    1926:	4c 2f       	mov	r20, r28
    1928:	c7 01       	movw	r24, r14
    192a:	b6 01       	movw	r22, r12
    192c:	10 dc       	rcall	.-2016   	; 0x114e <prvAddCurrentTaskToDelayedList>
    192e:	cf 91       	pop	r28
    1930:	ff 90       	pop	r15
    1932:	ef 90       	pop	r14
    1934:	df 90       	pop	r13
    1936:	cf 90       	pop	r12
    1938:	08 95       	ret

0000193a <xTaskRemoveFromEventList>:
    193a:	0f 93       	push	r16
    193c:	1f 93       	push	r17
    193e:	cf 93       	push	r28
    1940:	df 93       	push	r29
    1942:	dc 01       	movw	r26, r24
    1944:	17 96       	adiw	r26, 0x07	; 7
    1946:	ed 91       	ld	r30, X+
    1948:	fc 91       	ld	r31, X
    194a:	18 97       	sbiw	r26, 0x08	; 8
    194c:	c0 85       	ldd	r28, Z+8	; 0x08
    194e:	d1 85       	ldd	r29, Z+9	; 0x09
    1950:	8e 01       	movw	r16, r28
    1952:	02 5f       	subi	r16, 0xF2	; 242
    1954:	1f 4f       	sbci	r17, 0xFF	; 255
    1956:	c8 01       	movw	r24, r16
    1958:	0e 94 23 04 	call	0x846	; 0x846 <uxListRemove>
    195c:	80 91 0e 12 	lds	r24, 0x120E	; 0x80120e <uxSchedulerSuspended>
    1960:	81 11       	cpse	r24, r1
    1962:	16 c0       	rjmp	.+44     	; 0x1990 <xTaskRemoveFromEventList+0x56>
    1964:	0c 50       	subi	r16, 0x0C	; 12
    1966:	11 09       	sbc	r17, r1
    1968:	c8 01       	movw	r24, r16
    196a:	0e 94 23 04 	call	0x846	; 0x846 <uxListRemove>
    196e:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1970:	90 91 1a 12 	lds	r25, 0x121A	; 0x80121a <uxTopReadyPriority>
    1974:	98 17       	cp	r25, r24
    1976:	10 f4       	brcc	.+4      	; 0x197c <xTaskRemoveFromEventList+0x42>
    1978:	80 93 1a 12 	sts	0x121A, r24	; 0x80121a <uxTopReadyPriority>
    197c:	bb e0       	ldi	r27, 0x0B	; 11
    197e:	8b 9f       	mul	r24, r27
    1980:	c0 01       	movw	r24, r0
    1982:	11 24       	eor	r1, r1
    1984:	b8 01       	movw	r22, r16
    1986:	84 5a       	subi	r24, 0xA4	; 164
    1988:	9d 4e       	sbci	r25, 0xED	; 237
    198a:	0e 94 c5 03 	call	0x78a	; 0x78a <vListInsertEnd>
    198e:	05 c0       	rjmp	.+10     	; 0x199a <xTaskRemoveFromEventList+0x60>
    1990:	b8 01       	movw	r22, r16
    1992:	87 e3       	ldi	r24, 0x37	; 55
    1994:	92 e1       	ldi	r25, 0x12	; 18
    1996:	0e 94 c5 03 	call	0x78a	; 0x78a <vListInsertEnd>
    199a:	e0 91 88 12 	lds	r30, 0x1288	; 0x801288 <pxCurrentTCB>
    199e:	f0 91 89 12 	lds	r31, 0x1289	; 0x801289 <pxCurrentTCB+0x1>
    19a2:	9a 8d       	ldd	r25, Y+26	; 0x1a
    19a4:	82 8d       	ldd	r24, Z+26	; 0x1a
    19a6:	89 17       	cp	r24, r25
    19a8:	20 f4       	brcc	.+8      	; 0x19b2 <xTaskRemoveFromEventList+0x78>
    19aa:	81 e0       	ldi	r24, 0x01	; 1
    19ac:	80 93 17 12 	sts	0x1217, r24	; 0x801217 <xYieldPending>
    19b0:	01 c0       	rjmp	.+2      	; 0x19b4 <xTaskRemoveFromEventList+0x7a>
    19b2:	80 e0       	ldi	r24, 0x00	; 0
    19b4:	df 91       	pop	r29
    19b6:	cf 91       	pop	r28
    19b8:	1f 91       	pop	r17
    19ba:	0f 91       	pop	r16
    19bc:	08 95       	ret

000019be <vTaskInternalSetTimeOutState>:
    19be:	20 91 16 12 	lds	r18, 0x1216	; 0x801216 <xNumOfOverflows>
    19c2:	fc 01       	movw	r30, r24
    19c4:	20 83       	st	Z, r18
    19c6:	40 91 1b 12 	lds	r20, 0x121B	; 0x80121b <xTickCount>
    19ca:	50 91 1c 12 	lds	r21, 0x121C	; 0x80121c <xTickCount+0x1>
    19ce:	60 91 1d 12 	lds	r22, 0x121D	; 0x80121d <xTickCount+0x2>
    19d2:	70 91 1e 12 	lds	r23, 0x121E	; 0x80121e <xTickCount+0x3>
    19d6:	41 83       	std	Z+1, r20	; 0x01
    19d8:	52 83       	std	Z+2, r21	; 0x02
    19da:	63 83       	std	Z+3, r22	; 0x03
    19dc:	74 83       	std	Z+4, r23	; 0x04
    19de:	08 95       	ret

000019e0 <xTaskCheckForTimeOut>:
    19e0:	cf 92       	push	r12
    19e2:	df 92       	push	r13
    19e4:	ef 92       	push	r14
    19e6:	ff 92       	push	r15
    19e8:	0f 93       	push	r16
    19ea:	1f 93       	push	r17
    19ec:	cf 93       	push	r28
    19ee:	df 93       	push	r29
    19f0:	fb 01       	movw	r30, r22
    19f2:	0f b6       	in	r0, 0x3f	; 63
    19f4:	f8 94       	cli
    19f6:	0f 92       	push	r0
    19f8:	40 91 1b 12 	lds	r20, 0x121B	; 0x80121b <xTickCount>
    19fc:	50 91 1c 12 	lds	r21, 0x121C	; 0x80121c <xTickCount+0x1>
    1a00:	60 91 1d 12 	lds	r22, 0x121D	; 0x80121d <xTickCount+0x2>
    1a04:	70 91 1e 12 	lds	r23, 0x121E	; 0x80121e <xTickCount+0x3>
    1a08:	00 81       	ld	r16, Z
    1a0a:	11 81       	ldd	r17, Z+1	; 0x01
    1a0c:	22 81       	ldd	r18, Z+2	; 0x02
    1a0e:	33 81       	ldd	r19, Z+3	; 0x03
    1a10:	0f 3f       	cpi	r16, 0xFF	; 255
    1a12:	af ef       	ldi	r26, 0xFF	; 255
    1a14:	1a 07       	cpc	r17, r26
    1a16:	2a 07       	cpc	r18, r26
    1a18:	3a 07       	cpc	r19, r26
    1a1a:	49 f1       	breq	.+82     	; 0x1a6e <xTaskCheckForTimeOut+0x8e>
    1a1c:	ec 01       	movw	r28, r24
    1a1e:	c9 80       	ldd	r12, Y+1	; 0x01
    1a20:	da 80       	ldd	r13, Y+2	; 0x02
    1a22:	eb 80       	ldd	r14, Y+3	; 0x03
    1a24:	fc 80       	ldd	r15, Y+4	; 0x04
    1a26:	a0 91 16 12 	lds	r26, 0x1216	; 0x801216 <xNumOfOverflows>
    1a2a:	b8 81       	ld	r27, Y
    1a2c:	ba 17       	cp	r27, r26
    1a2e:	29 f0       	breq	.+10     	; 0x1a3a <xTaskCheckForTimeOut+0x5a>
    1a30:	4c 15       	cp	r20, r12
    1a32:	5d 05       	cpc	r21, r13
    1a34:	6e 05       	cpc	r22, r14
    1a36:	7f 05       	cpc	r23, r15
    1a38:	e0 f4       	brcc	.+56     	; 0x1a72 <xTaskCheckForTimeOut+0x92>
    1a3a:	4c 19       	sub	r20, r12
    1a3c:	5d 09       	sbc	r21, r13
    1a3e:	6e 09       	sbc	r22, r14
    1a40:	7f 09       	sbc	r23, r15
    1a42:	40 17       	cp	r20, r16
    1a44:	51 07       	cpc	r21, r17
    1a46:	62 07       	cpc	r22, r18
    1a48:	73 07       	cpc	r23, r19
    1a4a:	58 f4       	brcc	.+22     	; 0x1a62 <xTaskCheckForTimeOut+0x82>
    1a4c:	04 1b       	sub	r16, r20
    1a4e:	15 0b       	sbc	r17, r21
    1a50:	26 0b       	sbc	r18, r22
    1a52:	37 0b       	sbc	r19, r23
    1a54:	00 83       	st	Z, r16
    1a56:	11 83       	std	Z+1, r17	; 0x01
    1a58:	22 83       	std	Z+2, r18	; 0x02
    1a5a:	33 83       	std	Z+3, r19	; 0x03
    1a5c:	b0 df       	rcall	.-160    	; 0x19be <vTaskInternalSetTimeOutState>
    1a5e:	80 e0       	ldi	r24, 0x00	; 0
    1a60:	09 c0       	rjmp	.+18     	; 0x1a74 <xTaskCheckForTimeOut+0x94>
    1a62:	10 82       	st	Z, r1
    1a64:	11 82       	std	Z+1, r1	; 0x01
    1a66:	12 82       	std	Z+2, r1	; 0x02
    1a68:	13 82       	std	Z+3, r1	; 0x03
    1a6a:	81 e0       	ldi	r24, 0x01	; 1
    1a6c:	03 c0       	rjmp	.+6      	; 0x1a74 <xTaskCheckForTimeOut+0x94>
    1a6e:	80 e0       	ldi	r24, 0x00	; 0
    1a70:	01 c0       	rjmp	.+2      	; 0x1a74 <xTaskCheckForTimeOut+0x94>
    1a72:	81 e0       	ldi	r24, 0x01	; 1
    1a74:	0f 90       	pop	r0
    1a76:	0f be       	out	0x3f, r0	; 63
    1a78:	df 91       	pop	r29
    1a7a:	cf 91       	pop	r28
    1a7c:	1f 91       	pop	r17
    1a7e:	0f 91       	pop	r16
    1a80:	ff 90       	pop	r15
    1a82:	ef 90       	pop	r14
    1a84:	df 90       	pop	r13
    1a86:	cf 90       	pop	r12
    1a88:	08 95       	ret

00001a8a <vTaskMissedYield>:
    1a8a:	81 e0       	ldi	r24, 0x01	; 1
    1a8c:	80 93 17 12 	sts	0x1217, r24	; 0x801217 <xYieldPending>
    1a90:	08 95       	ret

00001a92 <xTaskGetSchedulerState>:
    1a92:	80 91 19 12 	lds	r24, 0x1219	; 0x801219 <xSchedulerRunning>
    1a96:	88 23       	and	r24, r24
    1a98:	31 f0       	breq	.+12     	; 0x1aa6 <xTaskGetSchedulerState+0x14>
    1a9a:	80 91 0e 12 	lds	r24, 0x120E	; 0x80120e <uxSchedulerSuspended>
    1a9e:	88 23       	and	r24, r24
    1aa0:	21 f0       	breq	.+8      	; 0x1aaa <xTaskGetSchedulerState+0x18>
    1aa2:	80 e0       	ldi	r24, 0x00	; 0
    1aa4:	08 95       	ret
    1aa6:	81 e0       	ldi	r24, 0x01	; 1
    1aa8:	08 95       	ret
    1aaa:	82 e0       	ldi	r24, 0x02	; 2
    1aac:	08 95       	ret

00001aae <xTaskPriorityDisinherit>:
    1aae:	0f 93       	push	r16
    1ab0:	1f 93       	push	r17
    1ab2:	cf 93       	push	r28
    1ab4:	df 93       	push	r29
    1ab6:	fc 01       	movw	r30, r24
    1ab8:	89 2b       	or	r24, r25
    1aba:	79 f1       	breq	.+94     	; 0x1b1a <xTaskPriorityDisinherit+0x6c>
    1abc:	80 a5       	ldd	r24, Z+40	; 0x28
    1abe:	81 50       	subi	r24, 0x01	; 1
    1ac0:	80 a7       	std	Z+40, r24	; 0x28
    1ac2:	22 8d       	ldd	r18, Z+26	; 0x1a
    1ac4:	97 a1       	ldd	r25, Z+39	; 0x27
    1ac6:	29 17       	cp	r18, r25
    1ac8:	51 f1       	breq	.+84     	; 0x1b1e <xTaskPriorityDisinherit+0x70>
    1aca:	81 11       	cpse	r24, r1
    1acc:	2a c0       	rjmp	.+84     	; 0x1b22 <xTaskPriorityDisinherit+0x74>
    1ace:	ef 01       	movw	r28, r30
    1ad0:	8f 01       	movw	r16, r30
    1ad2:	0e 5f       	subi	r16, 0xFE	; 254
    1ad4:	1f 4f       	sbci	r17, 0xFF	; 255
    1ad6:	c8 01       	movw	r24, r16
    1ad8:	0e 94 23 04 	call	0x846	; 0x846 <uxListRemove>
    1adc:	8f a1       	ldd	r24, Y+39	; 0x27
    1ade:	8a 8f       	std	Y+26, r24	; 0x1a
    1ae0:	44 e0       	ldi	r20, 0x04	; 4
    1ae2:	50 e0       	ldi	r21, 0x00	; 0
    1ae4:	60 e0       	ldi	r22, 0x00	; 0
    1ae6:	70 e0       	ldi	r23, 0x00	; 0
    1ae8:	48 1b       	sub	r20, r24
    1aea:	51 09       	sbc	r21, r1
    1aec:	61 09       	sbc	r22, r1
    1aee:	71 09       	sbc	r23, r1
    1af0:	4e 87       	std	Y+14, r20	; 0x0e
    1af2:	5f 87       	std	Y+15, r21	; 0x0f
    1af4:	68 8b       	std	Y+16, r22	; 0x10
    1af6:	79 8b       	std	Y+17, r23	; 0x11
    1af8:	90 91 1a 12 	lds	r25, 0x121A	; 0x80121a <uxTopReadyPriority>
    1afc:	98 17       	cp	r25, r24
    1afe:	10 f4       	brcc	.+4      	; 0x1b04 <xTaskPriorityDisinherit+0x56>
    1b00:	80 93 1a 12 	sts	0x121A, r24	; 0x80121a <uxTopReadyPriority>
    1b04:	2b e0       	ldi	r18, 0x0B	; 11
    1b06:	82 9f       	mul	r24, r18
    1b08:	c0 01       	movw	r24, r0
    1b0a:	11 24       	eor	r1, r1
    1b0c:	b8 01       	movw	r22, r16
    1b0e:	84 5a       	subi	r24, 0xA4	; 164
    1b10:	9d 4e       	sbci	r25, 0xED	; 237
    1b12:	0e 94 c5 03 	call	0x78a	; 0x78a <vListInsertEnd>
    1b16:	81 e0       	ldi	r24, 0x01	; 1
    1b18:	05 c0       	rjmp	.+10     	; 0x1b24 <xTaskPriorityDisinherit+0x76>
    1b1a:	80 e0       	ldi	r24, 0x00	; 0
    1b1c:	03 c0       	rjmp	.+6      	; 0x1b24 <xTaskPriorityDisinherit+0x76>
    1b1e:	80 e0       	ldi	r24, 0x00	; 0
    1b20:	01 c0       	rjmp	.+2      	; 0x1b24 <xTaskPriorityDisinherit+0x76>
    1b22:	80 e0       	ldi	r24, 0x00	; 0
    1b24:	df 91       	pop	r29
    1b26:	cf 91       	pop	r28
    1b28:	1f 91       	pop	r17
    1b2a:	0f 91       	pop	r16
    1b2c:	08 95       	ret

00001b2e <prvInsertTimerInActiveList>:
    1b2e:	cf 92       	push	r12
    1b30:	df 92       	push	r13
    1b32:	ef 92       	push	r14
    1b34:	ff 92       	push	r15
    1b36:	0f 93       	push	r16
    1b38:	1f 93       	push	r17
    1b3a:	fc 01       	movw	r30, r24
    1b3c:	42 83       	std	Z+2, r20	; 0x02
    1b3e:	53 83       	std	Z+3, r21	; 0x03
    1b40:	64 83       	std	Z+4, r22	; 0x04
    1b42:	75 83       	std	Z+5, r23	; 0x05
    1b44:	93 87       	std	Z+11, r25	; 0x0b
    1b46:	82 87       	std	Z+10, r24	; 0x0a
    1b48:	04 17       	cp	r16, r20
    1b4a:	15 07       	cpc	r17, r21
    1b4c:	26 07       	cpc	r18, r22
    1b4e:	37 07       	cpc	r19, r23
    1b50:	c0 f0       	brcs	.+48     	; 0x1b82 <prvInsertTimerInActiveList+0x54>
    1b52:	0c 19       	sub	r16, r12
    1b54:	1d 09       	sbc	r17, r13
    1b56:	2e 09       	sbc	r18, r14
    1b58:	3f 09       	sbc	r19, r15
    1b5a:	86 85       	ldd	r24, Z+14	; 0x0e
    1b5c:	97 85       	ldd	r25, Z+15	; 0x0f
    1b5e:	a0 89       	ldd	r26, Z+16	; 0x10
    1b60:	b1 89       	ldd	r27, Z+17	; 0x11
    1b62:	08 17       	cp	r16, r24
    1b64:	19 07       	cpc	r17, r25
    1b66:	2a 07       	cpc	r18, r26
    1b68:	3b 07       	cpc	r19, r27
    1b6a:	00 f5       	brcc	.+64     	; 0x1bac <prvInsertTimerInActiveList+0x7e>
    1b6c:	bf 01       	movw	r22, r30
    1b6e:	6e 5f       	subi	r22, 0xFE	; 254
    1b70:	7f 4f       	sbci	r23, 0xFF	; 255
    1b72:	80 91 92 12 	lds	r24, 0x1292	; 0x801292 <pxOverflowTimerList>
    1b76:	90 91 93 12 	lds	r25, 0x1293	; 0x801293 <pxOverflowTimerList+0x1>
    1b7a:	0e 94 e6 03 	call	0x7cc	; 0x7cc <vListInsert>
    1b7e:	80 e0       	ldi	r24, 0x00	; 0
    1b80:	18 c0       	rjmp	.+48     	; 0x1bb2 <prvInsertTimerInActiveList+0x84>
    1b82:	0c 15       	cp	r16, r12
    1b84:	1d 05       	cpc	r17, r13
    1b86:	2e 05       	cpc	r18, r14
    1b88:	3f 05       	cpc	r19, r15
    1b8a:	28 f4       	brcc	.+10     	; 0x1b96 <prvInsertTimerInActiveList+0x68>
    1b8c:	4c 15       	cp	r20, r12
    1b8e:	5d 05       	cpc	r21, r13
    1b90:	6e 05       	cpc	r22, r14
    1b92:	7f 05       	cpc	r23, r15
    1b94:	68 f4       	brcc	.+26     	; 0x1bb0 <prvInsertTimerInActiveList+0x82>
    1b96:	bf 01       	movw	r22, r30
    1b98:	6e 5f       	subi	r22, 0xFE	; 254
    1b9a:	7f 4f       	sbci	r23, 0xFF	; 255
    1b9c:	80 91 94 12 	lds	r24, 0x1294	; 0x801294 <pxCurrentTimerList>
    1ba0:	90 91 95 12 	lds	r25, 0x1295	; 0x801295 <pxCurrentTimerList+0x1>
    1ba4:	0e 94 e6 03 	call	0x7cc	; 0x7cc <vListInsert>
    1ba8:	80 e0       	ldi	r24, 0x00	; 0
    1baa:	03 c0       	rjmp	.+6      	; 0x1bb2 <prvInsertTimerInActiveList+0x84>
    1bac:	81 e0       	ldi	r24, 0x01	; 1
    1bae:	01 c0       	rjmp	.+2      	; 0x1bb2 <prvInsertTimerInActiveList+0x84>
    1bb0:	81 e0       	ldi	r24, 0x01	; 1
    1bb2:	1f 91       	pop	r17
    1bb4:	0f 91       	pop	r16
    1bb6:	ff 90       	pop	r15
    1bb8:	ef 90       	pop	r14
    1bba:	df 90       	pop	r13
    1bbc:	cf 90       	pop	r12
    1bbe:	08 95       	ret

00001bc0 <prvCheckForValidListAndQueue>:
    1bc0:	0f b6       	in	r0, 0x3f	; 63
    1bc2:	f8 94       	cli
    1bc4:	0f 92       	push	r0
    1bc6:	80 91 90 12 	lds	r24, 0x1290	; 0x801290 <xTimerQueue>
    1bca:	90 91 91 12 	lds	r25, 0x1291	; 0x801291 <xTimerQueue+0x1>
    1bce:	89 2b       	or	r24, r25
    1bd0:	e1 f4       	brne	.+56     	; 0x1c0a <prvCheckForValidListAndQueue+0x4a>
    1bd2:	81 ea       	ldi	r24, 0xA1	; 161
    1bd4:	92 e1       	ldi	r25, 0x12	; 18
    1bd6:	0e 94 b0 03 	call	0x760	; 0x760 <vListInitialise>
    1bda:	86 e9       	ldi	r24, 0x96	; 150
    1bdc:	92 e1       	ldi	r25, 0x12	; 18
    1bde:	0e 94 b0 03 	call	0x760	; 0x760 <vListInitialise>
    1be2:	81 ea       	ldi	r24, 0xA1	; 161
    1be4:	92 e1       	ldi	r25, 0x12	; 18
    1be6:	90 93 95 12 	sts	0x1295, r25	; 0x801295 <pxCurrentTimerList+0x1>
    1bea:	80 93 94 12 	sts	0x1294, r24	; 0x801294 <pxCurrentTimerList>
    1bee:	86 e9       	ldi	r24, 0x96	; 150
    1bf0:	92 e1       	ldi	r25, 0x12	; 18
    1bf2:	90 93 93 12 	sts	0x1293, r25	; 0x801293 <pxOverflowTimerList+0x1>
    1bf6:	80 93 92 12 	sts	0x1292, r24	; 0x801292 <pxOverflowTimerList>
    1bfa:	40 e0       	ldi	r20, 0x00	; 0
    1bfc:	67 e0       	ldi	r22, 0x07	; 7
    1bfe:	8a e0       	ldi	r24, 0x0A	; 10
    1c00:	ca d8       	rcall	.-3692   	; 0xd96 <xQueueGenericCreate>
    1c02:	90 93 91 12 	sts	0x1291, r25	; 0x801291 <xTimerQueue+0x1>
    1c06:	80 93 90 12 	sts	0x1290, r24	; 0x801290 <xTimerQueue>
    1c0a:	0f 90       	pop	r0
    1c0c:	0f be       	out	0x3f, r0	; 63
    1c0e:	08 95       	ret

00001c10 <xTimerCreateTimerTask>:
    1c10:	ef 92       	push	r14
    1c12:	ff 92       	push	r15
    1c14:	0f 93       	push	r16
    1c16:	d4 df       	rcall	.-88     	; 0x1bc0 <prvCheckForValidListAndQueue>
    1c18:	80 91 90 12 	lds	r24, 0x1290	; 0x801290 <xTimerQueue>
    1c1c:	90 91 91 12 	lds	r25, 0x1291	; 0x801291 <xTimerQueue+0x1>
    1c20:	89 2b       	or	r24, r25
    1c22:	89 f0       	breq	.+34     	; 0x1c46 <xTimerCreateTimerTask+0x36>
    1c24:	0f 2e       	mov	r0, r31
    1c26:	fe e8       	ldi	r31, 0x8E	; 142
    1c28:	ef 2e       	mov	r14, r31
    1c2a:	f2 e1       	ldi	r31, 0x12	; 18
    1c2c:	ff 2e       	mov	r15, r31
    1c2e:	f0 2d       	mov	r31, r0
    1c30:	03 e0       	ldi	r16, 0x03	; 3
    1c32:	20 e0       	ldi	r18, 0x00	; 0
    1c34:	30 e0       	ldi	r19, 0x00	; 0
    1c36:	45 e5       	ldi	r20, 0x55	; 85
    1c38:	50 e0       	ldi	r21, 0x00	; 0
    1c3a:	66 e2       	ldi	r22, 0x26	; 38
    1c3c:	72 e0       	ldi	r23, 0x02	; 2
    1c3e:	83 e0       	ldi	r24, 0x03	; 3
    1c40:	91 e0       	ldi	r25, 0x01	; 1
    1c42:	f8 da       	rcall	.-2576   	; 0x1234 <xTaskCreate>
    1c44:	01 c0       	rjmp	.+2      	; 0x1c48 <xTimerCreateTimerTask+0x38>
    1c46:	80 e0       	ldi	r24, 0x00	; 0
    1c48:	0f 91       	pop	r16
    1c4a:	ff 90       	pop	r15
    1c4c:	ef 90       	pop	r14
    1c4e:	08 95       	ret

00001c50 <xTimerGenericCommand>:
    1c50:	8f 92       	push	r8
    1c52:	9f 92       	push	r9
    1c54:	af 92       	push	r10
    1c56:	bf 92       	push	r11
    1c58:	cf 92       	push	r12
    1c5a:	df 92       	push	r13
    1c5c:	ef 92       	push	r14
    1c5e:	ff 92       	push	r15
    1c60:	0f 93       	push	r16
    1c62:	1f 93       	push	r17
    1c64:	cf 93       	push	r28
    1c66:	df 93       	push	r29
    1c68:	cd b7       	in	r28, 0x3d	; 61
    1c6a:	de b7       	in	r29, 0x3e	; 62
    1c6c:	27 97       	sbiw	r28, 0x07	; 7
    1c6e:	0f b6       	in	r0, 0x3f	; 63
    1c70:	f8 94       	cli
    1c72:	de bf       	out	0x3e, r29	; 62
    1c74:	0f be       	out	0x3f, r0	; 63
    1c76:	cd bf       	out	0x3d, r28	; 61
    1c78:	e0 91 90 12 	lds	r30, 0x1290	; 0x801290 <xTimerQueue>
    1c7c:	f0 91 91 12 	lds	r31, 0x1291	; 0x801291 <xTimerQueue+0x1>
    1c80:	30 97       	sbiw	r30, 0x00	; 0
    1c82:	69 f1       	breq	.+90     	; 0x1cde <xTimerGenericCommand+0x8e>
    1c84:	69 83       	std	Y+1, r22	; 0x01
    1c86:	2a 83       	std	Y+2, r18	; 0x02
    1c88:	3b 83       	std	Y+3, r19	; 0x03
    1c8a:	4c 83       	std	Y+4, r20	; 0x04
    1c8c:	5d 83       	std	Y+5, r21	; 0x05
    1c8e:	9f 83       	std	Y+7, r25	; 0x07
    1c90:	8e 83       	std	Y+6, r24	; 0x06
    1c92:	66 30       	cpi	r22, 0x06	; 6
    1c94:	e4 f4       	brge	.+56     	; 0x1cce <xTimerGenericCommand+0x7e>
    1c96:	fd de       	rcall	.-518    	; 0x1a92 <xTaskGetSchedulerState>
    1c98:	82 30       	cpi	r24, 0x02	; 2
    1c9a:	61 f4       	brne	.+24     	; 0x1cb4 <xTimerGenericCommand+0x64>
    1c9c:	00 e0       	ldi	r16, 0x00	; 0
    1c9e:	a7 01       	movw	r20, r14
    1ca0:	96 01       	movw	r18, r12
    1ca2:	be 01       	movw	r22, r28
    1ca4:	6f 5f       	subi	r22, 0xFF	; 255
    1ca6:	7f 4f       	sbci	r23, 0xFF	; 255
    1ca8:	80 91 90 12 	lds	r24, 0x1290	; 0x801290 <xTimerQueue>
    1cac:	90 91 91 12 	lds	r25, 0x1291	; 0x801291 <xTimerQueue+0x1>
    1cb0:	a0 d8       	rcall	.-3776   	; 0xdf2 <xQueueGenericSend>
    1cb2:	16 c0       	rjmp	.+44     	; 0x1ce0 <xTimerGenericCommand+0x90>
    1cb4:	00 e0       	ldi	r16, 0x00	; 0
    1cb6:	20 e0       	ldi	r18, 0x00	; 0
    1cb8:	30 e0       	ldi	r19, 0x00	; 0
    1cba:	a9 01       	movw	r20, r18
    1cbc:	be 01       	movw	r22, r28
    1cbe:	6f 5f       	subi	r22, 0xFF	; 255
    1cc0:	7f 4f       	sbci	r23, 0xFF	; 255
    1cc2:	80 91 90 12 	lds	r24, 0x1290	; 0x801290 <xTimerQueue>
    1cc6:	90 91 91 12 	lds	r25, 0x1291	; 0x801291 <xTimerQueue+0x1>
    1cca:	93 d8       	rcall	.-3802   	; 0xdf2 <xQueueGenericSend>
    1ccc:	09 c0       	rjmp	.+18     	; 0x1ce0 <xTimerGenericCommand+0x90>
    1cce:	20 e0       	ldi	r18, 0x00	; 0
    1cd0:	a8 01       	movw	r20, r16
    1cd2:	be 01       	movw	r22, r28
    1cd4:	6f 5f       	subi	r22, 0xFF	; 255
    1cd6:	7f 4f       	sbci	r23, 0xFF	; 255
    1cd8:	cf 01       	movw	r24, r30
    1cda:	27 d9       	rcall	.-3506   	; 0xf2a <xQueueGenericSendFromISR>
    1cdc:	01 c0       	rjmp	.+2      	; 0x1ce0 <xTimerGenericCommand+0x90>
    1cde:	80 e0       	ldi	r24, 0x00	; 0
    1ce0:	27 96       	adiw	r28, 0x07	; 7
    1ce2:	0f b6       	in	r0, 0x3f	; 63
    1ce4:	f8 94       	cli
    1ce6:	de bf       	out	0x3e, r29	; 62
    1ce8:	0f be       	out	0x3f, r0	; 63
    1cea:	cd bf       	out	0x3d, r28	; 61
    1cec:	df 91       	pop	r29
    1cee:	cf 91       	pop	r28
    1cf0:	1f 91       	pop	r17
    1cf2:	0f 91       	pop	r16
    1cf4:	ff 90       	pop	r15
    1cf6:	ef 90       	pop	r14
    1cf8:	df 90       	pop	r13
    1cfa:	cf 90       	pop	r12
    1cfc:	bf 90       	pop	r11
    1cfe:	af 90       	pop	r10
    1d00:	9f 90       	pop	r9
    1d02:	8f 90       	pop	r8
    1d04:	08 95       	ret

00001d06 <prvSampleTimeNow>:
    1d06:	2f 92       	push	r2
    1d08:	3f 92       	push	r3
    1d0a:	4f 92       	push	r4
    1d0c:	5f 92       	push	r5
    1d0e:	6f 92       	push	r6
    1d10:	7f 92       	push	r7
    1d12:	8f 92       	push	r8
    1d14:	9f 92       	push	r9
    1d16:	af 92       	push	r10
    1d18:	bf 92       	push	r11
    1d1a:	cf 92       	push	r12
    1d1c:	df 92       	push	r13
    1d1e:	ef 92       	push	r14
    1d20:	ff 92       	push	r15
    1d22:	0f 93       	push	r16
    1d24:	1f 93       	push	r17
    1d26:	cf 93       	push	r28
    1d28:	df 93       	push	r29
    1d2a:	1c 01       	movw	r2, r24
    1d2c:	d1 db       	rcall	.-2142   	; 0x14d0 <xTaskGetTickCount>
    1d2e:	2b 01       	movw	r4, r22
    1d30:	3c 01       	movw	r6, r24
    1d32:	80 91 8a 12 	lds	r24, 0x128A	; 0x80128a <xLastTime.2432>
    1d36:	90 91 8b 12 	lds	r25, 0x128B	; 0x80128b <xLastTime.2432+0x1>
    1d3a:	a0 91 8c 12 	lds	r26, 0x128C	; 0x80128c <xLastTime.2432+0x2>
    1d3e:	b0 91 8d 12 	lds	r27, 0x128D	; 0x80128d <xLastTime.2432+0x3>
    1d42:	48 16       	cp	r4, r24
    1d44:	59 06       	cpc	r5, r25
    1d46:	6a 06       	cpc	r6, r26
    1d48:	7b 06       	cpc	r7, r27
    1d4a:	08 f0       	brcs	.+2      	; 0x1d4e <prvSampleTimeNow+0x48>
    1d4c:	53 c0       	rjmp	.+166    	; 0x1df4 <prvSampleTimeNow+0xee>
    1d4e:	3b c0       	rjmp	.+118    	; 0x1dc6 <prvSampleTimeNow+0xc0>
    1d50:	07 80       	ldd	r0, Z+7	; 0x07
    1d52:	f0 85       	ldd	r31, Z+8	; 0x08
    1d54:	e0 2d       	mov	r30, r0
    1d56:	80 80       	ld	r8, Z
    1d58:	91 80       	ldd	r9, Z+1	; 0x01
    1d5a:	a2 80       	ldd	r10, Z+2	; 0x02
    1d5c:	b3 80       	ldd	r11, Z+3	; 0x03
    1d5e:	c0 85       	ldd	r28, Z+8	; 0x08
    1d60:	d1 85       	ldd	r29, Z+9	; 0x09
    1d62:	8e 01       	movw	r16, r28
    1d64:	0e 5f       	subi	r16, 0xFE	; 254
    1d66:	1f 4f       	sbci	r17, 0xFF	; 255
    1d68:	c8 01       	movw	r24, r16
    1d6a:	0e 94 23 04 	call	0x846	; 0x846 <uxListRemove>
    1d6e:	ec 89       	ldd	r30, Y+20	; 0x14
    1d70:	fd 89       	ldd	r31, Y+21	; 0x15
    1d72:	ce 01       	movw	r24, r28
    1d74:	19 95       	eicall
    1d76:	8f 89       	ldd	r24, Y+23	; 0x17
    1d78:	82 ff       	sbrs	r24, 2
    1d7a:	25 c0       	rjmp	.+74     	; 0x1dc6 <prvSampleTimeNow+0xc0>
    1d7c:	8e 85       	ldd	r24, Y+14	; 0x0e
    1d7e:	9f 85       	ldd	r25, Y+15	; 0x0f
    1d80:	a8 89       	ldd	r26, Y+16	; 0x10
    1d82:	b9 89       	ldd	r27, Y+17	; 0x11
    1d84:	88 0d       	add	r24, r8
    1d86:	99 1d       	adc	r25, r9
    1d88:	aa 1d       	adc	r26, r10
    1d8a:	bb 1d       	adc	r27, r11
    1d8c:	88 16       	cp	r8, r24
    1d8e:	99 06       	cpc	r9, r25
    1d90:	aa 06       	cpc	r10, r26
    1d92:	bb 06       	cpc	r11, r27
    1d94:	70 f4       	brcc	.+28     	; 0x1db2 <prvSampleTimeNow+0xac>
    1d96:	8a 83       	std	Y+2, r24	; 0x02
    1d98:	9b 83       	std	Y+3, r25	; 0x03
    1d9a:	ac 83       	std	Y+4, r26	; 0x04
    1d9c:	bd 83       	std	Y+5, r27	; 0x05
    1d9e:	db 87       	std	Y+11, r29	; 0x0b
    1da0:	ca 87       	std	Y+10, r28	; 0x0a
    1da2:	b8 01       	movw	r22, r16
    1da4:	80 91 94 12 	lds	r24, 0x1294	; 0x801294 <pxCurrentTimerList>
    1da8:	90 91 95 12 	lds	r25, 0x1295	; 0x801295 <pxCurrentTimerList+0x1>
    1dac:	0e 94 e6 03 	call	0x7cc	; 0x7cc <vListInsert>
    1db0:	0a c0       	rjmp	.+20     	; 0x1dc6 <prvSampleTimeNow+0xc0>
    1db2:	c1 2c       	mov	r12, r1
    1db4:	d1 2c       	mov	r13, r1
    1db6:	76 01       	movw	r14, r12
    1db8:	00 e0       	ldi	r16, 0x00	; 0
    1dba:	10 e0       	ldi	r17, 0x00	; 0
    1dbc:	a5 01       	movw	r20, r10
    1dbe:	94 01       	movw	r18, r8
    1dc0:	60 e0       	ldi	r22, 0x00	; 0
    1dc2:	ce 01       	movw	r24, r28
    1dc4:	45 df       	rcall	.-374    	; 0x1c50 <xTimerGenericCommand>
    1dc6:	e0 91 94 12 	lds	r30, 0x1294	; 0x801294 <pxCurrentTimerList>
    1dca:	f0 91 95 12 	lds	r31, 0x1295	; 0x801295 <pxCurrentTimerList+0x1>
    1dce:	80 81       	ld	r24, Z
    1dd0:	81 11       	cpse	r24, r1
    1dd2:	be cf       	rjmp	.-132    	; 0x1d50 <prvSampleTimeNow+0x4a>
    1dd4:	80 91 92 12 	lds	r24, 0x1292	; 0x801292 <pxOverflowTimerList>
    1dd8:	90 91 93 12 	lds	r25, 0x1293	; 0x801293 <pxOverflowTimerList+0x1>
    1ddc:	90 93 95 12 	sts	0x1295, r25	; 0x801295 <pxCurrentTimerList+0x1>
    1de0:	80 93 94 12 	sts	0x1294, r24	; 0x801294 <pxCurrentTimerList>
    1de4:	f0 93 93 12 	sts	0x1293, r31	; 0x801293 <pxOverflowTimerList+0x1>
    1de8:	e0 93 92 12 	sts	0x1292, r30	; 0x801292 <pxOverflowTimerList>
    1dec:	81 e0       	ldi	r24, 0x01	; 1
    1dee:	f1 01       	movw	r30, r2
    1df0:	80 83       	st	Z, r24
    1df2:	02 c0       	rjmp	.+4      	; 0x1df8 <prvSampleTimeNow+0xf2>
    1df4:	f1 01       	movw	r30, r2
    1df6:	10 82       	st	Z, r1
    1df8:	40 92 8a 12 	sts	0x128A, r4	; 0x80128a <xLastTime.2432>
    1dfc:	50 92 8b 12 	sts	0x128B, r5	; 0x80128b <xLastTime.2432+0x1>
    1e00:	60 92 8c 12 	sts	0x128C, r6	; 0x80128c <xLastTime.2432+0x2>
    1e04:	70 92 8d 12 	sts	0x128D, r7	; 0x80128d <xLastTime.2432+0x3>
    1e08:	c3 01       	movw	r24, r6
    1e0a:	b2 01       	movw	r22, r4
    1e0c:	df 91       	pop	r29
    1e0e:	cf 91       	pop	r28
    1e10:	1f 91       	pop	r17
    1e12:	0f 91       	pop	r16
    1e14:	ff 90       	pop	r15
    1e16:	ef 90       	pop	r14
    1e18:	df 90       	pop	r13
    1e1a:	cf 90       	pop	r12
    1e1c:	bf 90       	pop	r11
    1e1e:	af 90       	pop	r10
    1e20:	9f 90       	pop	r9
    1e22:	8f 90       	pop	r8
    1e24:	7f 90       	pop	r7
    1e26:	6f 90       	pop	r6
    1e28:	5f 90       	pop	r5
    1e2a:	4f 90       	pop	r4
    1e2c:	3f 90       	pop	r3
    1e2e:	2f 90       	pop	r2
    1e30:	08 95       	ret

00001e32 <vApplicationIdleHook>:
 *
 */
void vApplicationIdleHook( void ) __attribute__((weak));

void vApplicationIdleHook( void )
{
    1e32:	08 95       	ret

00001e34 <vApplicationMallocFailedHook>:
void vApplicationMallocFailedHook( void ) __attribute__((weak));

void vApplicationMallocFailedHook( void )
{
#if defined(__AVR_ATmega640__) || defined(__AVR_ATmega1280__) || defined(__AVR_ATmega1281__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega2561__) // Arduino Mega with 2560
    DDRB  |= _BV(DDB7);
    1e34:	27 9a       	sbi	0x04, 7	; 4
    PORTB |= _BV(PORTB7);       // Main (red PB7) LED on. Main LED on.
    1e36:	2f 9a       	sbi	0x05, 7	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1e38:	2f ef       	ldi	r18, 0xFF	; 255
    1e3a:	80 e7       	ldi	r24, 0x70	; 112
    1e3c:	92 e0       	ldi	r25, 0x02	; 2
    1e3e:	21 50       	subi	r18, 0x01	; 1
    1e40:	80 40       	sbci	r24, 0x00	; 0
    1e42:	90 40       	sbci	r25, 0x00	; 0
    1e44:	e1 f7       	brne	.-8      	; 0x1e3e <vApplicationMallocFailedHook+0xa>
    1e46:	00 c0       	rjmp	.+0      	; 0x1e48 <vApplicationMallocFailedHook+0x14>
    1e48:	00 00       	nop
    for(;;)
    {
        _delay_ms(50);

#if defined(__AVR_ATmega640__) || defined(__AVR_ATmega1280__) || defined(__AVR_ATmega1281__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega2561__)  // Mega with 2560
        PINB  |= _BV(PINB7);       // Main (red PB7) LED toggle. Main LED fast blink.
    1e4a:	1f 9a       	sbi	0x03, 7	; 3
    1e4c:	f5 cf       	rjmp	.-22     	; 0x1e38 <vApplicationMallocFailedHook+0x4>

00001e4e <vApplicationStackOverflowHook>:
void vApplicationStackOverflowHook( TaskHandle_t xTask, portCHAR *pcTaskName ) __attribute__((weak));

void vApplicationStackOverflowHook( TaskHandle_t xTask __attribute__((unused)), portCHAR *pcTaskName __attribute__((unused))  )
{
#if defined(__AVR_ATmega640__) || defined(__AVR_ATmega1280__) || defined(__AVR_ATmega1281__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega2561__)  // Arduino Mega with 2560
    DDRB  |= _BV(DDB7);
    1e4e:	27 9a       	sbi	0x04, 7	; 4
    PORTB |= _BV(PORTB7);       // Main (red PB7) LED on. Main LED on.
    1e50:	2f 9a       	sbi	0x05, 7	; 5
    1e52:	2f ef       	ldi	r18, 0xFF	; 255
    1e54:	87 ea       	ldi	r24, 0xA7	; 167
    1e56:	91 e6       	ldi	r25, 0x61	; 97
    1e58:	21 50       	subi	r18, 0x01	; 1
    1e5a:	80 40       	sbci	r24, 0x00	; 0
    1e5c:	90 40       	sbci	r25, 0x00	; 0
    1e5e:	e1 f7       	brne	.-8      	; 0x1e58 <vApplicationStackOverflowHook+0xa>
    1e60:	00 c0       	rjmp	.+0      	; 0x1e62 <vApplicationStackOverflowHook+0x14>
    1e62:	00 00       	nop
    for(;;)
    {
        _delay_ms(2000);

#if defined(__AVR_ATmega640__) || defined(__AVR_ATmega1280__) || defined(__AVR_ATmega1281__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega2561__)  // Arduino Mega with 2560
        PINB  |= _BV(PINB7);       // Main (red PB7) LED toggle. Main LED slow blink.
    1e64:	1f 9a       	sbi	0x03, 7	; 3
    1e66:	f5 cf       	rjmp	.-22     	; 0x1e52 <vApplicationStackOverflowHook+0x4>

00001e68 <humptempsensor_create>:
    1e68:	61 e0       	ldi	r22, 0x01	; 1
    1e6a:	70 e0       	ldi	r23, 0x00	; 0
    1e6c:	88 e0       	ldi	r24, 0x08	; 8
    1e6e:	90 e0       	ldi	r25, 0x00	; 0
    1e70:	0c 94 ac 17 	jmp	0x2f58	; 0x2f58 <calloc>
    1e74:	08 95       	ret

00001e76 <inithtdrivers>:
    1e76:	c8 d0       	rcall	.+400    	; 0x2008 <hih8120Create>
    1e78:	de c0       	rjmp	.+444    	; 0x2036 <hih8120Wakeup>
    1e7a:	08 95       	ret

00001e7c <temphum_meassure>:
    1e7c:	cf 93       	push	r28
    1e7e:	df 93       	push	r29
    1e80:	ec 01       	movw	r28, r24
    1e82:	ed d0       	rcall	.+474    	; 0x205e <hih8120Meassure>
    1e84:	0e d1       	rcall	.+540    	; 0x20a2 <hih8120GetTemperature>
    1e86:	68 83       	st	Y, r22
    1e88:	79 83       	std	Y+1, r23	; 0x01
    1e8a:	8a 83       	std	Y+2, r24	; 0x02
    1e8c:	9b 83       	std	Y+3, r25	; 0x03
    1e8e:	f7 d0       	rcall	.+494    	; 0x207e <hih8120GetHumidity>
    1e90:	6c 83       	std	Y+4, r22	; 0x04
    1e92:	7d 83       	std	Y+5, r23	; 0x05
    1e94:	8e 83       	std	Y+6, r24	; 0x06
    1e96:	9f 83       	std	Y+7, r25	; 0x07
    1e98:	df 91       	pop	r29
    1e9a:	cf 91       	pop	r28
    1e9c:	08 95       	ret

00001e9e <humget_measurment>:
    1e9e:	fc 01       	movw	r30, r24
    1ea0:	64 81       	ldd	r22, Z+4	; 0x04
    1ea2:	75 81       	ldd	r23, Z+5	; 0x05
    1ea4:	86 81       	ldd	r24, Z+6	; 0x06
    1ea6:	97 81       	ldd	r25, Z+7	; 0x07
    1ea8:	08 95       	ret

00001eaa <tempget_measurment>:
    1eaa:	fc 01       	movw	r30, r24
    1eac:	60 81       	ld	r22, Z
    1eae:	71 81       	ldd	r23, Z+1	; 0x01
    1eb0:	82 81       	ldd	r24, Z+2	; 0x02
    1eb2:	93 81       	ldd	r25, Z+3	; 0x03
    1eb4:	08 95       	ret

00001eb6 <task1>:
/*-----------------------------------------------------------*/
void task1( void *pvParameters )
{
	#if (configUSE_APPLICATION_TASK_TAG == 1)
	// Set task no to be used for tracing with R2R-Network
	vTaskSetApplicationTaskTag( NULL, ( void * ) 1 );
    1eb6:	61 e0       	ldi	r22, 0x01	; 1
    1eb8:	70 e0       	ldi	r23, 0x00	; 0
    1eba:	80 e0       	ldi	r24, 0x00	; 0
    1ebc:	90 e0       	ldi	r25, 0x00	; 0
    1ebe:	78 dc       	rcall	.-1808   	; 0x17b0 <vTaskSetApplicationTaskTag>
	#endif

	for(;;)
	{
		puts("Task1");
		PORTA ^= _BV(PA6);
    1ec0:	c0 e4       	ldi	r28, 0x40	; 64
	vTaskSetApplicationTaskTag( NULL, ( void * ) 1 );
	#endif

	for(;;)
	{
		puts("Task1");
    1ec2:	8e e2       	ldi	r24, 0x2E	; 46
    1ec4:	92 e0       	ldi	r25, 0x02	; 2
    1ec6:	0e 94 fb 18 	call	0x31f6	; 0x31f6 <puts>
		PORTA ^= _BV(PA6);
    1eca:	82 b1       	in	r24, 0x02	; 2
    1ecc:	8c 27       	eor	r24, r28
    1ece:	82 b9       	out	0x02, r24	; 2
		vTaskDelay(900);
    1ed0:	64 e8       	ldi	r22, 0x84	; 132
    1ed2:	73 e0       	ldi	r23, 0x03	; 3
    1ed4:	80 e0       	ldi	r24, 0x00	; 0
    1ed6:	90 e0       	ldi	r25, 0x00	; 0
    1ed8:	53 dc       	rcall	.-1882   	; 0x1780 <vTaskDelay>
    1eda:	f3 cf       	rjmp	.-26     	; 0x1ec2 <task1+0xc>

00001edc <task2>:

/*-----------------------------------------------------------*/
void task2( void *pvParameters )
{
	#if (configUSE_APPLICATION_TASK_TAG == 1)
	vTaskSetApplicationTaskTag( NULL, ( void * ) 2 );
    1edc:	62 e0       	ldi	r22, 0x02	; 2
    1ede:	70 e0       	ldi	r23, 0x00	; 0
    1ee0:	80 e0       	ldi	r24, 0x00	; 0
    1ee2:	90 e0       	ldi	r25, 0x00	; 0
    1ee4:	65 dc       	rcall	.-1846   	; 0x17b0 <vTaskSetApplicationTaskTag>
	{
		puts("measuring temperature");
		temphum_meassure(HtSensor);
		temperature = tempget_measurment(HtSensor);
		humidity = humget_measurment(HtSensor);
		PORTA ^= _BV(PA5);
    1ee6:	c0 e2       	ldi	r28, 0x20	; 32
	#endif


	for(;;)
	{
		puts("measuring temperature");
    1ee8:	84 e3       	ldi	r24, 0x34	; 52
    1eea:	92 e0       	ldi	r25, 0x02	; 2
    1eec:	0e 94 fb 18 	call	0x31f6	; 0x31f6 <puts>
		temphum_meassure(HtSensor);
    1ef0:	80 91 d1 12 	lds	r24, 0x12D1	; 0x8012d1 <HtSensor>
    1ef4:	90 91 d2 12 	lds	r25, 0x12D2	; 0x8012d2 <HtSensor+0x1>
    1ef8:	c1 df       	rcall	.-126    	; 0x1e7c <temphum_meassure>
		temperature = tempget_measurment(HtSensor);
    1efa:	80 91 d1 12 	lds	r24, 0x12D1	; 0x8012d1 <HtSensor>
    1efe:	90 91 d2 12 	lds	r25, 0x12D2	; 0x8012d2 <HtSensor+0x1>
    1f02:	d3 df       	rcall	.-90     	; 0x1eaa <tempget_measurment>
    1f04:	60 93 ac 12 	sts	0x12AC, r22	; 0x8012ac <temperature>
    1f08:	70 93 ad 12 	sts	0x12AD, r23	; 0x8012ad <temperature+0x1>
    1f0c:	80 93 ae 12 	sts	0x12AE, r24	; 0x8012ae <temperature+0x2>
    1f10:	90 93 af 12 	sts	0x12AF, r25	; 0x8012af <temperature+0x3>
		humidity = humget_measurment(HtSensor);
    1f14:	80 91 d1 12 	lds	r24, 0x12D1	; 0x8012d1 <HtSensor>
    1f18:	90 91 d2 12 	lds	r25, 0x12D2	; 0x8012d2 <HtSensor+0x1>
    1f1c:	c0 df       	rcall	.-128    	; 0x1e9e <humget_measurment>
    1f1e:	60 93 b0 12 	sts	0x12B0, r22	; 0x8012b0 <humidity>
    1f22:	70 93 b1 12 	sts	0x12B1, r23	; 0x8012b1 <humidity+0x1>
    1f26:	80 93 b2 12 	sts	0x12B2, r24	; 0x8012b2 <humidity+0x2>
    1f2a:	90 93 b3 12 	sts	0x12B3, r25	; 0x8012b3 <humidity+0x3>
		PORTA ^= _BV(PA5);
    1f2e:	82 b1       	in	r24, 0x02	; 2
    1f30:	8c 27       	eor	r24, r28
    1f32:	82 b9       	out	0x02, r24	; 2
		vTaskDelay(1000);
    1f34:	68 ee       	ldi	r22, 0xE8	; 232
    1f36:	73 e0       	ldi	r23, 0x03	; 3
    1f38:	80 e0       	ldi	r24, 0x00	; 0
    1f3a:	90 e0       	ldi	r25, 0x00	; 0
    1f3c:	21 dc       	rcall	.-1982   	; 0x1780 <vTaskDelay>
    1f3e:	d4 cf       	rjmp	.-88     	; 0x1ee8 <task2+0xc>

00001f40 <create_tasks_and_semaphores>:
float temperature = 0.0;


/*-----------------------------------------------------------*/
void create_tasks_and_semaphores(void)
{
    1f40:	ef 92       	push	r14
    1f42:	ff 92       	push	r15
    1f44:	0f 93       	push	r16

	xTaskCreate(task1, (const portCHAR *)"Task1", configMINIMAL_STACK_SIZE, NULL, 2, NULL );
    1f46:	e1 2c       	mov	r14, r1
    1f48:	f1 2c       	mov	r15, r1
    1f4a:	02 e0       	ldi	r16, 0x02	; 2
    1f4c:	20 e0       	ldi	r18, 0x00	; 0
    1f4e:	30 e0       	ldi	r19, 0x00	; 0
    1f50:	40 ec       	ldi	r20, 0xC0	; 192
    1f52:	50 e0       	ldi	r21, 0x00	; 0
    1f54:	6e e2       	ldi	r22, 0x2E	; 46
    1f56:	72 e0       	ldi	r23, 0x02	; 2
    1f58:	8b e5       	ldi	r24, 0x5B	; 91
    1f5a:	9f e0       	ldi	r25, 0x0F	; 15
    1f5c:	6b d9       	rcall	.-3370   	; 0x1234 <xTaskCreate>

	xTaskCreate(task2, (const portCHAR *)"Task2", configMINIMAL_STACK_SIZE, NULL, 1, NULL );
    1f5e:	01 e0       	ldi	r16, 0x01	; 1
    1f60:	20 e0       	ldi	r18, 0x00	; 0
    1f62:	30 e0       	ldi	r19, 0x00	; 0
    1f64:	40 ec       	ldi	r20, 0xC0	; 192
    1f66:	50 e0       	ldi	r21, 0x00	; 0
    1f68:	6a e4       	ldi	r22, 0x4A	; 74
    1f6a:	72 e0       	ldi	r23, 0x02	; 2
    1f6c:	8e e6       	ldi	r24, 0x6E	; 110
    1f6e:	9f e0       	ldi	r25, 0x0F	; 15
    1f70:	61 d9       	rcall	.-3390   	; 0x1234 <xTaskCreate>
}
    1f72:	0f 91       	pop	r16
    1f74:	ff 90       	pop	r15
    1f76:	ef 90       	pop	r14
    1f78:	08 95       	ret

00001f7a <initialiseSystem>:
}

/*-----------------------------------------------------------*/
void initialiseSystem()
{
	DDRA |= _BV(DDA6) | _BV(DDA5); 
    1f7a:	81 b1       	in	r24, 0x01	; 1
    1f7c:	80 66       	ori	r24, 0x60	; 96
    1f7e:	81 b9       	out	0x01, r24	; 1
	HtSensor = humptempsensor_create();
    1f80:	73 df       	rcall	.-282    	; 0x1e68 <humptempsensor_create>
    1f82:	90 93 d2 12 	sts	0x12D2, r25	; 0x8012d2 <HtSensor+0x1>
    1f86:	80 93 d1 12 	sts	0x12D1, r24	; 0x8012d1 <HtSensor>
	rc = inithtdrivers(HtSensor);
    1f8a:	75 df       	rcall	.-278    	; 0x1e76 <inithtdrivers>
    1f8c:	80 93 d0 12 	sts	0x12D0, r24	; 0x8012d0 <rc>
    1f90:	0e 94 69 02 	call	0x4d2	; 0x4d2 <trace_init>
	//rc = hih8120Meassure();
	// Initialise the trace-driver to be used together with the R2R-Network
	trace_init();
	// Make it possible to use stdio on COM port 0 (USB) on Arduino board - Setting 57600,8,N,1
	stdioCreate(ser_USART0);
    1f94:	80 e0       	ldi	r24, 0x00	; 0
    1f96:	e9 d3       	rcall	.+2002   	; 0x276a <stdioCreate>
	// Let's create some tasks
	create_tasks_and_semaphores();
    1f98:	d3 cf       	rjmp	.-90     	; 0x1f40 <create_tasks_and_semaphores>
    1f9a:	08 95       	ret

00001f9c <main>:
    1f9c:	ee df       	rcall	.-36     	; 0x1f7a <initialiseSystem>

/*-----------------------------------------------------------*/
int main(void)
{
	initialiseSystem();
	printf("Program Started!!\n");
    1f9e:	80 e5       	ldi	r24, 0x50	; 80
    1fa0:	92 e0       	ldi	r25, 0x02	; 2
    1fa2:	0e 94 fb 18 	call	0x31f6	; 0x31f6 <puts>
	vTaskStartScheduler();
    1fa6:	54 da       	rcall	.-2904   	; 0x1450 <vTaskStartScheduler>
	
}
    1fa8:	80 e0       	ldi	r24, 0x00	; 0
    1faa:	90 e0       	ldi	r25, 0x00	; 0
    1fac:	08 95       	ret

00001fae <_hihTwiCallback>:
    1fae:	65 30       	cpi	r22, 0x05	; 5
    1fb0:	f1 f4       	brne	.+60     	; 0x1fee <_hihTwiCallback+0x40>
    1fb2:	fa 01       	movw	r30, r20
    1fb4:	80 81       	ld	r24, Z
    1fb6:	8f 73       	andi	r24, 0x3F	; 63
    1fb8:	90 e0       	ldi	r25, 0x00	; 0
    1fba:	98 2f       	mov	r25, r24
    1fbc:	88 27       	eor	r24, r24
    1fbe:	21 81       	ldd	r18, Z+1	; 0x01
    1fc0:	82 2b       	or	r24, r18
    1fc2:	90 93 09 02 	sts	0x0209, r25	; 0x800209 <_hum+0x1>
    1fc6:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <_hum>
    1fca:	82 81       	ldd	r24, Z+2	; 0x02
    1fcc:	f0 e4       	ldi	r31, 0x40	; 64
    1fce:	8f 9f       	mul	r24, r31
    1fd0:	c0 01       	movw	r24, r0
    1fd2:	11 24       	eor	r1, r1
    1fd4:	fa 01       	movw	r30, r20
    1fd6:	23 81       	ldd	r18, Z+3	; 0x03
    1fd8:	26 95       	lsr	r18
    1fda:	26 95       	lsr	r18
    1fdc:	82 2b       	or	r24, r18
    1fde:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <_temp+0x1>
    1fe2:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <_temp>
    1fe6:	81 e0       	ldi	r24, 0x01	; 1
    1fe8:	80 93 b4 12 	sts	0x12B4, r24	; 0x8012b4 <_measuringIsReady>
    1fec:	08 95       	ret
    1fee:	64 30       	cpi	r22, 0x04	; 4
    1ff0:	51 f0       	breq	.+20     	; 0x2006 <_hihTwiCallback+0x58>
    1ff2:	80 e0       	ldi	r24, 0x00	; 0
    1ff4:	90 e4       	ldi	r25, 0x40	; 64
    1ff6:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <_temp+0x1>
    1ffa:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <_temp>
    1ffe:	90 93 09 02 	sts	0x0209, r25	; 0x800209 <_hum+0x1>
    2002:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <_hum>
    2006:	08 95       	ret

00002008 <hih8120Create>:
    2008:	0f 93       	push	r16
    200a:	1f 93       	push	r17
    200c:	07 ed       	ldi	r16, 0xD7	; 215
    200e:	1f e0       	ldi	r17, 0x0F	; 15
    2010:	20 e0       	ldi	r18, 0x00	; 0
    2012:	34 e2       	ldi	r19, 0x24	; 36
    2014:	44 ef       	ldi	r20, 0xF4	; 244
    2016:	50 e0       	ldi	r21, 0x00	; 0
    2018:	60 e0       	ldi	r22, 0x00	; 0
    201a:	87 e2       	ldi	r24, 0x27	; 39
    201c:	e0 d3       	rcall	.+1984   	; 0x27de <twiCreate>
    201e:	90 93 b6 12 	sts	0x12B6, r25	; 0x8012b6 <_hih8120Handler+0x1>
    2022:	80 93 b5 12 	sts	0x12B5, r24	; 0x8012b5 <_hih8120Handler>
    2026:	21 e0       	ldi	r18, 0x01	; 1
    2028:	89 2b       	or	r24, r25
    202a:	09 f0       	breq	.+2      	; 0x202e <hih8120Create+0x26>
    202c:	20 e0       	ldi	r18, 0x00	; 0
    202e:	82 2f       	mov	r24, r18
    2030:	1f 91       	pop	r17
    2032:	0f 91       	pop	r16
    2034:	08 95       	ret

00002036 <hih8120Wakeup>:
    2036:	80 91 b5 12 	lds	r24, 0x12B5	; 0x8012b5 <_hih8120Handler>
    203a:	90 91 b6 12 	lds	r25, 0x12B6	; 0x8012b6 <_hih8120Handler+0x1>
    203e:	00 97       	sbiw	r24, 0x00	; 0
    2040:	51 f0       	breq	.+20     	; 0x2056 <hih8120Wakeup+0x20>
    2042:	40 e0       	ldi	r20, 0x00	; 0
    2044:	60 e0       	ldi	r22, 0x00	; 0
    2046:	70 e0       	ldi	r23, 0x00	; 0
    2048:	1b d4       	rcall	.+2102   	; 0x2880 <twiTransmit>
    204a:	84 30       	cpi	r24, 0x04	; 4
    204c:	31 f4       	brne	.+12     	; 0x205a <hih8120Wakeup+0x24>
    204e:	10 92 b4 12 	sts	0x12B4, r1	; 0x8012b4 <_measuringIsReady>
    2052:	80 e0       	ldi	r24, 0x00	; 0
    2054:	08 95       	ret
    2056:	82 e0       	ldi	r24, 0x02	; 2
    2058:	08 95       	ret
    205a:	83 e0       	ldi	r24, 0x03	; 3
    205c:	08 95       	ret

0000205e <hih8120Meassure>:
    205e:	80 91 b5 12 	lds	r24, 0x12B5	; 0x8012b5 <_hih8120Handler>
    2062:	90 91 b6 12 	lds	r25, 0x12B6	; 0x8012b6 <_hih8120Handler+0x1>
    2066:	00 97       	sbiw	r24, 0x00	; 0
    2068:	31 f0       	breq	.+12     	; 0x2076 <hih8120Meassure+0x18>
    206a:	64 e0       	ldi	r22, 0x04	; 4
    206c:	55 d4       	rcall	.+2218   	; 0x2918 <twiReceive>
    206e:	85 30       	cpi	r24, 0x05	; 5
    2070:	21 f0       	breq	.+8      	; 0x207a <hih8120Meassure+0x1c>
    2072:	83 e0       	ldi	r24, 0x03	; 3
    2074:	08 95       	ret
    2076:	82 e0       	ldi	r24, 0x02	; 2
    2078:	08 95       	ret
    207a:	80 e0       	ldi	r24, 0x00	; 0
    207c:	08 95       	ret

0000207e <hih8120GetHumidity>:
    207e:	60 91 08 02 	lds	r22, 0x0208	; 0x800208 <_hum>
    2082:	70 91 09 02 	lds	r23, 0x0209	; 0x800209 <_hum+0x1>
    2086:	80 e0       	ldi	r24, 0x00	; 0
    2088:	90 e0       	ldi	r25, 0x00	; 0
    208a:	4b d6       	rcall	.+3222   	; 0x2d22 <__floatunsisf>
    208c:	20 e0       	ldi	r18, 0x00	; 0
    208e:	30 e0       	ldi	r19, 0x00	; 0
    2090:	48 ec       	ldi	r20, 0xC8	; 200
    2092:	52 e4       	ldi	r21, 0x42	; 66
    2094:	d4 d6       	rcall	.+3496   	; 0x2e3e <__mulsf3>
    2096:	20 e0       	ldi	r18, 0x00	; 0
    2098:	38 ef       	ldi	r19, 0xF8	; 248
    209a:	4f e7       	ldi	r20, 0x7F	; 127
    209c:	56 e4       	ldi	r21, 0x46	; 70
    209e:	ad c5       	rjmp	.+2906   	; 0x2bfa <__divsf3>
    20a0:	08 95       	ret

000020a2 <hih8120GetTemperature>:
    20a2:	60 91 06 02 	lds	r22, 0x0206	; 0x800206 <_temp>
    20a6:	70 91 07 02 	lds	r23, 0x0207	; 0x800207 <_temp+0x1>
    20aa:	80 e0       	ldi	r24, 0x00	; 0
    20ac:	90 e0       	ldi	r25, 0x00	; 0
    20ae:	39 d6       	rcall	.+3186   	; 0x2d22 <__floatunsisf>
    20b0:	20 e0       	ldi	r18, 0x00	; 0
    20b2:	30 e0       	ldi	r19, 0x00	; 0
    20b4:	45 e2       	ldi	r20, 0x25	; 37
    20b6:	53 e4       	ldi	r21, 0x43	; 67
    20b8:	c2 d6       	rcall	.+3460   	; 0x2e3e <__mulsf3>
    20ba:	20 e0       	ldi	r18, 0x00	; 0
    20bc:	38 ef       	ldi	r19, 0xF8	; 248
    20be:	4f e7       	ldi	r20, 0x7F	; 127
    20c0:	56 e4       	ldi	r21, 0x46	; 70
    20c2:	9b d5       	rcall	.+2870   	; 0x2bfa <__divsf3>
    20c4:	20 e0       	ldi	r18, 0x00	; 0
    20c6:	30 e0       	ldi	r19, 0x00	; 0
    20c8:	40 e2       	ldi	r20, 0x20	; 32
    20ca:	52 e4       	ldi	r21, 0x42	; 66
    20cc:	31 c5       	rjmp	.+2658   	; 0x2b30 <__subsf3>
    20ce:	08 95       	ret

000020d0 <serial_new_instance>:
    20d0:	2f 92       	push	r2
    20d2:	3f 92       	push	r3
    20d4:	4f 92       	push	r4
    20d6:	5f 92       	push	r5
    20d8:	6f 92       	push	r6
    20da:	7f 92       	push	r7
    20dc:	8f 92       	push	r8
    20de:	9f 92       	push	r9
    20e0:	af 92       	push	r10
    20e2:	cf 92       	push	r12
    20e4:	ef 92       	push	r14
    20e6:	ff 92       	push	r15
    20e8:	0f 93       	push	r16
    20ea:	1f 93       	push	r17
    20ec:	cf 93       	push	r28
    20ee:	df 93       	push	r29
    20f0:	cd b7       	in	r28, 0x3d	; 61
    20f2:	de b7       	in	r29, 0x3e	; 62
    20f4:	f8 2e       	mov	r15, r24
    20f6:	2a 01       	movw	r4, r20
    20f8:	3b 01       	movw	r6, r22
    20fa:	88 e0       	ldi	r24, 0x08	; 8
    20fc:	90 e0       	ldi	r25, 0x00	; 0
    20fe:	46 d7       	rcall	.+3724   	; 0x2f8c <malloc>
    2100:	8c 01       	movw	r16, r24
    2102:	8f 2d       	mov	r24, r15
    2104:	90 e0       	ldi	r25, 0x00	; 0
    2106:	88 0f       	add	r24, r24
    2108:	99 1f       	adc	r25, r25
    210a:	fc 01       	movw	r30, r24
    210c:	e9 54       	subi	r30, 0x49	; 73
    210e:	fd 4e       	sbci	r31, 0xED	; 237
    2110:	11 83       	std	Z+1, r17	; 0x01
    2112:	00 83       	st	Z, r16
    2114:	fc 01       	movw	r30, r24
    2116:	e6 5f       	subi	r30, 0xF6	; 246
    2118:	fd 4f       	sbci	r31, 0xFD	; 253
    211a:	80 81       	ld	r24, Z
    211c:	91 81       	ldd	r25, Z+1	; 0x01
    211e:	d8 01       	movw	r26, r16
    2120:	8d 93       	st	X+, r24
    2122:	9c 93       	st	X, r25
    2124:	6c 2d       	mov	r22, r12
    2126:	70 e0       	ldi	r23, 0x00	; 0
    2128:	84 e0       	ldi	r24, 0x04	; 4
    212a:	90 e0       	ldi	r25, 0x00	; 0
    212c:	15 d7       	rcall	.+3626   	; 0x2f58 <calloc>
    212e:	1c 01       	movw	r2, r24
    2130:	61 e0       	ldi	r22, 0x01	; 1
    2132:	70 e0       	ldi	r23, 0x00	; 0
    2134:	86 e0       	ldi	r24, 0x06	; 6
    2136:	90 e0       	ldi	r25, 0x00	; 0
    2138:	0f d7       	rcall	.+3614   	; 0x2f58 <calloc>
    213a:	7c 01       	movw	r14, r24
    213c:	4c 2d       	mov	r20, r12
    213e:	b1 01       	movw	r22, r2
    2140:	db d4       	rcall	.+2486   	; 0x2af8 <fifo_init>
    2142:	f8 01       	movw	r30, r16
    2144:	f5 82       	std	Z+5, r15	; 0x05
    2146:	e4 82       	std	Z+4, r14	; 0x04
    2148:	6a 2d       	mov	r22, r10
    214a:	70 e0       	ldi	r23, 0x00	; 0
    214c:	84 e0       	ldi	r24, 0x04	; 4
    214e:	90 e0       	ldi	r25, 0x00	; 0
    2150:	03 d7       	rcall	.+3590   	; 0x2f58 <calloc>
    2152:	1c 01       	movw	r2, r24
    2154:	61 e0       	ldi	r22, 0x01	; 1
    2156:	70 e0       	ldi	r23, 0x00	; 0
    2158:	86 e0       	ldi	r24, 0x06	; 6
    215a:	90 e0       	ldi	r25, 0x00	; 0
    215c:	fd d6       	rcall	.+3578   	; 0x2f58 <calloc>
    215e:	7c 01       	movw	r14, r24
    2160:	4a 2d       	mov	r20, r10
    2162:	b1 01       	movw	r22, r2
    2164:	c9 d4       	rcall	.+2450   	; 0x2af8 <fifo_init>
    2166:	d8 01       	movw	r26, r16
    2168:	13 96       	adiw	r26, 0x03	; 3
    216a:	fc 92       	st	X, r15
    216c:	ee 92       	st	-X, r14
    216e:	12 97       	sbiw	r26, 0x02	; 2
    2170:	17 96       	adiw	r26, 0x07	; 7
    2172:	9c 92       	st	X, r9
    2174:	8e 92       	st	-X, r8
    2176:	16 97       	sbiw	r26, 0x06	; 6
    2178:	ff b6       	in	r15, 0x3f	; 63
    217a:	f8 94       	cli
    217c:	ed 91       	ld	r30, X+
    217e:	fc 91       	ld	r31, X
    2180:	11 97       	sbiw	r26, 0x01	; 1
    2182:	36 97       	sbiw	r30, 0x06	; 6
    2184:	80 81       	ld	r24, Z
    2186:	82 60       	ori	r24, 0x02	; 2
    2188:	80 83       	st	Z, r24
    218a:	8d 90       	ld	r8, X+
    218c:	9c 90       	ld	r9, X
    218e:	c3 01       	movw	r24, r6
    2190:	b2 01       	movw	r22, r4
    2192:	c7 d5       	rcall	.+2958   	; 0x2d22 <__floatunsisf>
    2194:	20 e0       	ldi	r18, 0x00	; 0
    2196:	30 e0       	ldi	r19, 0x00	; 0
    2198:	40 e0       	ldi	r20, 0x00	; 0
    219a:	51 e4       	ldi	r21, 0x41	; 65
    219c:	50 d6       	rcall	.+3232   	; 0x2e3e <__mulsf3>
    219e:	9b 01       	movw	r18, r22
    21a0:	ac 01       	movw	r20, r24
    21a2:	60 e0       	ldi	r22, 0x00	; 0
    21a4:	74 e2       	ldi	r23, 0x24	; 36
    21a6:	84 e7       	ldi	r24, 0x74	; 116
    21a8:	9b e4       	ldi	r25, 0x4B	; 75
    21aa:	27 d5       	rcall	.+2638   	; 0x2bfa <__divsf3>
    21ac:	20 e0       	ldi	r18, 0x00	; 0
    21ae:	30 e0       	ldi	r19, 0x00	; 0
    21b0:	40 e8       	ldi	r20, 0x80	; 128
    21b2:	5f e3       	ldi	r21, 0x3F	; 63
    21b4:	bd d4       	rcall	.+2426   	; 0x2b30 <__subsf3>
    21b6:	89 d5       	rcall	.+2834   	; 0x2cca <__fixunssfsi>
    21b8:	f4 01       	movw	r30, r8
    21ba:	32 97       	sbiw	r30, 0x02	; 2
    21bc:	60 83       	st	Z, r22
    21be:	d8 01       	movw	r26, r16
    21c0:	ed 91       	ld	r30, X+
    21c2:	fc 91       	ld	r31, X
    21c4:	11 97       	sbiw	r26, 0x01	; 1
    21c6:	35 97       	sbiw	r30, 0x05	; 5
    21c8:	88 e9       	ldi	r24, 0x98	; 152
    21ca:	80 83       	st	Z, r24
    21cc:	ed 91       	ld	r30, X+
    21ce:	fc 91       	ld	r31, X
    21d0:	34 97       	sbiw	r30, 0x04	; 4
    21d2:	86 e0       	ldi	r24, 0x06	; 6
    21d4:	80 83       	st	Z, r24
    21d6:	ff be       	out	0x3f, r15	; 63
    21d8:	c8 01       	movw	r24, r16
    21da:	df 91       	pop	r29
    21dc:	cf 91       	pop	r28
    21de:	1f 91       	pop	r17
    21e0:	0f 91       	pop	r16
    21e2:	ff 90       	pop	r15
    21e4:	ef 90       	pop	r14
    21e6:	cf 90       	pop	r12
    21e8:	af 90       	pop	r10
    21ea:	9f 90       	pop	r9
    21ec:	8f 90       	pop	r8
    21ee:	7f 90       	pop	r7
    21f0:	6f 90       	pop	r6
    21f2:	5f 90       	pop	r5
    21f4:	4f 90       	pop	r4
    21f6:	3f 90       	pop	r3
    21f8:	2f 90       	pop	r2
    21fa:	08 95       	ret

000021fc <serial_send_byte>:
    21fc:	cf 93       	push	r28
    21fe:	df 93       	push	r29
    2200:	ec 01       	movw	r28, r24
    2202:	ea 81       	ldd	r30, Y+2	; 0x02
    2204:	fb 81       	ldd	r31, Y+3	; 0x03
    2206:	93 81       	ldd	r25, Z+3	; 0x03
    2208:	82 81       	ldd	r24, Z+2	; 0x02
    220a:	25 81       	ldd	r18, Z+5	; 0x05
    220c:	98 1b       	sub	r25, r24
    220e:	92 23       	and	r25, r18
    2210:	84 81       	ldd	r24, Z+4	; 0x04
    2212:	98 17       	cp	r25, r24
    2214:	a1 f0       	breq	.+40     	; 0x223e <__stack+0x3f>
    2216:	93 81       	ldd	r25, Z+3	; 0x03
    2218:	26 95       	lsr	r18
    221a:	29 23       	and	r18, r25
    221c:	a0 81       	ld	r26, Z
    221e:	b1 81       	ldd	r27, Z+1	; 0x01
    2220:	a2 0f       	add	r26, r18
    2222:	b1 1d       	adc	r27, r1
    2224:	6c 93       	st	X, r22
    2226:	9f 5f       	subi	r25, 0xFF	; 255
    2228:	25 81       	ldd	r18, Z+5	; 0x05
    222a:	92 23       	and	r25, r18
    222c:	93 83       	std	Z+3, r25	; 0x03
    222e:	e8 81       	ld	r30, Y
    2230:	f9 81       	ldd	r31, Y+1	; 0x01
    2232:	35 97       	sbiw	r30, 0x05	; 5
    2234:	80 81       	ld	r24, Z
    2236:	80 62       	ori	r24, 0x20	; 32
    2238:	80 83       	st	Z, r24
    223a:	80 e0       	ldi	r24, 0x00	; 0
    223c:	01 c0       	rjmp	.+2      	; 0x2240 <__stack+0x41>
    223e:	82 e0       	ldi	r24, 0x02	; 2
    2240:	df 91       	pop	r29
    2242:	cf 91       	pop	r28
    2244:	08 95       	ret

00002246 <serial_get_byte>:
    2246:	dc 01       	movw	r26, r24
    2248:	14 96       	adiw	r26, 0x04	; 4
    224a:	ed 91       	ld	r30, X+
    224c:	fc 91       	ld	r31, X
    224e:	15 97       	sbiw	r26, 0x05	; 5
    2250:	93 81       	ldd	r25, Z+3	; 0x03
    2252:	82 81       	ldd	r24, Z+2	; 0x02
    2254:	98 17       	cp	r25, r24
    2256:	89 f0       	breq	.+34     	; 0x227a <serial_get_byte+0x34>
    2258:	92 81       	ldd	r25, Z+2	; 0x02
    225a:	85 81       	ldd	r24, Z+5	; 0x05
    225c:	86 95       	lsr	r24
    225e:	89 23       	and	r24, r25
    2260:	a0 81       	ld	r26, Z
    2262:	b1 81       	ldd	r27, Z+1	; 0x01
    2264:	a8 0f       	add	r26, r24
    2266:	b1 1d       	adc	r27, r1
    2268:	8c 91       	ld	r24, X
    226a:	db 01       	movw	r26, r22
    226c:	8c 93       	st	X, r24
    226e:	9f 5f       	subi	r25, 0xFF	; 255
    2270:	85 81       	ldd	r24, Z+5	; 0x05
    2272:	98 23       	and	r25, r24
    2274:	92 83       	std	Z+2, r25	; 0x02
    2276:	80 e0       	ldi	r24, 0x00	; 0
    2278:	08 95       	ret
    227a:	83 e0       	ldi	r24, 0x03	; 3
    227c:	08 95       	ret

0000227e <__vector_25>:
    227e:	1f 92       	push	r1
    2280:	0f 92       	push	r0
    2282:	0f b6       	in	r0, 0x3f	; 63
    2284:	0f 92       	push	r0
    2286:	11 24       	eor	r1, r1
    2288:	0b b6       	in	r0, 0x3b	; 59
    228a:	0f 92       	push	r0
    228c:	2f 93       	push	r18
    228e:	3f 93       	push	r19
    2290:	4f 93       	push	r20
    2292:	5f 93       	push	r21
    2294:	6f 93       	push	r22
    2296:	7f 93       	push	r23
    2298:	8f 93       	push	r24
    229a:	9f 93       	push	r25
    229c:	af 93       	push	r26
    229e:	bf 93       	push	r27
    22a0:	cf 93       	push	r28
    22a2:	df 93       	push	r29
    22a4:	ef 93       	push	r30
    22a6:	ff 93       	push	r31
    22a8:	a0 91 b7 12 	lds	r26, 0x12B7	; 0x8012b7 <_ser_handle>
    22ac:	b0 91 b8 12 	lds	r27, 0x12B8	; 0x8012b8 <_ser_handle+0x1>
    22b0:	10 97       	sbiw	r26, 0x00	; 0
    22b2:	11 f1       	breq	.+68     	; 0x22f8 <__vector_25+0x7a>
    22b4:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
    22b8:	14 96       	adiw	r26, 0x04	; 4
    22ba:	ed 91       	ld	r30, X+
    22bc:	fc 91       	ld	r31, X
    22be:	15 97       	sbiw	r26, 0x05	; 5
    22c0:	93 81       	ldd	r25, Z+3	; 0x03
    22c2:	82 81       	ldd	r24, Z+2	; 0x02
    22c4:	25 81       	ldd	r18, Z+5	; 0x05
    22c6:	98 1b       	sub	r25, r24
    22c8:	92 23       	and	r25, r18
    22ca:	84 81       	ldd	r24, Z+4	; 0x04
    22cc:	98 17       	cp	r25, r24
    22ce:	61 f0       	breq	.+24     	; 0x22e8 <__vector_25+0x6a>
    22d0:	83 81       	ldd	r24, Z+3	; 0x03
    22d2:	26 95       	lsr	r18
    22d4:	28 23       	and	r18, r24
    22d6:	c0 81       	ld	r28, Z
    22d8:	d1 81       	ldd	r29, Z+1	; 0x01
    22da:	c2 0f       	add	r28, r18
    22dc:	d1 1d       	adc	r29, r1
    22de:	68 83       	st	Y, r22
    22e0:	8f 5f       	subi	r24, 0xFF	; 255
    22e2:	95 81       	ldd	r25, Z+5	; 0x05
    22e4:	89 23       	and	r24, r25
    22e6:	83 83       	std	Z+3, r24	; 0x03
    22e8:	16 96       	adiw	r26, 0x06	; 6
    22ea:	ed 91       	ld	r30, X+
    22ec:	fc 91       	ld	r31, X
    22ee:	17 97       	sbiw	r26, 0x07	; 7
    22f0:	30 97       	sbiw	r30, 0x00	; 0
    22f2:	11 f0       	breq	.+4      	; 0x22f8 <__vector_25+0x7a>
    22f4:	cd 01       	movw	r24, r26
    22f6:	19 95       	eicall
    22f8:	ff 91       	pop	r31
    22fa:	ef 91       	pop	r30
    22fc:	df 91       	pop	r29
    22fe:	cf 91       	pop	r28
    2300:	bf 91       	pop	r27
    2302:	af 91       	pop	r26
    2304:	9f 91       	pop	r25
    2306:	8f 91       	pop	r24
    2308:	7f 91       	pop	r23
    230a:	6f 91       	pop	r22
    230c:	5f 91       	pop	r21
    230e:	4f 91       	pop	r20
    2310:	3f 91       	pop	r19
    2312:	2f 91       	pop	r18
    2314:	0f 90       	pop	r0
    2316:	0b be       	out	0x3b, r0	; 59
    2318:	0f 90       	pop	r0
    231a:	0f be       	out	0x3f, r0	; 63
    231c:	0f 90       	pop	r0
    231e:	1f 90       	pop	r1
    2320:	18 95       	reti

00002322 <__vector_26>:
    2322:	1f 92       	push	r1
    2324:	0f 92       	push	r0
    2326:	0f b6       	in	r0, 0x3f	; 63
    2328:	0f 92       	push	r0
    232a:	11 24       	eor	r1, r1
    232c:	0b b6       	in	r0, 0x3b	; 59
    232e:	0f 92       	push	r0
    2330:	2f 93       	push	r18
    2332:	8f 93       	push	r24
    2334:	9f 93       	push	r25
    2336:	af 93       	push	r26
    2338:	bf 93       	push	r27
    233a:	ef 93       	push	r30
    233c:	ff 93       	push	r31
    233e:	e0 91 b7 12 	lds	r30, 0x12B7	; 0x8012b7 <_ser_handle>
    2342:	f0 91 b8 12 	lds	r31, 0x12B8	; 0x8012b8 <_ser_handle+0x1>
    2346:	30 97       	sbiw	r30, 0x00	; 0
    2348:	b9 f0       	breq	.+46     	; 0x2378 <__vector_26+0x56>
    234a:	02 80       	ldd	r0, Z+2	; 0x02
    234c:	f3 81       	ldd	r31, Z+3	; 0x03
    234e:	e0 2d       	mov	r30, r0
    2350:	93 81       	ldd	r25, Z+3	; 0x03
    2352:	82 81       	ldd	r24, Z+2	; 0x02
    2354:	98 17       	cp	r25, r24
    2356:	b1 f0       	breq	.+44     	; 0x2384 <__vector_26+0x62>
    2358:	92 81       	ldd	r25, Z+2	; 0x02
    235a:	85 81       	ldd	r24, Z+5	; 0x05
    235c:	28 2f       	mov	r18, r24
    235e:	26 95       	lsr	r18
    2360:	29 23       	and	r18, r25
    2362:	a0 81       	ld	r26, Z
    2364:	b1 81       	ldd	r27, Z+1	; 0x01
    2366:	a2 0f       	add	r26, r18
    2368:	b1 1d       	adc	r27, r1
    236a:	2c 91       	ld	r18, X
    236c:	9f 5f       	subi	r25, 0xFF	; 255
    236e:	89 23       	and	r24, r25
    2370:	82 83       	std	Z+2, r24	; 0x02
    2372:	20 93 c6 00 	sts	0x00C6, r18	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
    2376:	0b c0       	rjmp	.+22     	; 0x238e <__vector_26+0x6c>
    2378:	e1 ec       	ldi	r30, 0xC1	; 193
    237a:	f0 e0       	ldi	r31, 0x00	; 0
    237c:	80 81       	ld	r24, Z
    237e:	8f 7d       	andi	r24, 0xDF	; 223
    2380:	80 83       	st	Z, r24
    2382:	05 c0       	rjmp	.+10     	; 0x238e <__vector_26+0x6c>
    2384:	e1 ec       	ldi	r30, 0xC1	; 193
    2386:	f0 e0       	ldi	r31, 0x00	; 0
    2388:	80 81       	ld	r24, Z
    238a:	8f 7d       	andi	r24, 0xDF	; 223
    238c:	80 83       	st	Z, r24
    238e:	ff 91       	pop	r31
    2390:	ef 91       	pop	r30
    2392:	bf 91       	pop	r27
    2394:	af 91       	pop	r26
    2396:	9f 91       	pop	r25
    2398:	8f 91       	pop	r24
    239a:	2f 91       	pop	r18
    239c:	0f 90       	pop	r0
    239e:	0b be       	out	0x3b, r0	; 59
    23a0:	0f 90       	pop	r0
    23a2:	0f be       	out	0x3f, r0	; 63
    23a4:	0f 90       	pop	r0
    23a6:	1f 90       	pop	r1
    23a8:	18 95       	reti

000023aa <__vector_36>:
    23aa:	1f 92       	push	r1
    23ac:	0f 92       	push	r0
    23ae:	0f b6       	in	r0, 0x3f	; 63
    23b0:	0f 92       	push	r0
    23b2:	11 24       	eor	r1, r1
    23b4:	0b b6       	in	r0, 0x3b	; 59
    23b6:	0f 92       	push	r0
    23b8:	2f 93       	push	r18
    23ba:	3f 93       	push	r19
    23bc:	4f 93       	push	r20
    23be:	5f 93       	push	r21
    23c0:	6f 93       	push	r22
    23c2:	7f 93       	push	r23
    23c4:	8f 93       	push	r24
    23c6:	9f 93       	push	r25
    23c8:	af 93       	push	r26
    23ca:	bf 93       	push	r27
    23cc:	cf 93       	push	r28
    23ce:	df 93       	push	r29
    23d0:	ef 93       	push	r30
    23d2:	ff 93       	push	r31
    23d4:	a0 91 b9 12 	lds	r26, 0x12B9	; 0x8012b9 <_ser_handle+0x2>
    23d8:	b0 91 ba 12 	lds	r27, 0x12BA	; 0x8012ba <_ser_handle+0x3>
    23dc:	10 97       	sbiw	r26, 0x00	; 0
    23de:	11 f1       	breq	.+68     	; 0x2424 <__vector_36+0x7a>
    23e0:	60 91 ce 00 	lds	r22, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
    23e4:	14 96       	adiw	r26, 0x04	; 4
    23e6:	ed 91       	ld	r30, X+
    23e8:	fc 91       	ld	r31, X
    23ea:	15 97       	sbiw	r26, 0x05	; 5
    23ec:	93 81       	ldd	r25, Z+3	; 0x03
    23ee:	82 81       	ldd	r24, Z+2	; 0x02
    23f0:	25 81       	ldd	r18, Z+5	; 0x05
    23f2:	98 1b       	sub	r25, r24
    23f4:	92 23       	and	r25, r18
    23f6:	84 81       	ldd	r24, Z+4	; 0x04
    23f8:	98 17       	cp	r25, r24
    23fa:	61 f0       	breq	.+24     	; 0x2414 <__vector_36+0x6a>
    23fc:	83 81       	ldd	r24, Z+3	; 0x03
    23fe:	26 95       	lsr	r18
    2400:	28 23       	and	r18, r24
    2402:	c0 81       	ld	r28, Z
    2404:	d1 81       	ldd	r29, Z+1	; 0x01
    2406:	c2 0f       	add	r28, r18
    2408:	d1 1d       	adc	r29, r1
    240a:	68 83       	st	Y, r22
    240c:	8f 5f       	subi	r24, 0xFF	; 255
    240e:	95 81       	ldd	r25, Z+5	; 0x05
    2410:	89 23       	and	r24, r25
    2412:	83 83       	std	Z+3, r24	; 0x03
    2414:	16 96       	adiw	r26, 0x06	; 6
    2416:	ed 91       	ld	r30, X+
    2418:	fc 91       	ld	r31, X
    241a:	17 97       	sbiw	r26, 0x07	; 7
    241c:	30 97       	sbiw	r30, 0x00	; 0
    241e:	11 f0       	breq	.+4      	; 0x2424 <__vector_36+0x7a>
    2420:	cd 01       	movw	r24, r26
    2422:	19 95       	eicall
    2424:	ff 91       	pop	r31
    2426:	ef 91       	pop	r30
    2428:	df 91       	pop	r29
    242a:	cf 91       	pop	r28
    242c:	bf 91       	pop	r27
    242e:	af 91       	pop	r26
    2430:	9f 91       	pop	r25
    2432:	8f 91       	pop	r24
    2434:	7f 91       	pop	r23
    2436:	6f 91       	pop	r22
    2438:	5f 91       	pop	r21
    243a:	4f 91       	pop	r20
    243c:	3f 91       	pop	r19
    243e:	2f 91       	pop	r18
    2440:	0f 90       	pop	r0
    2442:	0b be       	out	0x3b, r0	; 59
    2444:	0f 90       	pop	r0
    2446:	0f be       	out	0x3f, r0	; 63
    2448:	0f 90       	pop	r0
    244a:	1f 90       	pop	r1
    244c:	18 95       	reti

0000244e <__vector_37>:
    244e:	1f 92       	push	r1
    2450:	0f 92       	push	r0
    2452:	0f b6       	in	r0, 0x3f	; 63
    2454:	0f 92       	push	r0
    2456:	11 24       	eor	r1, r1
    2458:	0b b6       	in	r0, 0x3b	; 59
    245a:	0f 92       	push	r0
    245c:	2f 93       	push	r18
    245e:	8f 93       	push	r24
    2460:	9f 93       	push	r25
    2462:	af 93       	push	r26
    2464:	bf 93       	push	r27
    2466:	ef 93       	push	r30
    2468:	ff 93       	push	r31
    246a:	e0 91 b9 12 	lds	r30, 0x12B9	; 0x8012b9 <_ser_handle+0x2>
    246e:	f0 91 ba 12 	lds	r31, 0x12BA	; 0x8012ba <_ser_handle+0x3>
    2472:	30 97       	sbiw	r30, 0x00	; 0
    2474:	b9 f0       	breq	.+46     	; 0x24a4 <__vector_37+0x56>
    2476:	02 80       	ldd	r0, Z+2	; 0x02
    2478:	f3 81       	ldd	r31, Z+3	; 0x03
    247a:	e0 2d       	mov	r30, r0
    247c:	93 81       	ldd	r25, Z+3	; 0x03
    247e:	82 81       	ldd	r24, Z+2	; 0x02
    2480:	98 17       	cp	r25, r24
    2482:	b1 f0       	breq	.+44     	; 0x24b0 <__vector_37+0x62>
    2484:	92 81       	ldd	r25, Z+2	; 0x02
    2486:	85 81       	ldd	r24, Z+5	; 0x05
    2488:	28 2f       	mov	r18, r24
    248a:	26 95       	lsr	r18
    248c:	29 23       	and	r18, r25
    248e:	a0 81       	ld	r26, Z
    2490:	b1 81       	ldd	r27, Z+1	; 0x01
    2492:	a2 0f       	add	r26, r18
    2494:	b1 1d       	adc	r27, r1
    2496:	2c 91       	ld	r18, X
    2498:	9f 5f       	subi	r25, 0xFF	; 255
    249a:	89 23       	and	r24, r25
    249c:	82 83       	std	Z+2, r24	; 0x02
    249e:	20 93 ce 00 	sts	0x00CE, r18	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
    24a2:	0b c0       	rjmp	.+22     	; 0x24ba <__vector_37+0x6c>
    24a4:	e9 ec       	ldi	r30, 0xC9	; 201
    24a6:	f0 e0       	ldi	r31, 0x00	; 0
    24a8:	80 81       	ld	r24, Z
    24aa:	8f 7d       	andi	r24, 0xDF	; 223
    24ac:	80 83       	st	Z, r24
    24ae:	05 c0       	rjmp	.+10     	; 0x24ba <__vector_37+0x6c>
    24b0:	e9 ec       	ldi	r30, 0xC9	; 201
    24b2:	f0 e0       	ldi	r31, 0x00	; 0
    24b4:	80 81       	ld	r24, Z
    24b6:	8f 7d       	andi	r24, 0xDF	; 223
    24b8:	80 83       	st	Z, r24
    24ba:	ff 91       	pop	r31
    24bc:	ef 91       	pop	r30
    24be:	bf 91       	pop	r27
    24c0:	af 91       	pop	r26
    24c2:	9f 91       	pop	r25
    24c4:	8f 91       	pop	r24
    24c6:	2f 91       	pop	r18
    24c8:	0f 90       	pop	r0
    24ca:	0b be       	out	0x3b, r0	; 59
    24cc:	0f 90       	pop	r0
    24ce:	0f be       	out	0x3f, r0	; 63
    24d0:	0f 90       	pop	r0
    24d2:	1f 90       	pop	r1
    24d4:	18 95       	reti

000024d6 <__vector_51>:
    24d6:	1f 92       	push	r1
    24d8:	0f 92       	push	r0
    24da:	0f b6       	in	r0, 0x3f	; 63
    24dc:	0f 92       	push	r0
    24de:	11 24       	eor	r1, r1
    24e0:	0b b6       	in	r0, 0x3b	; 59
    24e2:	0f 92       	push	r0
    24e4:	2f 93       	push	r18
    24e6:	3f 93       	push	r19
    24e8:	4f 93       	push	r20
    24ea:	5f 93       	push	r21
    24ec:	6f 93       	push	r22
    24ee:	7f 93       	push	r23
    24f0:	8f 93       	push	r24
    24f2:	9f 93       	push	r25
    24f4:	af 93       	push	r26
    24f6:	bf 93       	push	r27
    24f8:	cf 93       	push	r28
    24fa:	df 93       	push	r29
    24fc:	ef 93       	push	r30
    24fe:	ff 93       	push	r31
    2500:	a0 91 bb 12 	lds	r26, 0x12BB	; 0x8012bb <_ser_handle+0x4>
    2504:	b0 91 bc 12 	lds	r27, 0x12BC	; 0x8012bc <_ser_handle+0x5>
    2508:	10 97       	sbiw	r26, 0x00	; 0
    250a:	11 f1       	breq	.+68     	; 0x2550 <__vector_51+0x7a>
    250c:	60 91 d6 00 	lds	r22, 0x00D6	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
    2510:	14 96       	adiw	r26, 0x04	; 4
    2512:	ed 91       	ld	r30, X+
    2514:	fc 91       	ld	r31, X
    2516:	15 97       	sbiw	r26, 0x05	; 5
    2518:	93 81       	ldd	r25, Z+3	; 0x03
    251a:	82 81       	ldd	r24, Z+2	; 0x02
    251c:	25 81       	ldd	r18, Z+5	; 0x05
    251e:	98 1b       	sub	r25, r24
    2520:	92 23       	and	r25, r18
    2522:	84 81       	ldd	r24, Z+4	; 0x04
    2524:	98 17       	cp	r25, r24
    2526:	61 f0       	breq	.+24     	; 0x2540 <__vector_51+0x6a>
    2528:	83 81       	ldd	r24, Z+3	; 0x03
    252a:	26 95       	lsr	r18
    252c:	28 23       	and	r18, r24
    252e:	c0 81       	ld	r28, Z
    2530:	d1 81       	ldd	r29, Z+1	; 0x01
    2532:	c2 0f       	add	r28, r18
    2534:	d1 1d       	adc	r29, r1
    2536:	68 83       	st	Y, r22
    2538:	8f 5f       	subi	r24, 0xFF	; 255
    253a:	95 81       	ldd	r25, Z+5	; 0x05
    253c:	89 23       	and	r24, r25
    253e:	83 83       	std	Z+3, r24	; 0x03
    2540:	16 96       	adiw	r26, 0x06	; 6
    2542:	ed 91       	ld	r30, X+
    2544:	fc 91       	ld	r31, X
    2546:	17 97       	sbiw	r26, 0x07	; 7
    2548:	30 97       	sbiw	r30, 0x00	; 0
    254a:	11 f0       	breq	.+4      	; 0x2550 <__vector_51+0x7a>
    254c:	cd 01       	movw	r24, r26
    254e:	19 95       	eicall
    2550:	ff 91       	pop	r31
    2552:	ef 91       	pop	r30
    2554:	df 91       	pop	r29
    2556:	cf 91       	pop	r28
    2558:	bf 91       	pop	r27
    255a:	af 91       	pop	r26
    255c:	9f 91       	pop	r25
    255e:	8f 91       	pop	r24
    2560:	7f 91       	pop	r23
    2562:	6f 91       	pop	r22
    2564:	5f 91       	pop	r21
    2566:	4f 91       	pop	r20
    2568:	3f 91       	pop	r19
    256a:	2f 91       	pop	r18
    256c:	0f 90       	pop	r0
    256e:	0b be       	out	0x3b, r0	; 59
    2570:	0f 90       	pop	r0
    2572:	0f be       	out	0x3f, r0	; 63
    2574:	0f 90       	pop	r0
    2576:	1f 90       	pop	r1
    2578:	18 95       	reti

0000257a <__vector_52>:
    257a:	1f 92       	push	r1
    257c:	0f 92       	push	r0
    257e:	0f b6       	in	r0, 0x3f	; 63
    2580:	0f 92       	push	r0
    2582:	11 24       	eor	r1, r1
    2584:	0b b6       	in	r0, 0x3b	; 59
    2586:	0f 92       	push	r0
    2588:	2f 93       	push	r18
    258a:	8f 93       	push	r24
    258c:	9f 93       	push	r25
    258e:	af 93       	push	r26
    2590:	bf 93       	push	r27
    2592:	ef 93       	push	r30
    2594:	ff 93       	push	r31
    2596:	e0 91 bb 12 	lds	r30, 0x12BB	; 0x8012bb <_ser_handle+0x4>
    259a:	f0 91 bc 12 	lds	r31, 0x12BC	; 0x8012bc <_ser_handle+0x5>
    259e:	30 97       	sbiw	r30, 0x00	; 0
    25a0:	b9 f0       	breq	.+46     	; 0x25d0 <__vector_52+0x56>
    25a2:	02 80       	ldd	r0, Z+2	; 0x02
    25a4:	f3 81       	ldd	r31, Z+3	; 0x03
    25a6:	e0 2d       	mov	r30, r0
    25a8:	93 81       	ldd	r25, Z+3	; 0x03
    25aa:	82 81       	ldd	r24, Z+2	; 0x02
    25ac:	98 17       	cp	r25, r24
    25ae:	b1 f0       	breq	.+44     	; 0x25dc <__vector_52+0x62>
    25b0:	92 81       	ldd	r25, Z+2	; 0x02
    25b2:	85 81       	ldd	r24, Z+5	; 0x05
    25b4:	28 2f       	mov	r18, r24
    25b6:	26 95       	lsr	r18
    25b8:	29 23       	and	r18, r25
    25ba:	a0 81       	ld	r26, Z
    25bc:	b1 81       	ldd	r27, Z+1	; 0x01
    25be:	a2 0f       	add	r26, r18
    25c0:	b1 1d       	adc	r27, r1
    25c2:	2c 91       	ld	r18, X
    25c4:	9f 5f       	subi	r25, 0xFF	; 255
    25c6:	89 23       	and	r24, r25
    25c8:	82 83       	std	Z+2, r24	; 0x02
    25ca:	20 93 d6 00 	sts	0x00D6, r18	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
    25ce:	0b c0       	rjmp	.+22     	; 0x25e6 <__vector_52+0x6c>
    25d0:	e1 ed       	ldi	r30, 0xD1	; 209
    25d2:	f0 e0       	ldi	r31, 0x00	; 0
    25d4:	80 81       	ld	r24, Z
    25d6:	8f 7d       	andi	r24, 0xDF	; 223
    25d8:	80 83       	st	Z, r24
    25da:	05 c0       	rjmp	.+10     	; 0x25e6 <__vector_52+0x6c>
    25dc:	e1 ed       	ldi	r30, 0xD1	; 209
    25de:	f0 e0       	ldi	r31, 0x00	; 0
    25e0:	80 81       	ld	r24, Z
    25e2:	8f 7d       	andi	r24, 0xDF	; 223
    25e4:	80 83       	st	Z, r24
    25e6:	ff 91       	pop	r31
    25e8:	ef 91       	pop	r30
    25ea:	bf 91       	pop	r27
    25ec:	af 91       	pop	r26
    25ee:	9f 91       	pop	r25
    25f0:	8f 91       	pop	r24
    25f2:	2f 91       	pop	r18
    25f4:	0f 90       	pop	r0
    25f6:	0b be       	out	0x3b, r0	; 59
    25f8:	0f 90       	pop	r0
    25fa:	0f be       	out	0x3f, r0	; 63
    25fc:	0f 90       	pop	r0
    25fe:	1f 90       	pop	r1
    2600:	18 95       	reti

00002602 <__vector_54>:
    2602:	1f 92       	push	r1
    2604:	0f 92       	push	r0
    2606:	0f b6       	in	r0, 0x3f	; 63
    2608:	0f 92       	push	r0
    260a:	11 24       	eor	r1, r1
    260c:	0b b6       	in	r0, 0x3b	; 59
    260e:	0f 92       	push	r0
    2610:	2f 93       	push	r18
    2612:	3f 93       	push	r19
    2614:	4f 93       	push	r20
    2616:	5f 93       	push	r21
    2618:	6f 93       	push	r22
    261a:	7f 93       	push	r23
    261c:	8f 93       	push	r24
    261e:	9f 93       	push	r25
    2620:	af 93       	push	r26
    2622:	bf 93       	push	r27
    2624:	cf 93       	push	r28
    2626:	df 93       	push	r29
    2628:	ef 93       	push	r30
    262a:	ff 93       	push	r31
    262c:	a0 91 bd 12 	lds	r26, 0x12BD	; 0x8012bd <_ser_handle+0x6>
    2630:	b0 91 be 12 	lds	r27, 0x12BE	; 0x8012be <_ser_handle+0x7>
    2634:	10 97       	sbiw	r26, 0x00	; 0
    2636:	11 f1       	breq	.+68     	; 0x267c <__vector_54+0x7a>
    2638:	60 91 36 01 	lds	r22, 0x0136	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
    263c:	14 96       	adiw	r26, 0x04	; 4
    263e:	ed 91       	ld	r30, X+
    2640:	fc 91       	ld	r31, X
    2642:	15 97       	sbiw	r26, 0x05	; 5
    2644:	93 81       	ldd	r25, Z+3	; 0x03
    2646:	82 81       	ldd	r24, Z+2	; 0x02
    2648:	25 81       	ldd	r18, Z+5	; 0x05
    264a:	98 1b       	sub	r25, r24
    264c:	92 23       	and	r25, r18
    264e:	84 81       	ldd	r24, Z+4	; 0x04
    2650:	98 17       	cp	r25, r24
    2652:	61 f0       	breq	.+24     	; 0x266c <__vector_54+0x6a>
    2654:	83 81       	ldd	r24, Z+3	; 0x03
    2656:	26 95       	lsr	r18
    2658:	28 23       	and	r18, r24
    265a:	c0 81       	ld	r28, Z
    265c:	d1 81       	ldd	r29, Z+1	; 0x01
    265e:	c2 0f       	add	r28, r18
    2660:	d1 1d       	adc	r29, r1
    2662:	68 83       	st	Y, r22
    2664:	8f 5f       	subi	r24, 0xFF	; 255
    2666:	95 81       	ldd	r25, Z+5	; 0x05
    2668:	89 23       	and	r24, r25
    266a:	83 83       	std	Z+3, r24	; 0x03
    266c:	16 96       	adiw	r26, 0x06	; 6
    266e:	ed 91       	ld	r30, X+
    2670:	fc 91       	ld	r31, X
    2672:	17 97       	sbiw	r26, 0x07	; 7
    2674:	30 97       	sbiw	r30, 0x00	; 0
    2676:	11 f0       	breq	.+4      	; 0x267c <__vector_54+0x7a>
    2678:	cd 01       	movw	r24, r26
    267a:	19 95       	eicall
    267c:	ff 91       	pop	r31
    267e:	ef 91       	pop	r30
    2680:	df 91       	pop	r29
    2682:	cf 91       	pop	r28
    2684:	bf 91       	pop	r27
    2686:	af 91       	pop	r26
    2688:	9f 91       	pop	r25
    268a:	8f 91       	pop	r24
    268c:	7f 91       	pop	r23
    268e:	6f 91       	pop	r22
    2690:	5f 91       	pop	r21
    2692:	4f 91       	pop	r20
    2694:	3f 91       	pop	r19
    2696:	2f 91       	pop	r18
    2698:	0f 90       	pop	r0
    269a:	0b be       	out	0x3b, r0	; 59
    269c:	0f 90       	pop	r0
    269e:	0f be       	out	0x3f, r0	; 63
    26a0:	0f 90       	pop	r0
    26a2:	1f 90       	pop	r1
    26a4:	18 95       	reti

000026a6 <__vector_55>:
    26a6:	1f 92       	push	r1
    26a8:	0f 92       	push	r0
    26aa:	0f b6       	in	r0, 0x3f	; 63
    26ac:	0f 92       	push	r0
    26ae:	11 24       	eor	r1, r1
    26b0:	0b b6       	in	r0, 0x3b	; 59
    26b2:	0f 92       	push	r0
    26b4:	2f 93       	push	r18
    26b6:	8f 93       	push	r24
    26b8:	9f 93       	push	r25
    26ba:	af 93       	push	r26
    26bc:	bf 93       	push	r27
    26be:	ef 93       	push	r30
    26c0:	ff 93       	push	r31
    26c2:	e0 91 bd 12 	lds	r30, 0x12BD	; 0x8012bd <_ser_handle+0x6>
    26c6:	f0 91 be 12 	lds	r31, 0x12BE	; 0x8012be <_ser_handle+0x7>
    26ca:	30 97       	sbiw	r30, 0x00	; 0
    26cc:	b9 f0       	breq	.+46     	; 0x26fc <__vector_55+0x56>
    26ce:	02 80       	ldd	r0, Z+2	; 0x02
    26d0:	f3 81       	ldd	r31, Z+3	; 0x03
    26d2:	e0 2d       	mov	r30, r0
    26d4:	93 81       	ldd	r25, Z+3	; 0x03
    26d6:	82 81       	ldd	r24, Z+2	; 0x02
    26d8:	98 17       	cp	r25, r24
    26da:	b1 f0       	breq	.+44     	; 0x2708 <__vector_55+0x62>
    26dc:	92 81       	ldd	r25, Z+2	; 0x02
    26de:	85 81       	ldd	r24, Z+5	; 0x05
    26e0:	28 2f       	mov	r18, r24
    26e2:	26 95       	lsr	r18
    26e4:	29 23       	and	r18, r25
    26e6:	a0 81       	ld	r26, Z
    26e8:	b1 81       	ldd	r27, Z+1	; 0x01
    26ea:	a2 0f       	add	r26, r18
    26ec:	b1 1d       	adc	r27, r1
    26ee:	2c 91       	ld	r18, X
    26f0:	9f 5f       	subi	r25, 0xFF	; 255
    26f2:	89 23       	and	r24, r25
    26f4:	82 83       	std	Z+2, r24	; 0x02
    26f6:	20 93 36 01 	sts	0x0136, r18	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
    26fa:	0b c0       	rjmp	.+22     	; 0x2712 <__vector_55+0x6c>
    26fc:	e1 e3       	ldi	r30, 0x31	; 49
    26fe:	f1 e0       	ldi	r31, 0x01	; 1
    2700:	80 81       	ld	r24, Z
    2702:	8f 7d       	andi	r24, 0xDF	; 223
    2704:	80 83       	st	Z, r24
    2706:	05 c0       	rjmp	.+10     	; 0x2712 <__vector_55+0x6c>
    2708:	e1 e3       	ldi	r30, 0x31	; 49
    270a:	f1 e0       	ldi	r31, 0x01	; 1
    270c:	80 81       	ld	r24, Z
    270e:	8f 7d       	andi	r24, 0xDF	; 223
    2710:	80 83       	st	Z, r24
    2712:	ff 91       	pop	r31
    2714:	ef 91       	pop	r30
    2716:	bf 91       	pop	r27
    2718:	af 91       	pop	r26
    271a:	9f 91       	pop	r25
    271c:	8f 91       	pop	r24
    271e:	2f 91       	pop	r18
    2720:	0f 90       	pop	r0
    2722:	0b be       	out	0x3b, r0	; 59
    2724:	0f 90       	pop	r0
    2726:	0f be       	out	0x3f, r0	; 63
    2728:	0f 90       	pop	r0
    272a:	1f 90       	pop	r1
    272c:	18 95       	reti

0000272e <usart_getchar>:
    272e:	cf 93       	push	r28
    2730:	df 93       	push	r29
    2732:	1f 92       	push	r1
    2734:	cd b7       	in	r28, 0x3d	; 61
    2736:	de b7       	in	r29, 0x3e	; 62
    2738:	be 01       	movw	r22, r28
    273a:	6f 5f       	subi	r22, 0xFF	; 255
    273c:	7f 4f       	sbci	r23, 0xFF	; 255
    273e:	80 91 bf 12 	lds	r24, 0x12BF	; 0x8012bf <_com_serial_instance>
    2742:	90 91 c0 12 	lds	r25, 0x12C0	; 0x8012c0 <_com_serial_instance+0x1>
    2746:	7f dd       	rcall	.-1282   	; 0x2246 <serial_get_byte>
    2748:	81 11       	cpse	r24, r1
    274a:	f6 cf       	rjmp	.-20     	; 0x2738 <usart_getchar+0xa>
    274c:	89 81       	ldd	r24, Y+1	; 0x01
    274e:	90 e0       	ldi	r25, 0x00	; 0
    2750:	0f 90       	pop	r0
    2752:	df 91       	pop	r29
    2754:	cf 91       	pop	r28
    2756:	08 95       	ret

00002758 <usart_putchar>:
    2758:	68 2f       	mov	r22, r24
    275a:	80 91 bf 12 	lds	r24, 0x12BF	; 0x8012bf <_com_serial_instance>
    275e:	90 91 c0 12 	lds	r25, 0x12C0	; 0x8012c0 <_com_serial_instance+0x1>
    2762:	4c dd       	rcall	.-1384   	; 0x21fc <serial_send_byte>
    2764:	80 e0       	ldi	r24, 0x00	; 0
    2766:	90 e0       	ldi	r25, 0x00	; 0
    2768:	08 95       	ret

0000276a <stdioCreate>:
    276a:	8f 92       	push	r8
    276c:	9f 92       	push	r9
    276e:	af 92       	push	r10
    2770:	cf 92       	push	r12
    2772:	ef 92       	push	r14
    2774:	0f 93       	push	r16
    2776:	81 2c       	mov	r8, r1
    2778:	91 2c       	mov	r9, r1
    277a:	68 94       	set
    277c:	aa 24       	eor	r10, r10
    277e:	a7 f8       	bld	r10, 7
    2780:	68 94       	set
    2782:	cc 24       	eor	r12, r12
    2784:	c7 f8       	bld	r12, 7
    2786:	e1 2c       	mov	r14, r1
    2788:	00 e0       	ldi	r16, 0x00	; 0
    278a:	23 e0       	ldi	r18, 0x03	; 3
    278c:	40 e0       	ldi	r20, 0x00	; 0
    278e:	51 ee       	ldi	r21, 0xE1	; 225
    2790:	60 e0       	ldi	r22, 0x00	; 0
    2792:	70 e0       	ldi	r23, 0x00	; 0
    2794:	9d dc       	rcall	.-1734   	; 0x20d0 <serial_new_instance>
    2796:	90 93 c0 12 	sts	0x12C0, r25	; 0x8012c0 <_com_serial_instance+0x1>
    279a:	80 93 bf 12 	sts	0x12BF, r24	; 0x8012bf <_com_serial_instance>
    279e:	e7 ed       	ldi	r30, 0xD7	; 215
    27a0:	f2 e1       	ldi	r31, 0x12	; 18
    27a2:	82 e1       	ldi	r24, 0x12	; 18
    27a4:	92 e0       	ldi	r25, 0x02	; 2
    27a6:	91 83       	std	Z+1, r25	; 0x01
    27a8:	80 83       	st	Z, r24
    27aa:	93 83       	std	Z+3, r25	; 0x03
    27ac:	82 83       	std	Z+2, r24	; 0x02
    27ae:	0f 91       	pop	r16
    27b0:	ef 90       	pop	r14
    27b2:	cf 90       	pop	r12
    27b4:	af 90       	pop	r10
    27b6:	9f 90       	pop	r9
    27b8:	8f 90       	pop	r8
    27ba:	08 95       	ret

000027bc <_initTwiInterface>:
    27bc:	80 91 cf 12 	lds	r24, 0x12CF	; 0x8012cf <_twiIsInitiated>
    27c0:	81 11       	cpse	r24, r1
    27c2:	0c c0       	rjmp	.+24     	; 0x27dc <_initTwiInterface+0x20>
    27c4:	8c e0       	ldi	r24, 0x0C	; 12
    27c6:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
    27ca:	8f ef       	ldi	r24, 0xFF	; 255
    27cc:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    27d0:	84 e0       	ldi	r24, 0x04	; 4
    27d2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    27d6:	81 e0       	ldi	r24, 0x01	; 1
    27d8:	80 93 cf 12 	sts	0x12CF, r24	; 0x8012cf <_twiIsInitiated>
    27dc:	08 95       	ret

000027de <twiCreate>:
    27de:	af 92       	push	r10
    27e0:	bf 92       	push	r11
    27e2:	cf 92       	push	r12
    27e4:	df 92       	push	r13
    27e6:	ef 92       	push	r14
    27e8:	ff 92       	push	r15
    27ea:	0f 93       	push	r16
    27ec:	1f 93       	push	r17
    27ee:	cf 93       	push	r28
    27f0:	df 93       	push	r29
    27f2:	a8 2e       	mov	r10, r24
    27f4:	b6 2e       	mov	r11, r22
    27f6:	69 01       	movw	r12, r18
    27f8:	7a 01       	movw	r14, r20
    27fa:	84 e0       	ldi	r24, 0x04	; 4
    27fc:	90 e0       	ldi	r25, 0x00	; 0
    27fe:	c6 d3       	rcall	.+1932   	; 0x2f8c <malloc>
    2800:	ec 01       	movw	r28, r24
    2802:	89 2b       	or	r24, r25
    2804:	61 f1       	breq	.+88     	; 0x285e <twiCreate+0x80>
    2806:	a8 82       	st	Y, r10
    2808:	81 e0       	ldi	r24, 0x01	; 1
    280a:	b8 12       	cpse	r11, r24
    280c:	12 c0       	rjmp	.+36     	; 0x2832 <twiCreate+0x54>
    280e:	c7 01       	movw	r24, r14
    2810:	b6 01       	movw	r22, r12
    2812:	20 ea       	ldi	r18, 0xA0	; 160
    2814:	36 e8       	ldi	r19, 0x86	; 134
    2816:	41 e0       	ldi	r20, 0x01	; 1
    2818:	50 e0       	ldi	r21, 0x00	; 0
    281a:	74 d3       	rcall	.+1768   	; 0x2f04 <__udivmodsi4>
    281c:	da 01       	movw	r26, r20
    281e:	c9 01       	movw	r24, r18
    2820:	40 97       	sbiw	r24, 0x10	; 16
    2822:	a1 09       	sbc	r26, r1
    2824:	b1 09       	sbc	r27, r1
    2826:	b6 95       	lsr	r27
    2828:	a7 95       	ror	r26
    282a:	97 95       	ror	r25
    282c:	87 95       	ror	r24
    282e:	89 83       	std	Y+1, r24	; 0x01
    2830:	11 c0       	rjmp	.+34     	; 0x2854 <twiCreate+0x76>
    2832:	c7 01       	movw	r24, r14
    2834:	b6 01       	movw	r22, r12
    2836:	20 e8       	ldi	r18, 0x80	; 128
    2838:	3a e1       	ldi	r19, 0x1A	; 26
    283a:	46 e0       	ldi	r20, 0x06	; 6
    283c:	50 e0       	ldi	r21, 0x00	; 0
    283e:	62 d3       	rcall	.+1732   	; 0x2f04 <__udivmodsi4>
    2840:	da 01       	movw	r26, r20
    2842:	c9 01       	movw	r24, r18
    2844:	40 97       	sbiw	r24, 0x10	; 16
    2846:	a1 09       	sbc	r26, r1
    2848:	b1 09       	sbc	r27, r1
    284a:	b6 95       	lsr	r27
    284c:	a7 95       	ror	r26
    284e:	97 95       	ror	r25
    2850:	87 95       	ror	r24
    2852:	89 83       	std	Y+1, r24	; 0x01
    2854:	1b 83       	std	Y+3, r17	; 0x03
    2856:	0a 83       	std	Y+2, r16	; 0x02
    2858:	8c 2f       	mov	r24, r28
    285a:	9d 2f       	mov	r25, r29
    285c:	02 c0       	rjmp	.+4      	; 0x2862 <twiCreate+0x84>
    285e:	80 e0       	ldi	r24, 0x00	; 0
    2860:	90 e0       	ldi	r25, 0x00	; 0
    2862:	df 91       	pop	r29
    2864:	cf 91       	pop	r28
    2866:	1f 91       	pop	r17
    2868:	0f 91       	pop	r16
    286a:	ff 90       	pop	r15
    286c:	ef 90       	pop	r14
    286e:	df 90       	pop	r13
    2870:	cf 90       	pop	r12
    2872:	bf 90       	pop	r11
    2874:	af 90       	pop	r10
    2876:	08 95       	ret

00002878 <twiIsBusy>:
    2878:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    287c:	81 70       	andi	r24, 0x01	; 1
    287e:	08 95       	ret

00002880 <twiTransmit>:
    2880:	ff 92       	push	r15
    2882:	0f 93       	push	r16
    2884:	1f 93       	push	r17
    2886:	cf 93       	push	r28
    2888:	df 93       	push	r29
    288a:	00 97       	sbiw	r24, 0x00	; 0
    288c:	d1 f1       	breq	.+116    	; 0x2902 <twiTransmit+0x82>
    288e:	4a 30       	cpi	r20, 0x0A	; 10
    2890:	d0 f5       	brcc	.+116    	; 0x2906 <twiTransmit+0x86>
    2892:	f4 2e       	mov	r15, r20
    2894:	8b 01       	movw	r16, r22
    2896:	ec 01       	movw	r28, r24
    2898:	ef df       	rcall	.-34     	; 0x2878 <twiIsBusy>
    289a:	81 11       	cpse	r24, r1
    289c:	36 c0       	rjmp	.+108    	; 0x290a <twiTransmit+0x8a>
    289e:	80 91 c2 12 	lds	r24, 0x12C2	; 0x8012c2 <_twiCurrentHandler>
    28a2:	90 91 c3 12 	lds	r25, 0x12C3	; 0x8012c3 <_twiCurrentHandler+0x1>
    28a6:	c8 17       	cp	r28, r24
    28a8:	d9 07       	cpc	r29, r25
    28aa:	41 f0       	breq	.+16     	; 0x28bc <twiTransmit+0x3c>
    28ac:	87 df       	rcall	.-242    	; 0x27bc <_initTwiInterface>
    28ae:	89 81       	ldd	r24, Y+1	; 0x01
    28b0:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
    28b4:	d0 93 c3 12 	sts	0x12C3, r29	; 0x8012c3 <_twiCurrentHandler+0x1>
    28b8:	c0 93 c2 12 	sts	0x12C2, r28	; 0x8012c2 <_twiCurrentHandler>
    28bc:	81 e0       	ldi	r24, 0x01	; 1
    28be:	8f 0d       	add	r24, r15
    28c0:	80 93 c4 12 	sts	0x12C4, r24	; 0x8012c4 <_twiMessageLen>
    28c4:	88 81       	ld	r24, Y
    28c6:	88 0f       	add	r24, r24
    28c8:	80 93 c5 12 	sts	0x12C5, r24	; 0x8012c5 <_twiMessageBuffer>
    28cc:	ff 20       	and	r15, r15
    28ce:	89 f0       	breq	.+34     	; 0x28f2 <twiTransmit+0x72>
    28d0:	f8 01       	movw	r30, r16
    28d2:	a6 ec       	ldi	r26, 0xC6	; 198
    28d4:	b2 e1       	ldi	r27, 0x12	; 18
    28d6:	4f ef       	ldi	r20, 0xFF	; 255
    28d8:	4f 0d       	add	r20, r15
    28da:	64 2f       	mov	r22, r20
    28dc:	70 e0       	ldi	r23, 0x00	; 0
    28de:	cb 01       	movw	r24, r22
    28e0:	01 96       	adiw	r24, 0x01	; 1
    28e2:	b8 01       	movw	r22, r16
    28e4:	68 0f       	add	r22, r24
    28e6:	79 1f       	adc	r23, r25
    28e8:	81 91       	ld	r24, Z+
    28ea:	8d 93       	st	X+, r24
    28ec:	e6 17       	cp	r30, r22
    28ee:	f7 07       	cpc	r31, r23
    28f0:	d9 f7       	brne	.-10     	; 0x28e8 <twiTransmit+0x68>
    28f2:	88 ef       	ldi	r24, 0xF8	; 248
    28f4:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <_twiCurrentState>
    28f8:	85 ea       	ldi	r24, 0xA5	; 165
    28fa:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    28fe:	84 e0       	ldi	r24, 0x04	; 4
    2900:	05 c0       	rjmp	.+10     	; 0x290c <twiTransmit+0x8c>
    2902:	86 e0       	ldi	r24, 0x06	; 6
    2904:	03 c0       	rjmp	.+6      	; 0x290c <twiTransmit+0x8c>
    2906:	87 e0       	ldi	r24, 0x07	; 7
    2908:	01 c0       	rjmp	.+2      	; 0x290c <twiTransmit+0x8c>
    290a:	82 e0       	ldi	r24, 0x02	; 2
    290c:	df 91       	pop	r29
    290e:	cf 91       	pop	r28
    2910:	1f 91       	pop	r17
    2912:	0f 91       	pop	r16
    2914:	ff 90       	pop	r15
    2916:	08 95       	ret

00002918 <twiReceive>:
    2918:	1f 93       	push	r17
    291a:	cf 93       	push	r28
    291c:	df 93       	push	r29
    291e:	00 97       	sbiw	r24, 0x00	; 0
    2920:	29 f1       	breq	.+74     	; 0x296c <twiReceive+0x54>
    2922:	6b 30       	cpi	r22, 0x0B	; 11
    2924:	28 f5       	brcc	.+74     	; 0x2970 <twiReceive+0x58>
    2926:	16 2f       	mov	r17, r22
    2928:	ec 01       	movw	r28, r24
    292a:	a6 df       	rcall	.-180    	; 0x2878 <twiIsBusy>
    292c:	81 11       	cpse	r24, r1
    292e:	22 c0       	rjmp	.+68     	; 0x2974 <twiReceive+0x5c>
    2930:	80 91 c2 12 	lds	r24, 0x12C2	; 0x8012c2 <_twiCurrentHandler>
    2934:	90 91 c3 12 	lds	r25, 0x12C3	; 0x8012c3 <_twiCurrentHandler+0x1>
    2938:	c8 17       	cp	r28, r24
    293a:	d9 07       	cpc	r29, r25
    293c:	41 f0       	breq	.+16     	; 0x294e <twiReceive+0x36>
    293e:	3e df       	rcall	.-388    	; 0x27bc <_initTwiInterface>
    2940:	89 81       	ldd	r24, Y+1	; 0x01
    2942:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
    2946:	d0 93 c3 12 	sts	0x12C3, r29	; 0x8012c3 <_twiCurrentHandler+0x1>
    294a:	c0 93 c2 12 	sts	0x12C2, r28	; 0x8012c2 <_twiCurrentHandler>
    294e:	10 93 c4 12 	sts	0x12C4, r17	; 0x8012c4 <_twiMessageLen>
    2952:	88 81       	ld	r24, Y
    2954:	88 0f       	add	r24, r24
    2956:	81 60       	ori	r24, 0x01	; 1
    2958:	80 93 c5 12 	sts	0x12C5, r24	; 0x8012c5 <_twiMessageBuffer>
    295c:	88 ef       	ldi	r24, 0xF8	; 248
    295e:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <_twiCurrentState>
    2962:	85 ea       	ldi	r24, 0xA5	; 165
    2964:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    2968:	85 e0       	ldi	r24, 0x05	; 5
    296a:	05 c0       	rjmp	.+10     	; 0x2976 <twiReceive+0x5e>
    296c:	86 e0       	ldi	r24, 0x06	; 6
    296e:	03 c0       	rjmp	.+6      	; 0x2976 <twiReceive+0x5e>
    2970:	87 e0       	ldi	r24, 0x07	; 7
    2972:	01 c0       	rjmp	.+2      	; 0x2976 <twiReceive+0x5e>
    2974:	82 e0       	ldi	r24, 0x02	; 2
    2976:	df 91       	pop	r29
    2978:	cf 91       	pop	r28
    297a:	1f 91       	pop	r17
    297c:	08 95       	ret

0000297e <__vector_39>:
    297e:	1f 92       	push	r1
    2980:	0f 92       	push	r0
    2982:	0f b6       	in	r0, 0x3f	; 63
    2984:	0f 92       	push	r0
    2986:	11 24       	eor	r1, r1
    2988:	0b b6       	in	r0, 0x3b	; 59
    298a:	0f 92       	push	r0
    298c:	2f 93       	push	r18
    298e:	3f 93       	push	r19
    2990:	4f 93       	push	r20
    2992:	5f 93       	push	r21
    2994:	6f 93       	push	r22
    2996:	7f 93       	push	r23
    2998:	8f 93       	push	r24
    299a:	9f 93       	push	r25
    299c:	af 93       	push	r26
    299e:	bf 93       	push	r27
    29a0:	ef 93       	push	r30
    29a2:	ff 93       	push	r31
    29a4:	e0 91 b9 00 	lds	r30, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    29a8:	8e 2f       	mov	r24, r30
    29aa:	90 e0       	ldi	r25, 0x00	; 0
    29ac:	fc 01       	movw	r30, r24
    29ae:	38 97       	sbiw	r30, 0x08	; 8
    29b0:	e1 35       	cpi	r30, 0x51	; 81
    29b2:	f1 05       	cpc	r31, r1
    29b4:	08 f0       	brcs	.+2      	; 0x29b8 <__vector_39+0x3a>
    29b6:	75 c0       	rjmp	.+234    	; 0x2aa2 <__vector_39+0x124>
    29b8:	88 27       	eor	r24, r24
    29ba:	e4 58       	subi	r30, 0x84	; 132
    29bc:	ff 4f       	sbci	r31, 0xFF	; 255
    29be:	8f 4f       	sbci	r24, 0xFF	; 255
    29c0:	c3 c2       	rjmp	.+1414   	; 0x2f48 <__tablejump2__>
    29c2:	10 92 c1 12 	sts	0x12C1, r1	; 0x8012c1 <_index.1885>
    29c6:	e0 91 c1 12 	lds	r30, 0x12C1	; 0x8012c1 <_index.1885>
    29ca:	80 91 c4 12 	lds	r24, 0x12C4	; 0x8012c4 <_twiMessageLen>
    29ce:	e8 17       	cp	r30, r24
    29d0:	70 f4       	brcc	.+28     	; 0x29ee <__vector_39+0x70>
    29d2:	81 e0       	ldi	r24, 0x01	; 1
    29d4:	8e 0f       	add	r24, r30
    29d6:	80 93 c1 12 	sts	0x12C1, r24	; 0x8012c1 <_index.1885>
    29da:	f0 e0       	ldi	r31, 0x00	; 0
    29dc:	eb 53       	subi	r30, 0x3B	; 59
    29de:	fd 4e       	sbci	r31, 0xED	; 237
    29e0:	80 81       	ld	r24, Z
    29e2:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    29e6:	85 e8       	ldi	r24, 0x85	; 133
    29e8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    29ec:	72 c0       	rjmp	.+228    	; 0x2ad2 <__vector_39+0x154>
    29ee:	84 e9       	ldi	r24, 0x94	; 148
    29f0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    29f4:	80 91 c2 12 	lds	r24, 0x12C2	; 0x8012c2 <_twiCurrentHandler>
    29f8:	90 91 c3 12 	lds	r25, 0x12C3	; 0x8012c3 <_twiCurrentHandler+0x1>
    29fc:	dc 01       	movw	r26, r24
    29fe:	12 96       	adiw	r26, 0x02	; 2
    2a00:	ed 91       	ld	r30, X+
    2a02:	fc 91       	ld	r31, X
    2a04:	13 97       	sbiw	r26, 0x03	; 3
    2a06:	30 97       	sbiw	r30, 0x00	; 0
    2a08:	09 f4       	brne	.+2      	; 0x2a0c <__vector_39+0x8e>
    2a0a:	63 c0       	rjmp	.+198    	; 0x2ad2 <__vector_39+0x154>
    2a0c:	20 e0       	ldi	r18, 0x00	; 0
    2a0e:	40 e0       	ldi	r20, 0x00	; 0
    2a10:	50 e0       	ldi	r21, 0x00	; 0
    2a12:	64 e0       	ldi	r22, 0x04	; 4
    2a14:	19 95       	eicall
    2a16:	5d c0       	rjmp	.+186    	; 0x2ad2 <__vector_39+0x154>
    2a18:	e0 91 c1 12 	lds	r30, 0x12C1	; 0x8012c1 <_index.1885>
    2a1c:	81 e0       	ldi	r24, 0x01	; 1
    2a1e:	8e 0f       	add	r24, r30
    2a20:	80 93 c1 12 	sts	0x12C1, r24	; 0x8012c1 <_index.1885>
    2a24:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    2a28:	f0 e0       	ldi	r31, 0x00	; 0
    2a2a:	eb 53       	subi	r30, 0x3B	; 59
    2a2c:	fd 4e       	sbci	r31, 0xED	; 237
    2a2e:	80 83       	st	Z, r24
    2a30:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    2a34:	80 34       	cpi	r24, 0x40	; 64
    2a36:	11 f4       	brne	.+4      	; 0x2a3c <__vector_39+0xbe>
    2a38:	10 92 c1 12 	sts	0x12C1, r1	; 0x8012c1 <_index.1885>
    2a3c:	20 91 c1 12 	lds	r18, 0x12C1	; 0x8012c1 <_index.1885>
    2a40:	30 e0       	ldi	r19, 0x00	; 0
    2a42:	80 91 c4 12 	lds	r24, 0x12C4	; 0x8012c4 <_twiMessageLen>
    2a46:	90 e0       	ldi	r25, 0x00	; 0
    2a48:	01 97       	sbiw	r24, 0x01	; 1
    2a4a:	28 17       	cp	r18, r24
    2a4c:	39 07       	cpc	r19, r25
    2a4e:	24 f4       	brge	.+8      	; 0x2a58 <__vector_39+0xda>
    2a50:	85 ec       	ldi	r24, 0xC5	; 197
    2a52:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    2a56:	3d c0       	rjmp	.+122    	; 0x2ad2 <__vector_39+0x154>
    2a58:	85 e8       	ldi	r24, 0x85	; 133
    2a5a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    2a5e:	39 c0       	rjmp	.+114    	; 0x2ad2 <__vector_39+0x154>
    2a60:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    2a64:	e0 91 c1 12 	lds	r30, 0x12C1	; 0x8012c1 <_index.1885>
    2a68:	f0 e0       	ldi	r31, 0x00	; 0
    2a6a:	eb 53       	subi	r30, 0x3B	; 59
    2a6c:	fd 4e       	sbci	r31, 0xED	; 237
    2a6e:	80 83       	st	Z, r24
    2a70:	84 e9       	ldi	r24, 0x94	; 148
    2a72:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    2a76:	80 91 c2 12 	lds	r24, 0x12C2	; 0x8012c2 <_twiCurrentHandler>
    2a7a:	90 91 c3 12 	lds	r25, 0x12C3	; 0x8012c3 <_twiCurrentHandler+0x1>
    2a7e:	dc 01       	movw	r26, r24
    2a80:	12 96       	adiw	r26, 0x02	; 2
    2a82:	ed 91       	ld	r30, X+
    2a84:	fc 91       	ld	r31, X
    2a86:	13 97       	sbiw	r26, 0x03	; 3
    2a88:	30 97       	sbiw	r30, 0x00	; 0
    2a8a:	19 f1       	breq	.+70     	; 0x2ad2 <__vector_39+0x154>
    2a8c:	20 91 c4 12 	lds	r18, 0x12C4	; 0x8012c4 <_twiMessageLen>
    2a90:	45 ec       	ldi	r20, 0xC5	; 197
    2a92:	52 e1       	ldi	r21, 0x12	; 18
    2a94:	65 e0       	ldi	r22, 0x05	; 5
    2a96:	19 95       	eicall
    2a98:	1c c0       	rjmp	.+56     	; 0x2ad2 <__vector_39+0x154>
    2a9a:	85 ea       	ldi	r24, 0xA5	; 165
    2a9c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    2aa0:	18 c0       	rjmp	.+48     	; 0x2ad2 <__vector_39+0x154>
    2aa2:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    2aa6:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <_twiCurrentState>
    2aaa:	84 e0       	ldi	r24, 0x04	; 4
    2aac:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    2ab0:	80 91 c2 12 	lds	r24, 0x12C2	; 0x8012c2 <_twiCurrentHandler>
    2ab4:	90 91 c3 12 	lds	r25, 0x12C3	; 0x8012c3 <_twiCurrentHandler+0x1>
    2ab8:	dc 01       	movw	r26, r24
    2aba:	12 96       	adiw	r26, 0x02	; 2
    2abc:	ed 91       	ld	r30, X+
    2abe:	fc 91       	ld	r31, X
    2ac0:	13 97       	sbiw	r26, 0x03	; 3
    2ac2:	30 97       	sbiw	r30, 0x00	; 0
    2ac4:	31 f0       	breq	.+12     	; 0x2ad2 <__vector_39+0x154>
    2ac6:	20 e0       	ldi	r18, 0x00	; 0
    2ac8:	40 e0       	ldi	r20, 0x00	; 0
    2aca:	50 e0       	ldi	r21, 0x00	; 0
    2acc:	60 91 20 02 	lds	r22, 0x0220	; 0x800220 <_twiCurrentState>
    2ad0:	19 95       	eicall
    2ad2:	ff 91       	pop	r31
    2ad4:	ef 91       	pop	r30
    2ad6:	bf 91       	pop	r27
    2ad8:	af 91       	pop	r26
    2ada:	9f 91       	pop	r25
    2adc:	8f 91       	pop	r24
    2ade:	7f 91       	pop	r23
    2ae0:	6f 91       	pop	r22
    2ae2:	5f 91       	pop	r21
    2ae4:	4f 91       	pop	r20
    2ae6:	3f 91       	pop	r19
    2ae8:	2f 91       	pop	r18
    2aea:	0f 90       	pop	r0
    2aec:	0b be       	out	0x3b, r0	; 59
    2aee:	0f 90       	pop	r0
    2af0:	0f be       	out	0x3f, r0	; 63
    2af2:	0f 90       	pop	r0
    2af4:	1f 90       	pop	r1
    2af6:	18 95       	reti

00002af8 <fifo_init>:
    2af8:	fc 01       	movw	r30, r24
    2afa:	41 11       	cpse	r20, r1
    2afc:	01 c0       	rjmp	.+2      	; 0x2b00 <fifo_init+0x8>
    2afe:	67 d3       	rcall	.+1742   	; 0x31ce <abort>
    2b00:	84 2f       	mov	r24, r20
    2b02:	90 e0       	ldi	r25, 0x00	; 0
    2b04:	9c 01       	movw	r18, r24
    2b06:	21 50       	subi	r18, 0x01	; 1
    2b08:	31 09       	sbc	r19, r1
    2b0a:	82 23       	and	r24, r18
    2b0c:	93 23       	and	r25, r19
    2b0e:	89 2b       	or	r24, r25
    2b10:	09 f0       	breq	.+2      	; 0x2b14 <fifo_init+0x1c>
    2b12:	5d d3       	rcall	.+1722   	; 0x31ce <abort>
    2b14:	41 38       	cpi	r20, 0x81	; 129
    2b16:	08 f0       	brcs	.+2      	; 0x2b1a <fifo_init+0x22>
    2b18:	5a d3       	rcall	.+1716   	; 0x31ce <abort>
    2b1a:	12 82       	std	Z+2, r1	; 0x02
    2b1c:	13 82       	std	Z+3, r1	; 0x03
    2b1e:	44 83       	std	Z+4, r20	; 0x04
    2b20:	44 0f       	add	r20, r20
    2b22:	41 50       	subi	r20, 0x01	; 1
    2b24:	45 83       	std	Z+5, r20	; 0x05
    2b26:	71 83       	std	Z+1, r23	; 0x01
    2b28:	60 83       	st	Z, r22
    2b2a:	80 e0       	ldi	r24, 0x00	; 0
    2b2c:	90 e0       	ldi	r25, 0x00	; 0
    2b2e:	08 95       	ret

00002b30 <__subsf3>:
    2b30:	50 58       	subi	r21, 0x80	; 128

00002b32 <__addsf3>:
    2b32:	bb 27       	eor	r27, r27
    2b34:	aa 27       	eor	r26, r26
    2b36:	0e d0       	rcall	.+28     	; 0x2b54 <__addsf3x>
    2b38:	48 c1       	rjmp	.+656    	; 0x2dca <__fp_round>
    2b3a:	39 d1       	rcall	.+626    	; 0x2dae <__fp_pscA>
    2b3c:	30 f0       	brcs	.+12     	; 0x2b4a <__addsf3+0x18>
    2b3e:	3e d1       	rcall	.+636    	; 0x2dbc <__fp_pscB>
    2b40:	20 f0       	brcs	.+8      	; 0x2b4a <__addsf3+0x18>
    2b42:	31 f4       	brne	.+12     	; 0x2b50 <__addsf3+0x1e>
    2b44:	9f 3f       	cpi	r25, 0xFF	; 255
    2b46:	11 f4       	brne	.+4      	; 0x2b4c <__addsf3+0x1a>
    2b48:	1e f4       	brtc	.+6      	; 0x2b50 <__addsf3+0x1e>
    2b4a:	2e c1       	rjmp	.+604    	; 0x2da8 <__fp_nan>
    2b4c:	0e f4       	brtc	.+2      	; 0x2b50 <__addsf3+0x1e>
    2b4e:	e0 95       	com	r30
    2b50:	e7 fb       	bst	r30, 7
    2b52:	24 c1       	rjmp	.+584    	; 0x2d9c <__fp_inf>

00002b54 <__addsf3x>:
    2b54:	e9 2f       	mov	r30, r25
    2b56:	4a d1       	rcall	.+660    	; 0x2dec <__fp_split3>
    2b58:	80 f3       	brcs	.-32     	; 0x2b3a <__addsf3+0x8>
    2b5a:	ba 17       	cp	r27, r26
    2b5c:	62 07       	cpc	r22, r18
    2b5e:	73 07       	cpc	r23, r19
    2b60:	84 07       	cpc	r24, r20
    2b62:	95 07       	cpc	r25, r21
    2b64:	18 f0       	brcs	.+6      	; 0x2b6c <__addsf3x+0x18>
    2b66:	71 f4       	brne	.+28     	; 0x2b84 <__addsf3x+0x30>
    2b68:	9e f5       	brtc	.+102    	; 0x2bd0 <__addsf3x+0x7c>
    2b6a:	62 c1       	rjmp	.+708    	; 0x2e30 <__fp_zero>
    2b6c:	0e f4       	brtc	.+2      	; 0x2b70 <__addsf3x+0x1c>
    2b6e:	e0 95       	com	r30
    2b70:	0b 2e       	mov	r0, r27
    2b72:	ba 2f       	mov	r27, r26
    2b74:	a0 2d       	mov	r26, r0
    2b76:	0b 01       	movw	r0, r22
    2b78:	b9 01       	movw	r22, r18
    2b7a:	90 01       	movw	r18, r0
    2b7c:	0c 01       	movw	r0, r24
    2b7e:	ca 01       	movw	r24, r20
    2b80:	a0 01       	movw	r20, r0
    2b82:	11 24       	eor	r1, r1
    2b84:	ff 27       	eor	r31, r31
    2b86:	59 1b       	sub	r21, r25
    2b88:	99 f0       	breq	.+38     	; 0x2bb0 <__addsf3x+0x5c>
    2b8a:	59 3f       	cpi	r21, 0xF9	; 249
    2b8c:	50 f4       	brcc	.+20     	; 0x2ba2 <__addsf3x+0x4e>
    2b8e:	50 3e       	cpi	r21, 0xE0	; 224
    2b90:	68 f1       	brcs	.+90     	; 0x2bec <__addsf3x+0x98>
    2b92:	1a 16       	cp	r1, r26
    2b94:	f0 40       	sbci	r31, 0x00	; 0
    2b96:	a2 2f       	mov	r26, r18
    2b98:	23 2f       	mov	r18, r19
    2b9a:	34 2f       	mov	r19, r20
    2b9c:	44 27       	eor	r20, r20
    2b9e:	58 5f       	subi	r21, 0xF8	; 248
    2ba0:	f3 cf       	rjmp	.-26     	; 0x2b88 <__addsf3x+0x34>
    2ba2:	46 95       	lsr	r20
    2ba4:	37 95       	ror	r19
    2ba6:	27 95       	ror	r18
    2ba8:	a7 95       	ror	r26
    2baa:	f0 40       	sbci	r31, 0x00	; 0
    2bac:	53 95       	inc	r21
    2bae:	c9 f7       	brne	.-14     	; 0x2ba2 <__addsf3x+0x4e>
    2bb0:	7e f4       	brtc	.+30     	; 0x2bd0 <__addsf3x+0x7c>
    2bb2:	1f 16       	cp	r1, r31
    2bb4:	ba 0b       	sbc	r27, r26
    2bb6:	62 0b       	sbc	r22, r18
    2bb8:	73 0b       	sbc	r23, r19
    2bba:	84 0b       	sbc	r24, r20
    2bbc:	ba f0       	brmi	.+46     	; 0x2bec <__addsf3x+0x98>
    2bbe:	91 50       	subi	r25, 0x01	; 1
    2bc0:	a1 f0       	breq	.+40     	; 0x2bea <__addsf3x+0x96>
    2bc2:	ff 0f       	add	r31, r31
    2bc4:	bb 1f       	adc	r27, r27
    2bc6:	66 1f       	adc	r22, r22
    2bc8:	77 1f       	adc	r23, r23
    2bca:	88 1f       	adc	r24, r24
    2bcc:	c2 f7       	brpl	.-16     	; 0x2bbe <__addsf3x+0x6a>
    2bce:	0e c0       	rjmp	.+28     	; 0x2bec <__addsf3x+0x98>
    2bd0:	ba 0f       	add	r27, r26
    2bd2:	62 1f       	adc	r22, r18
    2bd4:	73 1f       	adc	r23, r19
    2bd6:	84 1f       	adc	r24, r20
    2bd8:	48 f4       	brcc	.+18     	; 0x2bec <__addsf3x+0x98>
    2bda:	87 95       	ror	r24
    2bdc:	77 95       	ror	r23
    2bde:	67 95       	ror	r22
    2be0:	b7 95       	ror	r27
    2be2:	f7 95       	ror	r31
    2be4:	9e 3f       	cpi	r25, 0xFE	; 254
    2be6:	08 f0       	brcs	.+2      	; 0x2bea <__addsf3x+0x96>
    2be8:	b3 cf       	rjmp	.-154    	; 0x2b50 <__addsf3+0x1e>
    2bea:	93 95       	inc	r25
    2bec:	88 0f       	add	r24, r24
    2bee:	08 f0       	brcs	.+2      	; 0x2bf2 <__addsf3x+0x9e>
    2bf0:	99 27       	eor	r25, r25
    2bf2:	ee 0f       	add	r30, r30
    2bf4:	97 95       	ror	r25
    2bf6:	87 95       	ror	r24
    2bf8:	08 95       	ret

00002bfa <__divsf3>:
    2bfa:	0c d0       	rcall	.+24     	; 0x2c14 <__divsf3x>
    2bfc:	e6 c0       	rjmp	.+460    	; 0x2dca <__fp_round>
    2bfe:	de d0       	rcall	.+444    	; 0x2dbc <__fp_pscB>
    2c00:	40 f0       	brcs	.+16     	; 0x2c12 <__divsf3+0x18>
    2c02:	d5 d0       	rcall	.+426    	; 0x2dae <__fp_pscA>
    2c04:	30 f0       	brcs	.+12     	; 0x2c12 <__divsf3+0x18>
    2c06:	21 f4       	brne	.+8      	; 0x2c10 <__divsf3+0x16>
    2c08:	5f 3f       	cpi	r21, 0xFF	; 255
    2c0a:	19 f0       	breq	.+6      	; 0x2c12 <__divsf3+0x18>
    2c0c:	c7 c0       	rjmp	.+398    	; 0x2d9c <__fp_inf>
    2c0e:	51 11       	cpse	r21, r1
    2c10:	10 c1       	rjmp	.+544    	; 0x2e32 <__fp_szero>
    2c12:	ca c0       	rjmp	.+404    	; 0x2da8 <__fp_nan>

00002c14 <__divsf3x>:
    2c14:	eb d0       	rcall	.+470    	; 0x2dec <__fp_split3>
    2c16:	98 f3       	brcs	.-26     	; 0x2bfe <__divsf3+0x4>

00002c18 <__divsf3_pse>:
    2c18:	99 23       	and	r25, r25
    2c1a:	c9 f3       	breq	.-14     	; 0x2c0e <__divsf3+0x14>
    2c1c:	55 23       	and	r21, r21
    2c1e:	b1 f3       	breq	.-20     	; 0x2c0c <__divsf3+0x12>
    2c20:	95 1b       	sub	r25, r21
    2c22:	55 0b       	sbc	r21, r21
    2c24:	bb 27       	eor	r27, r27
    2c26:	aa 27       	eor	r26, r26
    2c28:	62 17       	cp	r22, r18
    2c2a:	73 07       	cpc	r23, r19
    2c2c:	84 07       	cpc	r24, r20
    2c2e:	38 f0       	brcs	.+14     	; 0x2c3e <__divsf3_pse+0x26>
    2c30:	9f 5f       	subi	r25, 0xFF	; 255
    2c32:	5f 4f       	sbci	r21, 0xFF	; 255
    2c34:	22 0f       	add	r18, r18
    2c36:	33 1f       	adc	r19, r19
    2c38:	44 1f       	adc	r20, r20
    2c3a:	aa 1f       	adc	r26, r26
    2c3c:	a9 f3       	breq	.-22     	; 0x2c28 <__divsf3_pse+0x10>
    2c3e:	33 d0       	rcall	.+102    	; 0x2ca6 <__divsf3_pse+0x8e>
    2c40:	0e 2e       	mov	r0, r30
    2c42:	3a f0       	brmi	.+14     	; 0x2c52 <__divsf3_pse+0x3a>
    2c44:	e0 e8       	ldi	r30, 0x80	; 128
    2c46:	30 d0       	rcall	.+96     	; 0x2ca8 <__divsf3_pse+0x90>
    2c48:	91 50       	subi	r25, 0x01	; 1
    2c4a:	50 40       	sbci	r21, 0x00	; 0
    2c4c:	e6 95       	lsr	r30
    2c4e:	00 1c       	adc	r0, r0
    2c50:	ca f7       	brpl	.-14     	; 0x2c44 <__divsf3_pse+0x2c>
    2c52:	29 d0       	rcall	.+82     	; 0x2ca6 <__divsf3_pse+0x8e>
    2c54:	fe 2f       	mov	r31, r30
    2c56:	27 d0       	rcall	.+78     	; 0x2ca6 <__divsf3_pse+0x8e>
    2c58:	66 0f       	add	r22, r22
    2c5a:	77 1f       	adc	r23, r23
    2c5c:	88 1f       	adc	r24, r24
    2c5e:	bb 1f       	adc	r27, r27
    2c60:	26 17       	cp	r18, r22
    2c62:	37 07       	cpc	r19, r23
    2c64:	48 07       	cpc	r20, r24
    2c66:	ab 07       	cpc	r26, r27
    2c68:	b0 e8       	ldi	r27, 0x80	; 128
    2c6a:	09 f0       	breq	.+2      	; 0x2c6e <__divsf3_pse+0x56>
    2c6c:	bb 0b       	sbc	r27, r27
    2c6e:	80 2d       	mov	r24, r0
    2c70:	bf 01       	movw	r22, r30
    2c72:	ff 27       	eor	r31, r31
    2c74:	93 58       	subi	r25, 0x83	; 131
    2c76:	5f 4f       	sbci	r21, 0xFF	; 255
    2c78:	2a f0       	brmi	.+10     	; 0x2c84 <__divsf3_pse+0x6c>
    2c7a:	9e 3f       	cpi	r25, 0xFE	; 254
    2c7c:	51 05       	cpc	r21, r1
    2c7e:	68 f0       	brcs	.+26     	; 0x2c9a <__divsf3_pse+0x82>
    2c80:	8d c0       	rjmp	.+282    	; 0x2d9c <__fp_inf>
    2c82:	d7 c0       	rjmp	.+430    	; 0x2e32 <__fp_szero>
    2c84:	5f 3f       	cpi	r21, 0xFF	; 255
    2c86:	ec f3       	brlt	.-6      	; 0x2c82 <__divsf3_pse+0x6a>
    2c88:	98 3e       	cpi	r25, 0xE8	; 232
    2c8a:	dc f3       	brlt	.-10     	; 0x2c82 <__divsf3_pse+0x6a>
    2c8c:	86 95       	lsr	r24
    2c8e:	77 95       	ror	r23
    2c90:	67 95       	ror	r22
    2c92:	b7 95       	ror	r27
    2c94:	f7 95       	ror	r31
    2c96:	9f 5f       	subi	r25, 0xFF	; 255
    2c98:	c9 f7       	brne	.-14     	; 0x2c8c <__divsf3_pse+0x74>
    2c9a:	88 0f       	add	r24, r24
    2c9c:	91 1d       	adc	r25, r1
    2c9e:	96 95       	lsr	r25
    2ca0:	87 95       	ror	r24
    2ca2:	97 f9       	bld	r25, 7
    2ca4:	08 95       	ret
    2ca6:	e1 e0       	ldi	r30, 0x01	; 1
    2ca8:	66 0f       	add	r22, r22
    2caa:	77 1f       	adc	r23, r23
    2cac:	88 1f       	adc	r24, r24
    2cae:	bb 1f       	adc	r27, r27
    2cb0:	62 17       	cp	r22, r18
    2cb2:	73 07       	cpc	r23, r19
    2cb4:	84 07       	cpc	r24, r20
    2cb6:	ba 07       	cpc	r27, r26
    2cb8:	20 f0       	brcs	.+8      	; 0x2cc2 <__divsf3_pse+0xaa>
    2cba:	62 1b       	sub	r22, r18
    2cbc:	73 0b       	sbc	r23, r19
    2cbe:	84 0b       	sbc	r24, r20
    2cc0:	ba 0b       	sbc	r27, r26
    2cc2:	ee 1f       	adc	r30, r30
    2cc4:	88 f7       	brcc	.-30     	; 0x2ca8 <__divsf3_pse+0x90>
    2cc6:	e0 95       	com	r30
    2cc8:	08 95       	ret

00002cca <__fixunssfsi>:
    2cca:	98 d0       	rcall	.+304    	; 0x2dfc <__fp_splitA>
    2ccc:	88 f0       	brcs	.+34     	; 0x2cf0 <__fixunssfsi+0x26>
    2cce:	9f 57       	subi	r25, 0x7F	; 127
    2cd0:	90 f0       	brcs	.+36     	; 0x2cf6 <__fixunssfsi+0x2c>
    2cd2:	b9 2f       	mov	r27, r25
    2cd4:	99 27       	eor	r25, r25
    2cd6:	b7 51       	subi	r27, 0x17	; 23
    2cd8:	a0 f0       	brcs	.+40     	; 0x2d02 <__fixunssfsi+0x38>
    2cda:	d1 f0       	breq	.+52     	; 0x2d10 <__fixunssfsi+0x46>
    2cdc:	66 0f       	add	r22, r22
    2cde:	77 1f       	adc	r23, r23
    2ce0:	88 1f       	adc	r24, r24
    2ce2:	99 1f       	adc	r25, r25
    2ce4:	1a f0       	brmi	.+6      	; 0x2cec <__fixunssfsi+0x22>
    2ce6:	ba 95       	dec	r27
    2ce8:	c9 f7       	brne	.-14     	; 0x2cdc <__fixunssfsi+0x12>
    2cea:	12 c0       	rjmp	.+36     	; 0x2d10 <__fixunssfsi+0x46>
    2cec:	b1 30       	cpi	r27, 0x01	; 1
    2cee:	81 f0       	breq	.+32     	; 0x2d10 <__fixunssfsi+0x46>
    2cf0:	9f d0       	rcall	.+318    	; 0x2e30 <__fp_zero>
    2cf2:	b1 e0       	ldi	r27, 0x01	; 1
    2cf4:	08 95       	ret
    2cf6:	9c c0       	rjmp	.+312    	; 0x2e30 <__fp_zero>
    2cf8:	67 2f       	mov	r22, r23
    2cfa:	78 2f       	mov	r23, r24
    2cfc:	88 27       	eor	r24, r24
    2cfe:	b8 5f       	subi	r27, 0xF8	; 248
    2d00:	39 f0       	breq	.+14     	; 0x2d10 <__fixunssfsi+0x46>
    2d02:	b9 3f       	cpi	r27, 0xF9	; 249
    2d04:	cc f3       	brlt	.-14     	; 0x2cf8 <__fixunssfsi+0x2e>
    2d06:	86 95       	lsr	r24
    2d08:	77 95       	ror	r23
    2d0a:	67 95       	ror	r22
    2d0c:	b3 95       	inc	r27
    2d0e:	d9 f7       	brne	.-10     	; 0x2d06 <__fixunssfsi+0x3c>
    2d10:	3e f4       	brtc	.+14     	; 0x2d20 <__fixunssfsi+0x56>
    2d12:	90 95       	com	r25
    2d14:	80 95       	com	r24
    2d16:	70 95       	com	r23
    2d18:	61 95       	neg	r22
    2d1a:	7f 4f       	sbci	r23, 0xFF	; 255
    2d1c:	8f 4f       	sbci	r24, 0xFF	; 255
    2d1e:	9f 4f       	sbci	r25, 0xFF	; 255
    2d20:	08 95       	ret

00002d22 <__floatunsisf>:
    2d22:	e8 94       	clt
    2d24:	09 c0       	rjmp	.+18     	; 0x2d38 <__floatsisf+0x12>

00002d26 <__floatsisf>:
    2d26:	97 fb       	bst	r25, 7
    2d28:	3e f4       	brtc	.+14     	; 0x2d38 <__floatsisf+0x12>
    2d2a:	90 95       	com	r25
    2d2c:	80 95       	com	r24
    2d2e:	70 95       	com	r23
    2d30:	61 95       	neg	r22
    2d32:	7f 4f       	sbci	r23, 0xFF	; 255
    2d34:	8f 4f       	sbci	r24, 0xFF	; 255
    2d36:	9f 4f       	sbci	r25, 0xFF	; 255
    2d38:	99 23       	and	r25, r25
    2d3a:	a9 f0       	breq	.+42     	; 0x2d66 <__floatsisf+0x40>
    2d3c:	f9 2f       	mov	r31, r25
    2d3e:	96 e9       	ldi	r25, 0x96	; 150
    2d40:	bb 27       	eor	r27, r27
    2d42:	93 95       	inc	r25
    2d44:	f6 95       	lsr	r31
    2d46:	87 95       	ror	r24
    2d48:	77 95       	ror	r23
    2d4a:	67 95       	ror	r22
    2d4c:	b7 95       	ror	r27
    2d4e:	f1 11       	cpse	r31, r1
    2d50:	f8 cf       	rjmp	.-16     	; 0x2d42 <__floatsisf+0x1c>
    2d52:	fa f4       	brpl	.+62     	; 0x2d92 <__floatsisf+0x6c>
    2d54:	bb 0f       	add	r27, r27
    2d56:	11 f4       	brne	.+4      	; 0x2d5c <__floatsisf+0x36>
    2d58:	60 ff       	sbrs	r22, 0
    2d5a:	1b c0       	rjmp	.+54     	; 0x2d92 <__floatsisf+0x6c>
    2d5c:	6f 5f       	subi	r22, 0xFF	; 255
    2d5e:	7f 4f       	sbci	r23, 0xFF	; 255
    2d60:	8f 4f       	sbci	r24, 0xFF	; 255
    2d62:	9f 4f       	sbci	r25, 0xFF	; 255
    2d64:	16 c0       	rjmp	.+44     	; 0x2d92 <__floatsisf+0x6c>
    2d66:	88 23       	and	r24, r24
    2d68:	11 f0       	breq	.+4      	; 0x2d6e <__floatsisf+0x48>
    2d6a:	96 e9       	ldi	r25, 0x96	; 150
    2d6c:	11 c0       	rjmp	.+34     	; 0x2d90 <__floatsisf+0x6a>
    2d6e:	77 23       	and	r23, r23
    2d70:	21 f0       	breq	.+8      	; 0x2d7a <__floatsisf+0x54>
    2d72:	9e e8       	ldi	r25, 0x8E	; 142
    2d74:	87 2f       	mov	r24, r23
    2d76:	76 2f       	mov	r23, r22
    2d78:	05 c0       	rjmp	.+10     	; 0x2d84 <__floatsisf+0x5e>
    2d7a:	66 23       	and	r22, r22
    2d7c:	71 f0       	breq	.+28     	; 0x2d9a <__floatsisf+0x74>
    2d7e:	96 e8       	ldi	r25, 0x86	; 134
    2d80:	86 2f       	mov	r24, r22
    2d82:	70 e0       	ldi	r23, 0x00	; 0
    2d84:	60 e0       	ldi	r22, 0x00	; 0
    2d86:	2a f0       	brmi	.+10     	; 0x2d92 <__floatsisf+0x6c>
    2d88:	9a 95       	dec	r25
    2d8a:	66 0f       	add	r22, r22
    2d8c:	77 1f       	adc	r23, r23
    2d8e:	88 1f       	adc	r24, r24
    2d90:	da f7       	brpl	.-10     	; 0x2d88 <__floatsisf+0x62>
    2d92:	88 0f       	add	r24, r24
    2d94:	96 95       	lsr	r25
    2d96:	87 95       	ror	r24
    2d98:	97 f9       	bld	r25, 7
    2d9a:	08 95       	ret

00002d9c <__fp_inf>:
    2d9c:	97 f9       	bld	r25, 7
    2d9e:	9f 67       	ori	r25, 0x7F	; 127
    2da0:	80 e8       	ldi	r24, 0x80	; 128
    2da2:	70 e0       	ldi	r23, 0x00	; 0
    2da4:	60 e0       	ldi	r22, 0x00	; 0
    2da6:	08 95       	ret

00002da8 <__fp_nan>:
    2da8:	9f ef       	ldi	r25, 0xFF	; 255
    2daa:	80 ec       	ldi	r24, 0xC0	; 192
    2dac:	08 95       	ret

00002dae <__fp_pscA>:
    2dae:	00 24       	eor	r0, r0
    2db0:	0a 94       	dec	r0
    2db2:	16 16       	cp	r1, r22
    2db4:	17 06       	cpc	r1, r23
    2db6:	18 06       	cpc	r1, r24
    2db8:	09 06       	cpc	r0, r25
    2dba:	08 95       	ret

00002dbc <__fp_pscB>:
    2dbc:	00 24       	eor	r0, r0
    2dbe:	0a 94       	dec	r0
    2dc0:	12 16       	cp	r1, r18
    2dc2:	13 06       	cpc	r1, r19
    2dc4:	14 06       	cpc	r1, r20
    2dc6:	05 06       	cpc	r0, r21
    2dc8:	08 95       	ret

00002dca <__fp_round>:
    2dca:	09 2e       	mov	r0, r25
    2dcc:	03 94       	inc	r0
    2dce:	00 0c       	add	r0, r0
    2dd0:	11 f4       	brne	.+4      	; 0x2dd6 <__fp_round+0xc>
    2dd2:	88 23       	and	r24, r24
    2dd4:	52 f0       	brmi	.+20     	; 0x2dea <__fp_round+0x20>
    2dd6:	bb 0f       	add	r27, r27
    2dd8:	40 f4       	brcc	.+16     	; 0x2dea <__fp_round+0x20>
    2dda:	bf 2b       	or	r27, r31
    2ddc:	11 f4       	brne	.+4      	; 0x2de2 <__fp_round+0x18>
    2dde:	60 ff       	sbrs	r22, 0
    2de0:	04 c0       	rjmp	.+8      	; 0x2dea <__fp_round+0x20>
    2de2:	6f 5f       	subi	r22, 0xFF	; 255
    2de4:	7f 4f       	sbci	r23, 0xFF	; 255
    2de6:	8f 4f       	sbci	r24, 0xFF	; 255
    2de8:	9f 4f       	sbci	r25, 0xFF	; 255
    2dea:	08 95       	ret

00002dec <__fp_split3>:
    2dec:	57 fd       	sbrc	r21, 7
    2dee:	90 58       	subi	r25, 0x80	; 128
    2df0:	44 0f       	add	r20, r20
    2df2:	55 1f       	adc	r21, r21
    2df4:	59 f0       	breq	.+22     	; 0x2e0c <__fp_splitA+0x10>
    2df6:	5f 3f       	cpi	r21, 0xFF	; 255
    2df8:	71 f0       	breq	.+28     	; 0x2e16 <__fp_splitA+0x1a>
    2dfa:	47 95       	ror	r20

00002dfc <__fp_splitA>:
    2dfc:	88 0f       	add	r24, r24
    2dfe:	97 fb       	bst	r25, 7
    2e00:	99 1f       	adc	r25, r25
    2e02:	61 f0       	breq	.+24     	; 0x2e1c <__fp_splitA+0x20>
    2e04:	9f 3f       	cpi	r25, 0xFF	; 255
    2e06:	79 f0       	breq	.+30     	; 0x2e26 <__fp_splitA+0x2a>
    2e08:	87 95       	ror	r24
    2e0a:	08 95       	ret
    2e0c:	12 16       	cp	r1, r18
    2e0e:	13 06       	cpc	r1, r19
    2e10:	14 06       	cpc	r1, r20
    2e12:	55 1f       	adc	r21, r21
    2e14:	f2 cf       	rjmp	.-28     	; 0x2dfa <__fp_split3+0xe>
    2e16:	46 95       	lsr	r20
    2e18:	f1 df       	rcall	.-30     	; 0x2dfc <__fp_splitA>
    2e1a:	08 c0       	rjmp	.+16     	; 0x2e2c <__fp_splitA+0x30>
    2e1c:	16 16       	cp	r1, r22
    2e1e:	17 06       	cpc	r1, r23
    2e20:	18 06       	cpc	r1, r24
    2e22:	99 1f       	adc	r25, r25
    2e24:	f1 cf       	rjmp	.-30     	; 0x2e08 <__fp_splitA+0xc>
    2e26:	86 95       	lsr	r24
    2e28:	71 05       	cpc	r23, r1
    2e2a:	61 05       	cpc	r22, r1
    2e2c:	08 94       	sec
    2e2e:	08 95       	ret

00002e30 <__fp_zero>:
    2e30:	e8 94       	clt

00002e32 <__fp_szero>:
    2e32:	bb 27       	eor	r27, r27
    2e34:	66 27       	eor	r22, r22
    2e36:	77 27       	eor	r23, r23
    2e38:	cb 01       	movw	r24, r22
    2e3a:	97 f9       	bld	r25, 7
    2e3c:	08 95       	ret

00002e3e <__mulsf3>:
    2e3e:	0b d0       	rcall	.+22     	; 0x2e56 <__mulsf3x>
    2e40:	c4 cf       	rjmp	.-120    	; 0x2dca <__fp_round>
    2e42:	b5 df       	rcall	.-150    	; 0x2dae <__fp_pscA>
    2e44:	28 f0       	brcs	.+10     	; 0x2e50 <__mulsf3+0x12>
    2e46:	ba df       	rcall	.-140    	; 0x2dbc <__fp_pscB>
    2e48:	18 f0       	brcs	.+6      	; 0x2e50 <__mulsf3+0x12>
    2e4a:	95 23       	and	r25, r21
    2e4c:	09 f0       	breq	.+2      	; 0x2e50 <__mulsf3+0x12>
    2e4e:	a6 cf       	rjmp	.-180    	; 0x2d9c <__fp_inf>
    2e50:	ab cf       	rjmp	.-170    	; 0x2da8 <__fp_nan>
    2e52:	11 24       	eor	r1, r1
    2e54:	ee cf       	rjmp	.-36     	; 0x2e32 <__fp_szero>

00002e56 <__mulsf3x>:
    2e56:	ca df       	rcall	.-108    	; 0x2dec <__fp_split3>
    2e58:	a0 f3       	brcs	.-24     	; 0x2e42 <__mulsf3+0x4>

00002e5a <__mulsf3_pse>:
    2e5a:	95 9f       	mul	r25, r21
    2e5c:	d1 f3       	breq	.-12     	; 0x2e52 <__mulsf3+0x14>
    2e5e:	95 0f       	add	r25, r21
    2e60:	50 e0       	ldi	r21, 0x00	; 0
    2e62:	55 1f       	adc	r21, r21
    2e64:	62 9f       	mul	r22, r18
    2e66:	f0 01       	movw	r30, r0
    2e68:	72 9f       	mul	r23, r18
    2e6a:	bb 27       	eor	r27, r27
    2e6c:	f0 0d       	add	r31, r0
    2e6e:	b1 1d       	adc	r27, r1
    2e70:	63 9f       	mul	r22, r19
    2e72:	aa 27       	eor	r26, r26
    2e74:	f0 0d       	add	r31, r0
    2e76:	b1 1d       	adc	r27, r1
    2e78:	aa 1f       	adc	r26, r26
    2e7a:	64 9f       	mul	r22, r20
    2e7c:	66 27       	eor	r22, r22
    2e7e:	b0 0d       	add	r27, r0
    2e80:	a1 1d       	adc	r26, r1
    2e82:	66 1f       	adc	r22, r22
    2e84:	82 9f       	mul	r24, r18
    2e86:	22 27       	eor	r18, r18
    2e88:	b0 0d       	add	r27, r0
    2e8a:	a1 1d       	adc	r26, r1
    2e8c:	62 1f       	adc	r22, r18
    2e8e:	73 9f       	mul	r23, r19
    2e90:	b0 0d       	add	r27, r0
    2e92:	a1 1d       	adc	r26, r1
    2e94:	62 1f       	adc	r22, r18
    2e96:	83 9f       	mul	r24, r19
    2e98:	a0 0d       	add	r26, r0
    2e9a:	61 1d       	adc	r22, r1
    2e9c:	22 1f       	adc	r18, r18
    2e9e:	74 9f       	mul	r23, r20
    2ea0:	33 27       	eor	r19, r19
    2ea2:	a0 0d       	add	r26, r0
    2ea4:	61 1d       	adc	r22, r1
    2ea6:	23 1f       	adc	r18, r19
    2ea8:	84 9f       	mul	r24, r20
    2eaa:	60 0d       	add	r22, r0
    2eac:	21 1d       	adc	r18, r1
    2eae:	82 2f       	mov	r24, r18
    2eb0:	76 2f       	mov	r23, r22
    2eb2:	6a 2f       	mov	r22, r26
    2eb4:	11 24       	eor	r1, r1
    2eb6:	9f 57       	subi	r25, 0x7F	; 127
    2eb8:	50 40       	sbci	r21, 0x00	; 0
    2eba:	8a f0       	brmi	.+34     	; 0x2ede <__mulsf3_pse+0x84>
    2ebc:	e1 f0       	breq	.+56     	; 0x2ef6 <__mulsf3_pse+0x9c>
    2ebe:	88 23       	and	r24, r24
    2ec0:	4a f0       	brmi	.+18     	; 0x2ed4 <__mulsf3_pse+0x7a>
    2ec2:	ee 0f       	add	r30, r30
    2ec4:	ff 1f       	adc	r31, r31
    2ec6:	bb 1f       	adc	r27, r27
    2ec8:	66 1f       	adc	r22, r22
    2eca:	77 1f       	adc	r23, r23
    2ecc:	88 1f       	adc	r24, r24
    2ece:	91 50       	subi	r25, 0x01	; 1
    2ed0:	50 40       	sbci	r21, 0x00	; 0
    2ed2:	a9 f7       	brne	.-22     	; 0x2ebe <__mulsf3_pse+0x64>
    2ed4:	9e 3f       	cpi	r25, 0xFE	; 254
    2ed6:	51 05       	cpc	r21, r1
    2ed8:	70 f0       	brcs	.+28     	; 0x2ef6 <__mulsf3_pse+0x9c>
    2eda:	60 cf       	rjmp	.-320    	; 0x2d9c <__fp_inf>
    2edc:	aa cf       	rjmp	.-172    	; 0x2e32 <__fp_szero>
    2ede:	5f 3f       	cpi	r21, 0xFF	; 255
    2ee0:	ec f3       	brlt	.-6      	; 0x2edc <__mulsf3_pse+0x82>
    2ee2:	98 3e       	cpi	r25, 0xE8	; 232
    2ee4:	dc f3       	brlt	.-10     	; 0x2edc <__mulsf3_pse+0x82>
    2ee6:	86 95       	lsr	r24
    2ee8:	77 95       	ror	r23
    2eea:	67 95       	ror	r22
    2eec:	b7 95       	ror	r27
    2eee:	f7 95       	ror	r31
    2ef0:	e7 95       	ror	r30
    2ef2:	9f 5f       	subi	r25, 0xFF	; 255
    2ef4:	c1 f7       	brne	.-16     	; 0x2ee6 <__mulsf3_pse+0x8c>
    2ef6:	fe 2b       	or	r31, r30
    2ef8:	88 0f       	add	r24, r24
    2efa:	91 1d       	adc	r25, r1
    2efc:	96 95       	lsr	r25
    2efe:	87 95       	ror	r24
    2f00:	97 f9       	bld	r25, 7
    2f02:	08 95       	ret

00002f04 <__udivmodsi4>:
    2f04:	a1 e2       	ldi	r26, 0x21	; 33
    2f06:	1a 2e       	mov	r1, r26
    2f08:	aa 1b       	sub	r26, r26
    2f0a:	bb 1b       	sub	r27, r27
    2f0c:	fd 01       	movw	r30, r26
    2f0e:	0d c0       	rjmp	.+26     	; 0x2f2a <__udivmodsi4_ep>

00002f10 <__udivmodsi4_loop>:
    2f10:	aa 1f       	adc	r26, r26
    2f12:	bb 1f       	adc	r27, r27
    2f14:	ee 1f       	adc	r30, r30
    2f16:	ff 1f       	adc	r31, r31
    2f18:	a2 17       	cp	r26, r18
    2f1a:	b3 07       	cpc	r27, r19
    2f1c:	e4 07       	cpc	r30, r20
    2f1e:	f5 07       	cpc	r31, r21
    2f20:	20 f0       	brcs	.+8      	; 0x2f2a <__udivmodsi4_ep>
    2f22:	a2 1b       	sub	r26, r18
    2f24:	b3 0b       	sbc	r27, r19
    2f26:	e4 0b       	sbc	r30, r20
    2f28:	f5 0b       	sbc	r31, r21

00002f2a <__udivmodsi4_ep>:
    2f2a:	66 1f       	adc	r22, r22
    2f2c:	77 1f       	adc	r23, r23
    2f2e:	88 1f       	adc	r24, r24
    2f30:	99 1f       	adc	r25, r25
    2f32:	1a 94       	dec	r1
    2f34:	69 f7       	brne	.-38     	; 0x2f10 <__udivmodsi4_loop>
    2f36:	60 95       	com	r22
    2f38:	70 95       	com	r23
    2f3a:	80 95       	com	r24
    2f3c:	90 95       	com	r25
    2f3e:	9b 01       	movw	r18, r22
    2f40:	ac 01       	movw	r20, r24
    2f42:	bd 01       	movw	r22, r26
    2f44:	cf 01       	movw	r24, r30
    2f46:	08 95       	ret

00002f48 <__tablejump2__>:
    2f48:	ee 0f       	add	r30, r30
    2f4a:	ff 1f       	adc	r31, r31
    2f4c:	88 1f       	adc	r24, r24
    2f4e:	8b bf       	out	0x3b, r24	; 59
    2f50:	07 90       	elpm	r0, Z+
    2f52:	f6 91       	elpm	r31, Z
    2f54:	e0 2d       	mov	r30, r0
    2f56:	19 94       	eijmp

00002f58 <calloc>:
    2f58:	0f 93       	push	r16
    2f5a:	1f 93       	push	r17
    2f5c:	cf 93       	push	r28
    2f5e:	df 93       	push	r29
    2f60:	86 9f       	mul	r24, r22
    2f62:	80 01       	movw	r16, r0
    2f64:	87 9f       	mul	r24, r23
    2f66:	10 0d       	add	r17, r0
    2f68:	96 9f       	mul	r25, r22
    2f6a:	10 0d       	add	r17, r0
    2f6c:	11 24       	eor	r1, r1
    2f6e:	c8 01       	movw	r24, r16
    2f70:	0d d0       	rcall	.+26     	; 0x2f8c <malloc>
    2f72:	ec 01       	movw	r28, r24
    2f74:	00 97       	sbiw	r24, 0x00	; 0
    2f76:	21 f0       	breq	.+8      	; 0x2f80 <calloc+0x28>
    2f78:	a8 01       	movw	r20, r16
    2f7a:	60 e0       	ldi	r22, 0x00	; 0
    2f7c:	70 e0       	ldi	r23, 0x00	; 0
    2f7e:	34 d1       	rcall	.+616    	; 0x31e8 <memset>
    2f80:	ce 01       	movw	r24, r28
    2f82:	df 91       	pop	r29
    2f84:	cf 91       	pop	r28
    2f86:	1f 91       	pop	r17
    2f88:	0f 91       	pop	r16
    2f8a:	08 95       	ret

00002f8c <malloc>:
    2f8c:	0f 93       	push	r16
    2f8e:	1f 93       	push	r17
    2f90:	cf 93       	push	r28
    2f92:	df 93       	push	r29
    2f94:	82 30       	cpi	r24, 0x02	; 2
    2f96:	91 05       	cpc	r25, r1
    2f98:	10 f4       	brcc	.+4      	; 0x2f9e <malloc+0x12>
    2f9a:	82 e0       	ldi	r24, 0x02	; 2
    2f9c:	90 e0       	ldi	r25, 0x00	; 0
    2f9e:	e0 91 d5 12 	lds	r30, 0x12D5	; 0x8012d5 <__flp>
    2fa2:	f0 91 d6 12 	lds	r31, 0x12D6	; 0x8012d6 <__flp+0x1>
    2fa6:	20 e0       	ldi	r18, 0x00	; 0
    2fa8:	30 e0       	ldi	r19, 0x00	; 0
    2faa:	a0 e0       	ldi	r26, 0x00	; 0
    2fac:	b0 e0       	ldi	r27, 0x00	; 0
    2fae:	30 97       	sbiw	r30, 0x00	; 0
    2fb0:	19 f1       	breq	.+70     	; 0x2ff8 <malloc+0x6c>
    2fb2:	40 81       	ld	r20, Z
    2fb4:	51 81       	ldd	r21, Z+1	; 0x01
    2fb6:	02 81       	ldd	r16, Z+2	; 0x02
    2fb8:	13 81       	ldd	r17, Z+3	; 0x03
    2fba:	48 17       	cp	r20, r24
    2fbc:	59 07       	cpc	r21, r25
    2fbe:	c8 f0       	brcs	.+50     	; 0x2ff2 <malloc+0x66>
    2fc0:	84 17       	cp	r24, r20
    2fc2:	95 07       	cpc	r25, r21
    2fc4:	69 f4       	brne	.+26     	; 0x2fe0 <malloc+0x54>
    2fc6:	10 97       	sbiw	r26, 0x00	; 0
    2fc8:	31 f0       	breq	.+12     	; 0x2fd6 <malloc+0x4a>
    2fca:	12 96       	adiw	r26, 0x02	; 2
    2fcc:	0c 93       	st	X, r16
    2fce:	12 97       	sbiw	r26, 0x02	; 2
    2fd0:	13 96       	adiw	r26, 0x03	; 3
    2fd2:	1c 93       	st	X, r17
    2fd4:	27 c0       	rjmp	.+78     	; 0x3024 <malloc+0x98>
    2fd6:	00 93 d5 12 	sts	0x12D5, r16	; 0x8012d5 <__flp>
    2fda:	10 93 d6 12 	sts	0x12D6, r17	; 0x8012d6 <__flp+0x1>
    2fde:	22 c0       	rjmp	.+68     	; 0x3024 <malloc+0x98>
    2fe0:	21 15       	cp	r18, r1
    2fe2:	31 05       	cpc	r19, r1
    2fe4:	19 f0       	breq	.+6      	; 0x2fec <malloc+0x60>
    2fe6:	42 17       	cp	r20, r18
    2fe8:	53 07       	cpc	r21, r19
    2fea:	18 f4       	brcc	.+6      	; 0x2ff2 <malloc+0x66>
    2fec:	9a 01       	movw	r18, r20
    2fee:	bd 01       	movw	r22, r26
    2ff0:	ef 01       	movw	r28, r30
    2ff2:	df 01       	movw	r26, r30
    2ff4:	f8 01       	movw	r30, r16
    2ff6:	db cf       	rjmp	.-74     	; 0x2fae <malloc+0x22>
    2ff8:	21 15       	cp	r18, r1
    2ffa:	31 05       	cpc	r19, r1
    2ffc:	f9 f0       	breq	.+62     	; 0x303c <malloc+0xb0>
    2ffe:	28 1b       	sub	r18, r24
    3000:	39 0b       	sbc	r19, r25
    3002:	24 30       	cpi	r18, 0x04	; 4
    3004:	31 05       	cpc	r19, r1
    3006:	80 f4       	brcc	.+32     	; 0x3028 <malloc+0x9c>
    3008:	8a 81       	ldd	r24, Y+2	; 0x02
    300a:	9b 81       	ldd	r25, Y+3	; 0x03
    300c:	61 15       	cp	r22, r1
    300e:	71 05       	cpc	r23, r1
    3010:	21 f0       	breq	.+8      	; 0x301a <malloc+0x8e>
    3012:	fb 01       	movw	r30, r22
    3014:	93 83       	std	Z+3, r25	; 0x03
    3016:	82 83       	std	Z+2, r24	; 0x02
    3018:	04 c0       	rjmp	.+8      	; 0x3022 <malloc+0x96>
    301a:	90 93 d6 12 	sts	0x12D6, r25	; 0x8012d6 <__flp+0x1>
    301e:	80 93 d5 12 	sts	0x12D5, r24	; 0x8012d5 <__flp>
    3022:	fe 01       	movw	r30, r28
    3024:	32 96       	adiw	r30, 0x02	; 2
    3026:	44 c0       	rjmp	.+136    	; 0x30b0 <malloc+0x124>
    3028:	fe 01       	movw	r30, r28
    302a:	e2 0f       	add	r30, r18
    302c:	f3 1f       	adc	r31, r19
    302e:	81 93       	st	Z+, r24
    3030:	91 93       	st	Z+, r25
    3032:	22 50       	subi	r18, 0x02	; 2
    3034:	31 09       	sbc	r19, r1
    3036:	39 83       	std	Y+1, r19	; 0x01
    3038:	28 83       	st	Y, r18
    303a:	3a c0       	rjmp	.+116    	; 0x30b0 <malloc+0x124>
    303c:	20 91 d3 12 	lds	r18, 0x12D3	; 0x8012d3 <__brkval>
    3040:	30 91 d4 12 	lds	r19, 0x12D4	; 0x8012d4 <__brkval+0x1>
    3044:	23 2b       	or	r18, r19
    3046:	41 f4       	brne	.+16     	; 0x3058 <malloc+0xcc>
    3048:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    304c:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    3050:	30 93 d4 12 	sts	0x12D4, r19	; 0x8012d4 <__brkval+0x1>
    3054:	20 93 d3 12 	sts	0x12D3, r18	; 0x8012d3 <__brkval>
    3058:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
    305c:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    3060:	21 15       	cp	r18, r1
    3062:	31 05       	cpc	r19, r1
    3064:	41 f4       	brne	.+16     	; 0x3076 <malloc+0xea>
    3066:	2d b7       	in	r18, 0x3d	; 61
    3068:	3e b7       	in	r19, 0x3e	; 62
    306a:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    306e:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    3072:	24 1b       	sub	r18, r20
    3074:	35 0b       	sbc	r19, r21
    3076:	e0 91 d3 12 	lds	r30, 0x12D3	; 0x8012d3 <__brkval>
    307a:	f0 91 d4 12 	lds	r31, 0x12D4	; 0x8012d4 <__brkval+0x1>
    307e:	e2 17       	cp	r30, r18
    3080:	f3 07       	cpc	r31, r19
    3082:	a0 f4       	brcc	.+40     	; 0x30ac <malloc+0x120>
    3084:	2e 1b       	sub	r18, r30
    3086:	3f 0b       	sbc	r19, r31
    3088:	28 17       	cp	r18, r24
    308a:	39 07       	cpc	r19, r25
    308c:	78 f0       	brcs	.+30     	; 0x30ac <malloc+0x120>
    308e:	ac 01       	movw	r20, r24
    3090:	4e 5f       	subi	r20, 0xFE	; 254
    3092:	5f 4f       	sbci	r21, 0xFF	; 255
    3094:	24 17       	cp	r18, r20
    3096:	35 07       	cpc	r19, r21
    3098:	48 f0       	brcs	.+18     	; 0x30ac <malloc+0x120>
    309a:	4e 0f       	add	r20, r30
    309c:	5f 1f       	adc	r21, r31
    309e:	50 93 d4 12 	sts	0x12D4, r21	; 0x8012d4 <__brkval+0x1>
    30a2:	40 93 d3 12 	sts	0x12D3, r20	; 0x8012d3 <__brkval>
    30a6:	81 93       	st	Z+, r24
    30a8:	91 93       	st	Z+, r25
    30aa:	02 c0       	rjmp	.+4      	; 0x30b0 <malloc+0x124>
    30ac:	e0 e0       	ldi	r30, 0x00	; 0
    30ae:	f0 e0       	ldi	r31, 0x00	; 0
    30b0:	cf 01       	movw	r24, r30
    30b2:	df 91       	pop	r29
    30b4:	cf 91       	pop	r28
    30b6:	1f 91       	pop	r17
    30b8:	0f 91       	pop	r16
    30ba:	08 95       	ret

000030bc <free>:
    30bc:	cf 93       	push	r28
    30be:	df 93       	push	r29
    30c0:	00 97       	sbiw	r24, 0x00	; 0
    30c2:	09 f4       	brne	.+2      	; 0x30c6 <free+0xa>
    30c4:	81 c0       	rjmp	.+258    	; 0x31c8 <free+0x10c>
    30c6:	fc 01       	movw	r30, r24
    30c8:	32 97       	sbiw	r30, 0x02	; 2
    30ca:	13 82       	std	Z+3, r1	; 0x03
    30cc:	12 82       	std	Z+2, r1	; 0x02
    30ce:	a0 91 d5 12 	lds	r26, 0x12D5	; 0x8012d5 <__flp>
    30d2:	b0 91 d6 12 	lds	r27, 0x12D6	; 0x8012d6 <__flp+0x1>
    30d6:	10 97       	sbiw	r26, 0x00	; 0
    30d8:	81 f4       	brne	.+32     	; 0x30fa <free+0x3e>
    30da:	20 81       	ld	r18, Z
    30dc:	31 81       	ldd	r19, Z+1	; 0x01
    30de:	82 0f       	add	r24, r18
    30e0:	93 1f       	adc	r25, r19
    30e2:	20 91 d3 12 	lds	r18, 0x12D3	; 0x8012d3 <__brkval>
    30e6:	30 91 d4 12 	lds	r19, 0x12D4	; 0x8012d4 <__brkval+0x1>
    30ea:	28 17       	cp	r18, r24
    30ec:	39 07       	cpc	r19, r25
    30ee:	51 f5       	brne	.+84     	; 0x3144 <free+0x88>
    30f0:	f0 93 d4 12 	sts	0x12D4, r31	; 0x8012d4 <__brkval+0x1>
    30f4:	e0 93 d3 12 	sts	0x12D3, r30	; 0x8012d3 <__brkval>
    30f8:	67 c0       	rjmp	.+206    	; 0x31c8 <free+0x10c>
    30fa:	ed 01       	movw	r28, r26
    30fc:	20 e0       	ldi	r18, 0x00	; 0
    30fe:	30 e0       	ldi	r19, 0x00	; 0
    3100:	ce 17       	cp	r28, r30
    3102:	df 07       	cpc	r29, r31
    3104:	40 f4       	brcc	.+16     	; 0x3116 <free+0x5a>
    3106:	4a 81       	ldd	r20, Y+2	; 0x02
    3108:	5b 81       	ldd	r21, Y+3	; 0x03
    310a:	9e 01       	movw	r18, r28
    310c:	41 15       	cp	r20, r1
    310e:	51 05       	cpc	r21, r1
    3110:	f1 f0       	breq	.+60     	; 0x314e <free+0x92>
    3112:	ea 01       	movw	r28, r20
    3114:	f5 cf       	rjmp	.-22     	; 0x3100 <free+0x44>
    3116:	d3 83       	std	Z+3, r29	; 0x03
    3118:	c2 83       	std	Z+2, r28	; 0x02
    311a:	40 81       	ld	r20, Z
    311c:	51 81       	ldd	r21, Z+1	; 0x01
    311e:	84 0f       	add	r24, r20
    3120:	95 1f       	adc	r25, r21
    3122:	c8 17       	cp	r28, r24
    3124:	d9 07       	cpc	r29, r25
    3126:	59 f4       	brne	.+22     	; 0x313e <free+0x82>
    3128:	88 81       	ld	r24, Y
    312a:	99 81       	ldd	r25, Y+1	; 0x01
    312c:	84 0f       	add	r24, r20
    312e:	95 1f       	adc	r25, r21
    3130:	02 96       	adiw	r24, 0x02	; 2
    3132:	91 83       	std	Z+1, r25	; 0x01
    3134:	80 83       	st	Z, r24
    3136:	8a 81       	ldd	r24, Y+2	; 0x02
    3138:	9b 81       	ldd	r25, Y+3	; 0x03
    313a:	93 83       	std	Z+3, r25	; 0x03
    313c:	82 83       	std	Z+2, r24	; 0x02
    313e:	21 15       	cp	r18, r1
    3140:	31 05       	cpc	r19, r1
    3142:	29 f4       	brne	.+10     	; 0x314e <free+0x92>
    3144:	f0 93 d6 12 	sts	0x12D6, r31	; 0x8012d6 <__flp+0x1>
    3148:	e0 93 d5 12 	sts	0x12D5, r30	; 0x8012d5 <__flp>
    314c:	3d c0       	rjmp	.+122    	; 0x31c8 <free+0x10c>
    314e:	e9 01       	movw	r28, r18
    3150:	fb 83       	std	Y+3, r31	; 0x03
    3152:	ea 83       	std	Y+2, r30	; 0x02
    3154:	49 91       	ld	r20, Y+
    3156:	59 91       	ld	r21, Y+
    3158:	c4 0f       	add	r28, r20
    315a:	d5 1f       	adc	r29, r21
    315c:	ec 17       	cp	r30, r28
    315e:	fd 07       	cpc	r31, r29
    3160:	61 f4       	brne	.+24     	; 0x317a <free+0xbe>
    3162:	80 81       	ld	r24, Z
    3164:	91 81       	ldd	r25, Z+1	; 0x01
    3166:	84 0f       	add	r24, r20
    3168:	95 1f       	adc	r25, r21
    316a:	02 96       	adiw	r24, 0x02	; 2
    316c:	e9 01       	movw	r28, r18
    316e:	99 83       	std	Y+1, r25	; 0x01
    3170:	88 83       	st	Y, r24
    3172:	82 81       	ldd	r24, Z+2	; 0x02
    3174:	93 81       	ldd	r25, Z+3	; 0x03
    3176:	9b 83       	std	Y+3, r25	; 0x03
    3178:	8a 83       	std	Y+2, r24	; 0x02
    317a:	e0 e0       	ldi	r30, 0x00	; 0
    317c:	f0 e0       	ldi	r31, 0x00	; 0
    317e:	12 96       	adiw	r26, 0x02	; 2
    3180:	8d 91       	ld	r24, X+
    3182:	9c 91       	ld	r25, X
    3184:	13 97       	sbiw	r26, 0x03	; 3
    3186:	00 97       	sbiw	r24, 0x00	; 0
    3188:	19 f0       	breq	.+6      	; 0x3190 <free+0xd4>
    318a:	fd 01       	movw	r30, r26
    318c:	dc 01       	movw	r26, r24
    318e:	f7 cf       	rjmp	.-18     	; 0x317e <free+0xc2>
    3190:	8d 91       	ld	r24, X+
    3192:	9c 91       	ld	r25, X
    3194:	11 97       	sbiw	r26, 0x01	; 1
    3196:	9d 01       	movw	r18, r26
    3198:	2e 5f       	subi	r18, 0xFE	; 254
    319a:	3f 4f       	sbci	r19, 0xFF	; 255
    319c:	82 0f       	add	r24, r18
    319e:	93 1f       	adc	r25, r19
    31a0:	20 91 d3 12 	lds	r18, 0x12D3	; 0x8012d3 <__brkval>
    31a4:	30 91 d4 12 	lds	r19, 0x12D4	; 0x8012d4 <__brkval+0x1>
    31a8:	28 17       	cp	r18, r24
    31aa:	39 07       	cpc	r19, r25
    31ac:	69 f4       	brne	.+26     	; 0x31c8 <free+0x10c>
    31ae:	30 97       	sbiw	r30, 0x00	; 0
    31b0:	29 f4       	brne	.+10     	; 0x31bc <free+0x100>
    31b2:	10 92 d6 12 	sts	0x12D6, r1	; 0x8012d6 <__flp+0x1>
    31b6:	10 92 d5 12 	sts	0x12D5, r1	; 0x8012d5 <__flp>
    31ba:	02 c0       	rjmp	.+4      	; 0x31c0 <free+0x104>
    31bc:	13 82       	std	Z+3, r1	; 0x03
    31be:	12 82       	std	Z+2, r1	; 0x02
    31c0:	b0 93 d4 12 	sts	0x12D4, r27	; 0x8012d4 <__brkval+0x1>
    31c4:	a0 93 d3 12 	sts	0x12D3, r26	; 0x8012d3 <__brkval>
    31c8:	df 91       	pop	r29
    31ca:	cf 91       	pop	r28
    31cc:	08 95       	ret

000031ce <abort>:
    31ce:	81 e0       	ldi	r24, 0x01	; 1
    31d0:	90 e0       	ldi	r25, 0x00	; 0
    31d2:	f8 94       	cli
    31d4:	40 c0       	rjmp	.+128    	; 0x3256 <_exit>

000031d6 <memcpy>:
    31d6:	fb 01       	movw	r30, r22
    31d8:	dc 01       	movw	r26, r24
    31da:	02 c0       	rjmp	.+4      	; 0x31e0 <memcpy+0xa>
    31dc:	01 90       	ld	r0, Z+
    31de:	0d 92       	st	X+, r0
    31e0:	41 50       	subi	r20, 0x01	; 1
    31e2:	50 40       	sbci	r21, 0x00	; 0
    31e4:	d8 f7       	brcc	.-10     	; 0x31dc <memcpy+0x6>
    31e6:	08 95       	ret

000031e8 <memset>:
    31e8:	dc 01       	movw	r26, r24
    31ea:	01 c0       	rjmp	.+2      	; 0x31ee <memset+0x6>
    31ec:	6d 93       	st	X+, r22
    31ee:	41 50       	subi	r20, 0x01	; 1
    31f0:	50 40       	sbci	r21, 0x00	; 0
    31f2:	e0 f7       	brcc	.-8      	; 0x31ec <memset+0x4>
    31f4:	08 95       	ret

000031f6 <puts>:
    31f6:	0f 93       	push	r16
    31f8:	1f 93       	push	r17
    31fa:	cf 93       	push	r28
    31fc:	df 93       	push	r29
    31fe:	e0 91 d9 12 	lds	r30, 0x12D9	; 0x8012d9 <__iob+0x2>
    3202:	f0 91 da 12 	lds	r31, 0x12DA	; 0x8012da <__iob+0x3>
    3206:	23 81       	ldd	r18, Z+3	; 0x03
    3208:	21 ff       	sbrs	r18, 1
    320a:	1b c0       	rjmp	.+54     	; 0x3242 <puts+0x4c>
    320c:	8c 01       	movw	r16, r24
    320e:	d0 e0       	ldi	r29, 0x00	; 0
    3210:	c0 e0       	ldi	r28, 0x00	; 0
    3212:	f8 01       	movw	r30, r16
    3214:	81 91       	ld	r24, Z+
    3216:	8f 01       	movw	r16, r30
    3218:	60 91 d9 12 	lds	r22, 0x12D9	; 0x8012d9 <__iob+0x2>
    321c:	70 91 da 12 	lds	r23, 0x12DA	; 0x8012da <__iob+0x3>
    3220:	db 01       	movw	r26, r22
    3222:	18 96       	adiw	r26, 0x08	; 8
    3224:	ed 91       	ld	r30, X+
    3226:	fc 91       	ld	r31, X
    3228:	19 97       	sbiw	r26, 0x09	; 9
    322a:	88 23       	and	r24, r24
    322c:	31 f0       	breq	.+12     	; 0x323a <puts+0x44>
    322e:	19 95       	eicall
    3230:	89 2b       	or	r24, r25
    3232:	79 f3       	breq	.-34     	; 0x3212 <puts+0x1c>
    3234:	df ef       	ldi	r29, 0xFF	; 255
    3236:	cf ef       	ldi	r28, 0xFF	; 255
    3238:	ec cf       	rjmp	.-40     	; 0x3212 <puts+0x1c>
    323a:	8a e0       	ldi	r24, 0x0A	; 10
    323c:	19 95       	eicall
    323e:	89 2b       	or	r24, r25
    3240:	19 f0       	breq	.+6      	; 0x3248 <puts+0x52>
    3242:	8f ef       	ldi	r24, 0xFF	; 255
    3244:	9f ef       	ldi	r25, 0xFF	; 255
    3246:	02 c0       	rjmp	.+4      	; 0x324c <puts+0x56>
    3248:	8d 2f       	mov	r24, r29
    324a:	9c 2f       	mov	r25, r28
    324c:	df 91       	pop	r29
    324e:	cf 91       	pop	r28
    3250:	1f 91       	pop	r17
    3252:	0f 91       	pop	r16
    3254:	08 95       	ret

00003256 <_exit>:
    3256:	f8 94       	cli

00003258 <__stop_program>:
    3258:	ff cf       	rjmp	.-2      	; 0x3258 <__stop_program>
